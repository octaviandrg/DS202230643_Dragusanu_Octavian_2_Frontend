{"ast":null,"code":"'use strict';\n\nvar d3Hierarchy = require('d3-hierarchy');\n\nvar flipTree = require('../treemap/flip_tree');\n\nmodule.exports = function partition(entry, size, opts) {\n  var flipX = opts.flipX;\n  var flipY = opts.flipY;\n  var swapXY = opts.orientation === 'h';\n  var maxDepth = opts.maxDepth;\n  var newWidth = size[0];\n  var newHeight = size[1];\n\n  if (maxDepth) {\n    newWidth = (entry.height + 1) * size[0] / Math.min(entry.height + 1, maxDepth);\n    newHeight = (entry.height + 1) * size[1] / Math.min(entry.height + 1, maxDepth);\n  }\n\n  var result = d3Hierarchy.partition().padding(opts.pad.inner).size(swapXY ? [size[1], newWidth] : [size[0], newHeight])(entry);\n\n  if (swapXY || flipX || flipY) {\n    flipTree(result, size, {\n      swapXY: swapXY,\n      flipX: flipX,\n      flipY: flipY\n    });\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"script"}