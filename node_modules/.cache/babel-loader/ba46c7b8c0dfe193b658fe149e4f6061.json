{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar pushUnique = Lib.pushUnique;\n\nvar subTypes = require('../scatter/subtypes');\n\nvar helpers = require('./helpers');\n\nmodule.exports = function select(searchInfo, selectionTester) {\n  var cd = searchInfo.cd;\n  var trace = cd[0].trace;\n  var stash = cd[0].t;\n  var scene = searchInfo.scene;\n  var cdata = scene.matrixOptions.cdata;\n  var xa = searchInfo.xaxis;\n  var ya = searchInfo.yaxis;\n  var selection = [];\n  if (!scene) return selection;\n  var hasOnlyLines = !subTypes.hasMarkers(trace) && !subTypes.hasText(trace);\n  if (trace.visible !== true || hasOnlyLines) return selection;\n  var xi = helpers.getDimIndex(trace, xa);\n  var yi = helpers.getDimIndex(trace, ya);\n  if (xi === false || yi === false) return selection;\n  var xpx = stash.xpx[xi];\n  var ypx = stash.ypx[yi];\n  var x = cdata[xi];\n  var y = cdata[yi];\n  var els = (searchInfo.scene.selectBatch || []).slice();\n  var unels = []; // degenerate polygon does not enable selection\n  // filter out points by visible scatter ones\n\n  if (selectionTester !== false && !selectionTester.degenerate) {\n    for (var i = 0; i < x.length; i++) {\n      if (selectionTester.contains([xpx[i], ypx[i]], null, i, searchInfo)) {\n        selection.push({\n          pointNumber: i,\n          x: x[i],\n          y: y[i]\n        });\n        pushUnique(els, i);\n      } else if (els.indexOf(i) !== -1) {\n        pushUnique(els, i);\n      } else {\n        unels.push(i);\n      }\n    }\n  }\n\n  var matrixOpts = scene.matrixOptions;\n\n  if (!els.length && !unels.length) {\n    scene.matrix.update(matrixOpts, null);\n  } else if (!scene.selectBatch.length && !scene.unselectBatch.length) {\n    scene.matrix.update(scene.unselectedOptions, Lib.extendFlat({}, matrixOpts, scene.selectedOptions, scene.viewOpts));\n  }\n\n  scene.selectBatch = els;\n  scene.unselectBatch = unels;\n  return selection;\n};","map":null,"metadata":{},"sourceType":"script"}