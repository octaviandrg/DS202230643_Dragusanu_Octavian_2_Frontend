{"ast":null,"code":"'use strict';\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  supplyDefaults: require('./defaults'),\n  colorbar: require('../heatmap/colorbar'),\n  calc: require('../choropleth/calc'),\n  plot: require('./plot'),\n  hoverPoints: require('../choropleth/hover'),\n  eventData: require('../choropleth/event_data'),\n  selectPoints: require('../choropleth/select'),\n  styleOnSelect: function styleOnSelect(_, cd) {\n    if (cd) {\n      var trace = cd[0].trace;\n\n      trace._glTrace.updateOnSelect(cd);\n    }\n  },\n  getBelow: function getBelow(trace, subplot) {\n    var mapLayers = subplot.getMapLayers(); // find layer just above top-most \"water\" layer\n    // that is not a plotly layer\n\n    for (var i = mapLayers.length - 2; i >= 0; i--) {\n      var layerId = mapLayers[i].id;\n\n      if (typeof layerId === 'string' && layerId.indexOf('water') === 0) {\n        for (var j = i + 1; j < mapLayers.length; j++) {\n          layerId = mapLayers[j].id;\n\n          if (typeof layerId === 'string' && layerId.indexOf('plotly-') === -1) {\n            return layerId;\n          }\n        }\n      }\n    }\n  },\n  moduleType: 'trace',\n  name: 'choroplethmapbox',\n  basePlotModule: require('../../plots/mapbox'),\n  categories: ['mapbox', 'gl', 'noOpacity', 'showLegend'],\n  meta: {\n    hr_name: 'choropleth_mapbox',\n    description: ['GeoJSON features to be filled are set in `geojson`', 'The data that describes the choropleth value-to-color mapping', 'is set in `locations` and `z`.'].join(' ')\n  }\n};","map":null,"metadata":{},"sourceType":"script"}