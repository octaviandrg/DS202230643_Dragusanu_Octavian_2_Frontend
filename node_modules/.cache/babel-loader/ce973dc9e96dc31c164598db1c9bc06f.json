{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\n\nvar handleDomainDefaults = require('../../plots/domain').defaults;\n\nvar handleText = require('../bar/defaults').handleText;\n\nfunction handleLabelsAndValues(labels, values) {\n  var hasLabels = Array.isArray(labels);\n  var hasValues = Lib.isArrayOrTypedArray(values);\n  var len = Math.min(hasLabels ? labels.length : Infinity, hasValues ? values.length : Infinity);\n  if (!isFinite(len)) len = 0;\n\n  if (len && hasValues) {\n    var hasPositive;\n\n    for (var i = 0; i < len; i++) {\n      var v = values[i];\n\n      if (isNumeric(v) && v > 0) {\n        hasPositive = true;\n        break;\n      }\n    }\n\n    if (!hasPositive) len = 0;\n  }\n\n  return {\n    hasLabels: hasLabels,\n    hasValues: hasValues,\n    len: len\n  };\n}\n\nfunction supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var labels = coerce('labels');\n  var values = coerce('values');\n  var res = handleLabelsAndValues(labels, values);\n  var len = res.len;\n  traceOut._hasLabels = res.hasLabels;\n  traceOut._hasValues = res.hasValues;\n\n  if (!traceOut._hasLabels && traceOut._hasValues) {\n    coerce('label0');\n    coerce('dlabel');\n  }\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  traceOut._length = len;\n  var lineWidth = coerce('marker.line.width');\n  if (lineWidth) coerce('marker.line.color');\n  coerce('marker.colors');\n  coerce('scalegroup'); // TODO: hole needs to be coerced to the same value within a scaleegroup\n\n  var textData = coerce('text');\n  var textTemplate = coerce('texttemplate');\n  var textInfo;\n  if (!textTemplate) textInfo = coerce('textinfo', Array.isArray(textData) ? 'text+percent' : 'percent');\n  coerce('hovertext');\n  coerce('hovertemplate');\n\n  if (textTemplate || textInfo && textInfo !== 'none') {\n    var textposition = coerce('textposition');\n    handleText(traceIn, traceOut, layout, coerce, textposition, {\n      moduleHasSelected: false,\n      moduleHasUnselected: false,\n      moduleHasConstrain: false,\n      moduleHasCliponaxis: false,\n      moduleHasTextangle: false,\n      moduleHasInsideanchor: false\n    });\n    var hasBoth = Array.isArray(textposition) || textposition === 'auto';\n    var hasOutside = hasBoth || textposition === 'outside';\n\n    if (hasOutside) {\n      coerce('automargin');\n    }\n\n    if (textposition === 'inside' || textposition === 'auto' || Array.isArray(textposition)) {\n      coerce('insidetextorientation');\n    }\n  }\n\n  handleDomainDefaults(traceOut, layout, coerce);\n  var hole = coerce('hole');\n  var title = coerce('title.text');\n\n  if (title) {\n    var titlePosition = coerce('title.position', hole ? 'middle center' : 'top center');\n    if (!hole && titlePosition === 'middle center') traceOut.title.position = 'top center';\n    Lib.coerceFont(coerce, 'title.font', layout.font);\n  }\n\n  coerce('sort');\n  coerce('direction');\n  coerce('rotation');\n  coerce('pull');\n}\n\nmodule.exports = {\n  handleLabelsAndValues: handleLabelsAndValues,\n  supplyDefaults: supplyDefaults\n};","map":null,"metadata":{},"sourceType":"script"}