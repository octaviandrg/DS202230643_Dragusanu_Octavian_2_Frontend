{"ast":null,"code":"'use strict';\n\nvar annAttrs = require('../annotations/attributes');\n\nvar scatterLineAttrs = require('../../traces/scatter/attributes').line;\n\nvar dash = require('../drawing/attributes').dash;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nvar templatedArray = require('../../plot_api/plot_template').templatedArray;\n\nvar axisPlaceableObjs = require('../../constants/axis_placeable_objects');\n\nmodule.exports = overrideAll(templatedArray('selection', {\n  type: {\n    valType: 'enumerated',\n    values: ['rect', 'path'],\n    description: ['Specifies the selection type to be drawn.', 'If *rect*, a rectangle is drawn linking', '(`x0`,`y0`), (`x1`,`y0`), (`x1`,`y1`) and (`x0`,`y1`).', 'If *path*, draw a custom SVG path using `path`.'].join(' ')\n  },\n  xref: extendFlat({}, annAttrs.xref, {\n    description: ['Sets the selection\\'s x coordinate axis.', axisPlaceableObjs.axisRefDescription('x', 'left', 'right')].join(' ')\n  }),\n  yref: extendFlat({}, annAttrs.yref, {\n    description: ['Sets the selection\\'s x coordinate axis.', axisPlaceableObjs.axisRefDescription('y', 'bottom', 'top')].join(' ')\n  }),\n  x0: {\n    valType: 'any',\n    description: 'Sets the selection\\'s starting x position.'\n  },\n  x1: {\n    valType: 'any',\n    description: 'Sets the selection\\'s end x position.'\n  },\n  y0: {\n    valType: 'any',\n    description: 'Sets the selection\\'s starting y position.'\n  },\n  y1: {\n    valType: 'any',\n    description: 'Sets the selection\\'s end y position.'\n  },\n  path: {\n    valType: 'string',\n    editType: 'arraydraw',\n    description: ['For `type` *path* - a valid SVG path similar to `shapes.path` in data coordinates.', 'Allowed segments are: M, L and Z.'].join(' ')\n  },\n  opacity: {\n    valType: 'number',\n    min: 0,\n    max: 1,\n    dflt: 0.7,\n    editType: 'arraydraw',\n    description: 'Sets the opacity of the selection.'\n  },\n  line: {\n    color: scatterLineAttrs.color,\n    width: extendFlat({}, scatterLineAttrs.width, {\n      min: 1,\n      dflt: 1\n    }),\n    dash: extendFlat({}, dash, {\n      dflt: 'dot'\n    })\n  }\n}), 'arraydraw', 'from-root');","map":null,"metadata":{},"sourceType":"script"}