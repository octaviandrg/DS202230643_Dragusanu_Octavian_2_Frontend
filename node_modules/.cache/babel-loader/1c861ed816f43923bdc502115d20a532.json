{"ast":null,"code":"'use strict';\n/* eslint-disable consistent-return */\n\nvar readUInt16BE = require('../common').readUInt16BE;\n\nvar str2arr = require('../common').str2arr;\n\nvar sliceEq = require('../common').sliceEq;\n\nvar exif = require('../exif_utils');\n\nvar SIG_EXIF = str2arr('Exif\\0\\0');\n\nmodule.exports = function (data) {\n  if (data.length < 2) return; // first marker of the file MUST be 0xFFD8,\n  // following by either 0xFFE0, 0xFFE2 or 0xFFE3\n\n  if (data[0] !== 0xFF || data[1] !== 0xD8 || data[2] !== 0xFF) return;\n  var offset = 2;\n\n  for (;;) {\n    // skip until we see 0xFF, see https://github.com/nodeca/probe-image-size/issues/68\n    for (;;) {\n      if (data.length - offset < 2) return;\n      if (data[offset++] === 0xFF) break;\n    }\n\n    var code = data[offset++];\n    var length; // skip padding bytes\n\n    while (code === 0xFF) {\n      code = data[offset++];\n    } // standalone markers, according to JPEG 1992,\n    // http://www.w3.org/Graphics/JPEG/itu-t81.pdf, see Table B.1\n\n\n    if (0xD0 <= code && code <= 0xD9 || code === 0x01) {\n      length = 0;\n    } else if (0xC0 <= code && code <= 0xFE) {\n      // the rest of the unreserved markers\n      if (data.length - offset < 2) return;\n      length = readUInt16BE(data, offset) - 2;\n      offset += 2;\n    } else {\n      // unknown markers\n      return;\n    }\n\n    if (code === 0xD9\n    /* EOI */\n    || code === 0xDA\n    /* SOS */\n    ) {\n        // end of the datastream\n        return;\n      }\n\n    var orientation; // try to get orientation from Exif segment\n\n    if (code === 0xE1 && length >= 10 && sliceEq(data, offset, SIG_EXIF)) {\n      orientation = exif.get_orientation(data.slice(offset + 6, offset + length));\n    }\n\n    if (length >= 5 && 0xC0 <= code && code <= 0xCF && code !== 0xC4 && code !== 0xC8 && code !== 0xCC) {\n      if (data.length - offset < length) return;\n      var result = {\n        width: readUInt16BE(data, offset + 3),\n        height: readUInt16BE(data, offset + 1),\n        type: 'jpg',\n        mime: 'image/jpeg',\n        wUnits: 'px',\n        hUnits: 'px'\n      };\n\n      if (orientation > 0) {\n        result.orientation = orientation;\n      }\n\n      return result;\n    }\n\n    offset += length;\n  }\n};","map":null,"metadata":{},"sourceType":"script"}