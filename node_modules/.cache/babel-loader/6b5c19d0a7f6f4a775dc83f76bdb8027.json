{"ast":null,"code":"'use strict';\n/**\n * mergeLength: set trace length as the minimum of all dimension data lengths\n *     and propagates this length into each dimension\n *\n * @param {object} traceOut: the fullData trace\n * @param {Array(object)} dimensions: array of dimension objects\n * @param {string} dataAttr: the attribute of each dimension containing the data\n * @param {integer} len: an already-existing length from other attributes\n */\n\nmodule.exports = function (traceOut, dimensions, dataAttr, len) {\n  if (!len) len = Infinity;\n  var i, dimi;\n\n  for (i = 0; i < dimensions.length; i++) {\n    dimi = dimensions[i];\n    if (dimi.visible) len = Math.min(len, dimi[dataAttr].length);\n  }\n\n  if (len === Infinity) len = 0;\n  traceOut._length = len;\n\n  for (i = 0; i < dimensions.length; i++) {\n    dimi = dimensions[i];\n    if (dimi.visible) dimi._length = len;\n  }\n\n  return len;\n};","map":null,"metadata":{},"sourceType":"script"}