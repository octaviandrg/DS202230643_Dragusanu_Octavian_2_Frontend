{"ast":null,"code":"'use strict';\n\nvar axesAttrs = require('../../plots/cartesian/layout_attributes');\n\nvar fontAttrs = require('../../plots/font_attributes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../plot_api/edit_types').overrideAll;\n\nmodule.exports = overrideAll({\n  orientation: {\n    valType: 'enumerated',\n    values: ['h', 'v'],\n    dflt: 'v',\n    description: 'Sets the orientation of the colorbar.'\n  },\n  thicknessmode: {\n    valType: 'enumerated',\n    values: ['fraction', 'pixels'],\n    dflt: 'pixels',\n    description: ['Determines whether this color bar\\'s thickness', '(i.e. the measure in the constant color direction)', 'is set in units of plot *fraction* or in *pixels*.', 'Use `thickness` to set the value.'].join(' ')\n  },\n  thickness: {\n    valType: 'number',\n    min: 0,\n    dflt: 30,\n    description: ['Sets the thickness of the color bar', 'This measure excludes the size of the padding, ticks and labels.'].join(' ')\n  },\n  lenmode: {\n    valType: 'enumerated',\n    values: ['fraction', 'pixels'],\n    dflt: 'fraction',\n    description: ['Determines whether this color bar\\'s length', '(i.e. the measure in the color variation direction)', 'is set in units of plot *fraction* or in *pixels.', 'Use `len` to set the value.'].join(' ')\n  },\n  len: {\n    valType: 'number',\n    min: 0,\n    dflt: 1,\n    description: ['Sets the length of the color bar', 'This measure excludes the padding of both ends.', 'That is, the color bar length is this length minus the', 'padding on both ends.'].join(' ')\n  },\n  x: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    description: ['Sets the x position of the color bar (in plot fraction).', 'Defaults to 1.02 when `orientation` is *v* and', '0.5 when `orientation` is *h*.'].join(' ')\n  },\n  xanchor: {\n    valType: 'enumerated',\n    values: ['left', 'center', 'right'],\n    description: ['Sets this color bar\\'s horizontal position anchor.', 'This anchor binds the `x` position to the *left*, *center*', 'or *right* of the color bar.', 'Defaults to *left* when `orientation` is *v* and', '*center* when `orientation` is *h*.'].join(' ')\n  },\n  xpad: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    description: 'Sets the amount of padding (in px) along the x direction.'\n  },\n  y: {\n    valType: 'number',\n    min: -2,\n    max: 3,\n    description: ['Sets the y position of the color bar (in plot fraction).', 'Defaults to 0.5 when `orientation` is *v* and', '1.02 when `orientation` is *h*.'].join(' ')\n  },\n  yanchor: {\n    valType: 'enumerated',\n    values: ['top', 'middle', 'bottom'],\n    description: ['Sets this color bar\\'s vertical position anchor', 'This anchor binds the `y` position to the *top*, *middle*', 'or *bottom* of the color bar.', 'Defaults to *middle* when `orientation` is *v* and', '*bottom* when `orientation` is *h*.'].join(' ')\n  },\n  ypad: {\n    valType: 'number',\n    min: 0,\n    dflt: 10,\n    description: 'Sets the amount of padding (in px) along the y direction.'\n  },\n  // a possible line around the bar itself\n  outlinecolor: axesAttrs.linecolor,\n  outlinewidth: axesAttrs.linewidth,\n  // Should outlinewidth have {dflt: 0} ?\n  // another possible line outside the padding and tick labels\n  bordercolor: axesAttrs.linecolor,\n  borderwidth: {\n    valType: 'number',\n    min: 0,\n    dflt: 0,\n    description: ['Sets the width (in px) or the border enclosing this color bar.'].join(' ')\n  },\n  bgcolor: {\n    valType: 'color',\n    dflt: 'rgba(0,0,0,0)',\n    description: 'Sets the color of padded area.'\n  },\n  // tick and title properties named and function exactly as in axes\n  tickmode: axesAttrs.tickmode,\n  nticks: axesAttrs.nticks,\n  tick0: axesAttrs.tick0,\n  dtick: axesAttrs.dtick,\n  tickvals: axesAttrs.tickvals,\n  ticktext: axesAttrs.ticktext,\n  ticks: extendFlat({}, axesAttrs.ticks, {\n    dflt: ''\n  }),\n  ticklabeloverflow: extendFlat({}, axesAttrs.ticklabeloverflow, {\n    description: ['Determines how we handle tick labels that would overflow either the graph div or the domain of the axis.', 'The default value for inside tick labels is *hide past domain*.', 'In other cases the default is *hide past div*.'].join(' ')\n  }),\n  // ticklabelposition: not used directly, as values depend on orientation\n  // left/right options are for x axes, and top/bottom options are for y axes\n  ticklabelposition: {\n    valType: 'enumerated',\n    values: ['outside', 'inside', 'outside top', 'inside top', 'outside left', 'inside left', 'outside right', 'inside right', 'outside bottom', 'inside bottom'],\n    dflt: 'outside',\n    description: ['Determines where tick labels are drawn relative to the ticks.', 'Left and right options are used when `orientation` is *h*,', 'top and bottom when `orientation` is *v*.'].join(' ')\n  },\n  ticklen: axesAttrs.ticklen,\n  tickwidth: axesAttrs.tickwidth,\n  tickcolor: axesAttrs.tickcolor,\n  ticklabelstep: axesAttrs.ticklabelstep,\n  showticklabels: axesAttrs.showticklabels,\n  tickfont: fontAttrs({\n    description: 'Sets the color bar\\'s tick label font'\n  }),\n  tickangle: axesAttrs.tickangle,\n  tickformat: axesAttrs.tickformat,\n  tickformatstops: axesAttrs.tickformatstops,\n  tickprefix: axesAttrs.tickprefix,\n  showtickprefix: axesAttrs.showtickprefix,\n  ticksuffix: axesAttrs.ticksuffix,\n  showticksuffix: axesAttrs.showticksuffix,\n  separatethousands: axesAttrs.separatethousands,\n  exponentformat: axesAttrs.exponentformat,\n  minexponent: axesAttrs.minexponent,\n  showexponent: axesAttrs.showexponent,\n  title: {\n    text: {\n      valType: 'string',\n      description: ['Sets the title of the color bar.', 'Note that before the existence of `title.text`, the title\\'s', 'contents used to be defined as the `title` attribute itself.', 'This behavior has been deprecated.'].join(' ')\n    },\n    font: fontAttrs({\n      description: ['Sets this color bar\\'s title font.', 'Note that the title\\'s font used to be set', 'by the now deprecated `titlefont` attribute.'].join(' ')\n    }),\n    side: {\n      valType: 'enumerated',\n      values: ['right', 'top', 'bottom'],\n      description: ['Determines the location of color bar\\'s title', 'with respect to the color bar.', 'Defaults to *top* when `orientation` if *v* and ', 'defaults to *right* when `orientation` if *h*.', 'Note that the title\\'s location used to be set', 'by the now deprecated `titleside` attribute.'].join(' ')\n    }\n  },\n  _deprecated: {\n    title: {\n      valType: 'string',\n      description: ['Deprecated in favor of color bar\\'s `title.text`.', 'Note that value of color bar\\'s `title` is no longer a simple', '*string* but a set of sub-attributes.'].join(' ')\n    },\n    titlefont: fontAttrs({\n      description: 'Deprecated in favor of color bar\\'s `title.font`.'\n    }),\n    titleside: {\n      valType: 'enumerated',\n      values: ['right', 'top', 'bottom'],\n      dflt: 'top',\n      description: 'Deprecated in favor of color bar\\'s `title.side`.'\n    }\n  }\n}, 'colorbars', 'from-root');","map":null,"metadata":{},"sourceType":"script"}