{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Color = require('../../components/color');\n\nvar Drawing = require('../../components/drawing');\n\nfunction style(gd, cd, sel) {\n  var s = sel ? sel : d3.select(gd).selectAll('g.trace.boxes');\n  s.style('opacity', function (d) {\n    return d[0].trace.opacity;\n  });\n  s.each(function (d) {\n    var el = d3.select(this);\n    var trace = d[0].trace;\n    var lineWidth = trace.line.width;\n\n    function styleBox(boxSel, lineWidth, lineColor, fillColor) {\n      boxSel.style('stroke-width', lineWidth + 'px').call(Color.stroke, lineColor).call(Color.fill, fillColor);\n    }\n\n    var allBoxes = el.selectAll('path.box');\n\n    if (trace.type === 'candlestick') {\n      allBoxes.each(function (boxData) {\n        if (boxData.empty) return;\n        var thisBox = d3.select(this);\n        var container = trace[boxData.dir]; // dir = 'increasing' or 'decreasing'\n\n        styleBox(thisBox, container.line.width, container.line.color, container.fillcolor); // TODO: custom selection style for candlesticks\n\n        thisBox.style('opacity', trace.selectedpoints && !boxData.selected ? 0.3 : 1);\n      });\n    } else {\n      styleBox(allBoxes, lineWidth, trace.line.color, trace.fillcolor);\n      el.selectAll('path.mean').style({\n        'stroke-width': lineWidth,\n        'stroke-dasharray': 2 * lineWidth + 'px,' + lineWidth + 'px'\n      }).call(Color.stroke, trace.line.color);\n      var pts = el.selectAll('path.point');\n      Drawing.pointStyle(pts, trace, gd);\n    }\n  });\n}\n\nfunction styleOnSelect(gd, cd, sel) {\n  var trace = cd[0].trace;\n  var pts = sel.selectAll('path.point');\n\n  if (trace.selectedpoints) {\n    Drawing.selectedPointStyle(pts, trace);\n  } else {\n    Drawing.pointStyle(pts, trace, gd);\n  }\n}\n\nmodule.exports = {\n  style: style,\n  styleOnSelect: styleOnSelect\n};","map":null,"metadata":{},"sourceType":"script"}