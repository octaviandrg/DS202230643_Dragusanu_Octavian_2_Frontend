{"ast":null,"code":"'use strict';\n\nfunction sign(x) {\n  return x < 0 ? -1 : x > 0 ? 1 : 0;\n} // adapted from Mike Bostock's https://observablehq.com/@mbostock/smith-chart\n\n\nfunction smith(a) {\n  var R = a[0];\n  var X = a[1];\n  if (!isFinite(R) || !isFinite(X)) return [1, 0];\n  var D = (R + 1) * (R + 1) + X * X;\n  return [(R * R + X * X - 1) / D, 2 * X / D];\n}\n\nfunction transform(subplot, a) {\n  var x = a[0];\n  var y = a[1];\n  return [x * subplot.radius + subplot.cx, -y * subplot.radius + subplot.cy];\n}\n\nfunction scale(subplot, r) {\n  return r * subplot.radius;\n}\n\nfunction reactanceArc(subplot, X, R1, R2) {\n  var t1 = transform(subplot, smith([R1, X]));\n  var x1 = t1[0];\n  var y1 = t1[1];\n  var t2 = transform(subplot, smith([R2, X]));\n  var x2 = t2[0];\n  var y2 = t2[1];\n\n  if (X === 0) {\n    return ['M' + x1 + ',' + y1, 'L' + x2 + ',' + y2].join(' ');\n  }\n\n  var r = scale(subplot, 1 / Math.abs(X));\n  return ['M' + x1 + ',' + y1, 'A' + r + ',' + r + ' 0 0,' + (X < 0 ? 1 : 0) + ' ' + x2 + ',' + y2].join(' ');\n}\n\nfunction resistanceArc(subplot, R, X1, X2) {\n  var r = scale(subplot, 1 / (R + 1));\n  var t1 = transform(subplot, smith([R, X1]));\n  var x1 = t1[0];\n  var y1 = t1[1];\n  var t2 = transform(subplot, smith([R, X2]));\n  var x2 = t2[0];\n  var y2 = t2[1];\n\n  if (sign(X1) !== sign(X2)) {\n    var t0 = transform(subplot, smith([R, 0]));\n    var x0 = t0[0];\n    var y0 = t0[1];\n    return ['M' + x1 + ',' + y1, 'A' + r + ',' + r + ' 0 0,' + (0 < X1 ? 0 : 1) + ' ' + x0 + ',' + y0, 'A' + r + ',' + r + ' 0 0,' + (X2 < 0 ? 0 : 1) + x2 + ',' + y2].join(' ');\n  }\n\n  return ['M' + x1 + ',' + y1, 'A' + r + ',' + r + ' 0 0,' + (X2 < X1 ? 0 : 1) + ' ' + x2 + ',' + y2].join(' ');\n}\n\nmodule.exports = {\n  smith: smith,\n  reactanceArc: reactanceArc,\n  resistanceArc: resistanceArc,\n  smithTransform: transform\n};","map":null,"metadata":{},"sourceType":"script"}