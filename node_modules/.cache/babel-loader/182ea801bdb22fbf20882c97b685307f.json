{"ast":null,"code":"'use strict';\n\nvar pick = require('pick-by-alias');\n\nmodule.exports = parseRect;\n\nfunction parseRect(arg) {\n  var rect; // direct arguments sequence\n\n  if (arguments.length > 1) {\n    arg = arguments;\n  } // svg viewbox\n\n\n  if (typeof arg === 'string') {\n    arg = arg.split(/\\s/).map(parseFloat);\n  } else if (typeof arg === 'number') {\n    arg = [arg];\n  } // 0, 0, 100, 100 - array-like\n\n\n  if (arg.length && typeof arg[0] === 'number') {\n    // [w, w]\n    if (arg.length === 1) {\n      rect = {\n        width: arg[0],\n        height: arg[0],\n        x: 0,\n        y: 0\n      };\n    } // [w, h]\n    else if (arg.length === 2) {\n        rect = {\n          width: arg[0],\n          height: arg[1],\n          x: 0,\n          y: 0\n        };\n      } // [l, t, r, b]\n      else {\n          rect = {\n            x: arg[0],\n            y: arg[1],\n            width: arg[2] - arg[0] || 0,\n            height: arg[3] - arg[1] || 0\n          };\n        }\n  } // {x, y, w, h} or {l, t, b, r}\n  else if (arg) {\n      arg = pick(arg, {\n        left: 'x l left Left',\n        top: 'y t top Top',\n        width: 'w width W Width',\n        height: 'h height W Width',\n        bottom: 'b bottom Bottom',\n        right: 'r right Right'\n      });\n      rect = {\n        x: arg.left || 0,\n        y: arg.top || 0\n      };\n\n      if (arg.width == null) {\n        if (arg.right) rect.width = arg.right - rect.x;else rect.width = 0;\n      } else {\n        rect.width = arg.width;\n      }\n\n      if (arg.height == null) {\n        if (arg.bottom) rect.height = arg.bottom - rect.y;else rect.height = 0;\n      } else {\n        rect.height = arg.height;\n      }\n    }\n\n  return rect;\n}","map":null,"metadata":{},"sourceType":"script"}