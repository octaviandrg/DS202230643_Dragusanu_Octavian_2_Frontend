{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar attributes = require('./attributes');\n\nvar Color = require('../../components/color');\n\nvar tinycolor = require('tinycolor2');\n\nvar handleDomainDefaults = require('../../plots/domain').defaults;\n\nvar handleHoverLabelDefaults = require('../../components/fx/hoverlabel_defaults');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar handleArrayContainerDefaults = require('../../plots/array_container_defaults');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var hoverlabelDefault = Lib.extendDeep(layout.hoverlabel, traceIn.hoverlabel); // node attributes\n\n  var nodeIn = traceIn.node;\n  var nodeOut = Template.newContainer(traceOut, 'node');\n\n  function coerceNode(attr, dflt) {\n    return Lib.coerce(nodeIn, nodeOut, attributes.node, attr, dflt);\n  }\n\n  coerceNode('label');\n  coerceNode('groups');\n  coerceNode('x');\n  coerceNode('y');\n  coerceNode('pad');\n  coerceNode('thickness');\n  coerceNode('line.color');\n  coerceNode('line.width');\n  coerceNode('hoverinfo', traceIn.hoverinfo);\n  handleHoverLabelDefaults(nodeIn, nodeOut, coerceNode, hoverlabelDefault);\n  coerceNode('hovertemplate');\n  var colors = layout.colorway;\n\n  var defaultNodePalette = function defaultNodePalette(i) {\n    return colors[i % colors.length];\n  };\n\n  coerceNode('color', nodeOut.label.map(function (d, i) {\n    return Color.addOpacity(defaultNodePalette(i), 0.8);\n  }));\n  coerceNode('customdata'); // link attributes\n\n  var linkIn = traceIn.link || {};\n  var linkOut = Template.newContainer(traceOut, 'link');\n\n  function coerceLink(attr, dflt) {\n    return Lib.coerce(linkIn, linkOut, attributes.link, attr, dflt);\n  }\n\n  coerceLink('label');\n  coerceLink('arrowlen');\n  coerceLink('source');\n  coerceLink('target');\n  coerceLink('value');\n  coerceLink('line.color');\n  coerceLink('line.width');\n  coerceLink('hoverinfo', traceIn.hoverinfo);\n  handleHoverLabelDefaults(linkIn, linkOut, coerceLink, hoverlabelDefault);\n  coerceLink('hovertemplate');\n  var defaultLinkColor = tinycolor(layout.paper_bgcolor).getLuminance() < 0.333 ? 'rgba(255, 255, 255, 0.6)' : 'rgba(0, 0, 0, 0.2)';\n  coerceLink('color', Lib.repeat(defaultLinkColor, linkOut.value.length));\n  coerceLink('customdata');\n  handleArrayContainerDefaults(linkIn, linkOut, {\n    name: 'colorscales',\n    handleItemDefaults: concentrationscalesDefaults\n  });\n  handleDomainDefaults(traceOut, layout, coerce);\n  coerce('orientation');\n  coerce('valueformat');\n  coerce('valuesuffix');\n  var dfltArrangement;\n\n  if (nodeOut.x.length && nodeOut.y.length) {\n    dfltArrangement = 'freeform';\n  }\n\n  coerce('arrangement', dfltArrangement);\n  Lib.coerceFont(coerce, 'textfont', Lib.extendFlat({}, layout.font)); // disable 1D transforms - arrays here are 1D but their lengths/meanings\n  // don't match, between nodes and links\n\n  traceOut._length = null;\n};\n\nfunction concentrationscalesDefaults(In, Out) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(In, Out, attributes.link.colorscales, attr, dflt);\n  }\n\n  coerce('label');\n  coerce('cmin');\n  coerce('cmax');\n  coerce('colorscale');\n}","map":null,"metadata":{},"sourceType":"script"}