{"ast":null,"code":"import _classCallCheck from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/user/components/user-delete.js\";\nimport React from 'react';\nimport validate from \"./validators/user-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_USERS from \"../api/user-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\n\nvar UserDeleteForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserDeleteForm, _React$Component);\n\n  function UserDeleteForm(props) {\n    var _this;\n\n    _classCallCheck(this, UserDeleteForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserDeleteForm).call(this, props));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = _this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      _this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadHandler = _this.props.reloadHandler;\n    _this.state = {\n      errorStatus: 0,\n      error: null,\n      formIsValid: false,\n      formControls: {\n        userId: {\n          value: '',\n          placeholder: 'ID user...',\n          valid: false,\n          touched: false\n        }\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserDeleteForm, [{\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        collapseForm: !this.state.collapseForm\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(userId) {\n      var _this2 = this;\n\n      return API_USERS.deleteUser(userId, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          console.log(\"Successfully deleted client with id: \" + result);\n\n          _this2.reloadHandler();\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: error\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      var userId = this.state.formControls.userId.value;\n      console.log(userId);\n      this.deleteUser(userId);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        id: \"userId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"userIdField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \" User ID: \"), React.createElement(Input, {\n        name: \"userId\",\n        id: \"userIdField\",\n        placeholder: this.state.formControls.userId.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.userId.value,\n        touched: this.state.formControls.userId.touched ? 1 : 0,\n        valid: this.state.formControls.userId.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !this.state.formIsValid,\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"  Submit \"))), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UserDeleteForm;\n}(React.Component);\n\nexport default UserDeleteForm;","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/user/components/user-delete.js"],"names":["React","validate","Button","API_USERS","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","UserDeleteForm","props","handleChange","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","setState","toggleForm","bind","reloadHandler","errorStatus","error","userId","placeholder","handleSubmit","collapseForm","deleteUser","result","status","console","log","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validate from \"./validators/user-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_USERS from \"../api/user-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport {Col, Row} from \"reactstrap\";\nimport { FormGroup, Input, Label} from 'reactstrap';\n\n\n\nclass UserDeleteForm extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.reloadHandler = this.props.reloadHandler;\n\n        this.state = {\n\n            errorStatus: 0,\n            error: null,\n\n            formIsValid: false,\n\n            formControls: {\n                userId: {\n                    value: '',\n                    placeholder: 'ID user...',\n                    valid: false,\n                    touched: false,\n                },\n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleForm() {\n        this.setState({collapseForm: !this.state.collapseForm});\n    }\n\n\n    handleChange = event => {\n\n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls = this.state.formControls;\n\n        const updatedFormElement = updatedControls[name];\n\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n        updatedControls[name] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let updatedFormElementName in updatedControls) {\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n        }\n\n        this.setState({\n            formControls: updatedControls,\n            formIsValid: formIsValid\n        });\n\n    };\n\n    deleteUser(userId) {\n        return API_USERS.deleteUser(userId, (result, status, error) => {\n            if (result !== null && (status === 200 || status === 201)) {\n                console.log(\"Successfully deleted client with id: \" + result);\n                this.reloadHandler();\n            } else {\n                this.setState(({\n                    errorStatus: status,\n                    error: error\n                }));\n            }\n        });\n    }\n\n    handleSubmit() {\n        const userId = this.state.formControls.userId.value;\n\n        console.log(userId);\n        this.deleteUser(userId);\n    }\n\n    render() {\n        return (\n            <div>\n\n                <FormGroup id='userId'>\n                    <Label for='userIdField'> User ID: </Label>\n                    <Input name='userId' id='userIdField' placeholder={this.state.formControls.userId.placeholder}\n                           onChange={this.handleChange}\n                           defaultValue={this.state.formControls.userId.value}\n                           touched={this.state.formControls.userId.touched? 1 : 0}\n                           valid={this.state.formControls.userId.valid}\n                           required\n                    />\n                </FormGroup>\n\n                <Row>\n                    <Col sm={{size: '4', offset: 8}}>\n                        <Button type={\"submit\"} disabled={!this.state.formIsValid} onClick={this.handleSubmit}>  Submit </Button>\n                    </Col>\n                </Row>\n\n                {\n                    this.state.errorStatus > 0 &&\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\n                }\n            </div>\n        ) ;\n    }\n}\n\nexport default UserDeleteForm;\n"]},"metadata":{},"sourceType":"module"}