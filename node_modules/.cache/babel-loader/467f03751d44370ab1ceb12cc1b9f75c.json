{"ast":null,"code":"'use strict';\n\nvar isNumeric = require('fast-isnumeric');\n\nvar tinycolor = require('tinycolor2');\n\nvar isArrayOrTypedArray = require('../../lib').isArrayOrTypedArray;\n\nexports.coerceString = function (attributeDefinition, value, defaultValue) {\n  if (typeof value === 'string') {\n    if (value || !attributeDefinition.noBlank) return value;\n  } else if (typeof value === 'number' || value === true) {\n    if (!attributeDefinition.strict) return String(value);\n  }\n\n  return defaultValue !== undefined ? defaultValue : attributeDefinition.dflt;\n};\n\nexports.coerceNumber = function (attributeDefinition, value, defaultValue) {\n  if (isNumeric(value)) {\n    value = +value;\n    var min = attributeDefinition.min;\n    var max = attributeDefinition.max;\n    var isOutOfBounds = min !== undefined && value < min || max !== undefined && value > max;\n    if (!isOutOfBounds) return value;\n  }\n\n  return defaultValue !== undefined ? defaultValue : attributeDefinition.dflt;\n};\n\nexports.coerceColor = function (attributeDefinition, value, defaultValue) {\n  if (tinycolor(value).isValid()) return value;\n  return defaultValue !== undefined ? defaultValue : attributeDefinition.dflt;\n};\n\nexports.coerceEnumerated = function (attributeDefinition, value, defaultValue) {\n  if (attributeDefinition.coerceNumber) value = +value;\n  if (attributeDefinition.values.indexOf(value) !== -1) return value;\n  return defaultValue !== undefined ? defaultValue : attributeDefinition.dflt;\n};\n\nexports.getValue = function (arrayOrScalar, index) {\n  var value;\n  if (!Array.isArray(arrayOrScalar)) value = arrayOrScalar;else if (index < arrayOrScalar.length) value = arrayOrScalar[index];\n  return value;\n};\n\nexports.getLineWidth = function (trace, di) {\n  var w = 0 < di.mlw ? di.mlw : !isArrayOrTypedArray(trace.marker.line.width) ? trace.marker.line.width : 0;\n  return w;\n};","map":null,"metadata":{},"sourceType":"script"}