{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar subTypes = require('../scatter/subtypes');\n\nvar handleMarkerDefaults = require('../scatter/marker_defaults');\n\nvar handleLineDefaults = require('../scatter/line_defaults');\n\nvar handleTextDefaults = require('../scatter/text_defaults');\n\nvar attributes = require('./attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleXYZDefaults(traceIn, traceOut, coerce, layout);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  coerce('xhoverformat');\n  coerce('yhoverformat');\n  coerce('zhoverformat');\n  coerce('mode');\n\n  if (subTypes.hasLines(traceOut)) {\n    coerce('connectgaps');\n    handleLineDefaults(traceIn, traceOut, defaultColor, layout, coerce);\n  }\n\n  if (subTypes.hasMarkers(traceOut)) {\n    handleMarkerDefaults(traceIn, traceOut, defaultColor, layout, coerce, {\n      noSelect: true,\n      noAngle: true\n    });\n  }\n\n  if (subTypes.hasText(traceOut)) {\n    coerce('texttemplate');\n    handleTextDefaults(traceIn, traceOut, layout, coerce, {\n      noSelect: true\n    });\n  }\n\n  var lineColor = (traceOut.line || {}).color;\n  var markerColor = (traceOut.marker || {}).color;\n  if (coerce('surfaceaxis') >= 0) coerce('surfacecolor', lineColor || markerColor);\n  var dims = ['x', 'y', 'z'];\n\n  for (var i = 0; i < 3; ++i) {\n    var projection = 'projection.' + dims[i];\n\n    if (coerce(projection + '.show')) {\n      coerce(projection + '.opacity');\n      coerce(projection + '.scale');\n    }\n  }\n\n  var errorBarsSupplyDefaults = Registry.getComponentMethod('errorbars', 'supplyDefaults');\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {\n    axis: 'z'\n  });\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {\n    axis: 'y',\n    inherit: 'z'\n  });\n  errorBarsSupplyDefaults(traceIn, traceOut, lineColor || markerColor || defaultColor, {\n    axis: 'x',\n    inherit: 'z'\n  });\n};\n\nfunction handleXYZDefaults(traceIn, traceOut, coerce, layout) {\n  var len = 0;\n  var x = coerce('x');\n  var y = coerce('y');\n  var z = coerce('z');\n  var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n  handleCalendarDefaults(traceIn, traceOut, ['x', 'y', 'z'], layout);\n\n  if (x && y && z) {\n    // TODO: what happens if one is missing?\n    len = Math.min(x.length, y.length, z.length);\n    traceOut._length = traceOut._xlength = traceOut._ylength = traceOut._zlength = len;\n  }\n\n  return len;\n}","map":null,"metadata":{},"sourceType":"script"}