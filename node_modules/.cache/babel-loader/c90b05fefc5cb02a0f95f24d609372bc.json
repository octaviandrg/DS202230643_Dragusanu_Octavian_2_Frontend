{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleXYDefaults = require('./xy_defaults');\n\nvar handleABDefaults = require('./ab_defaults');\n\nvar attributes = require('./attributes');\n\nvar colorAttrs = require('../../components/color/attributes');\n\nmodule.exports = function supplyDefaults(traceIn, traceOut, dfltColor, fullLayout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  traceOut._clipPathId = 'clip' + traceOut.uid + 'carpet';\n  var defaultColor = coerce('color', colorAttrs.defaultLine);\n  Lib.coerceFont(coerce, 'font');\n  coerce('carpet');\n  handleABDefaults(traceIn, traceOut, fullLayout, coerce, defaultColor);\n\n  if (!traceOut.a || !traceOut.b) {\n    traceOut.visible = false;\n    return;\n  }\n\n  if (traceOut.a.length < 3) {\n    traceOut.aaxis.smoothing = 0;\n  }\n\n  if (traceOut.b.length < 3) {\n    traceOut.baxis.smoothing = 0;\n  } // NB: the input is x/y arrays. You should know that the *first* dimension of x and y\n  // corresponds to b and the second to a. This sounds backwards but ends up making sense\n  // the important part to know is that when you write y[j][i], j goes from 0 to b.length - 1\n  // and i goes from 0 to a.length - 1.\n\n\n  var validData = handleXYDefaults(traceIn, traceOut, coerce);\n\n  if (!validData) {\n    traceOut.visible = false;\n  }\n\n  if (traceOut._cheater) {\n    coerce('cheaterslope');\n  }\n};","map":null,"metadata":{},"sourceType":"script"}