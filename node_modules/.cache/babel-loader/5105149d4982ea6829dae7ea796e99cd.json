{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Colorscale = require('../../components/colorscale');\n\nvar endPlus = require('./end_plus');\n\nmodule.exports = function makeColorMap(trace) {\n  var contours = trace.contours;\n  var start = contours.start;\n  var end = endPlus(contours);\n  var cs = contours.size || 1;\n  var nc = Math.floor((end - start) / cs) + 1;\n  var extra = contours.coloring === 'lines' ? 0 : 1;\n  var cOpts = Colorscale.extractOpts(trace);\n\n  if (!isFinite(cs)) {\n    cs = 1;\n    nc = 1;\n  }\n\n  var scl = cOpts.reversescale ? Colorscale.flipScale(cOpts.colorscale) : cOpts.colorscale;\n  var len = scl.length;\n  var domain = new Array(len);\n  var range = new Array(len);\n  var si, i;\n\n  if (contours.coloring === 'heatmap') {\n    var zmin0 = cOpts.min;\n    var zmax0 = cOpts.max;\n\n    for (i = 0; i < len; i++) {\n      si = scl[i];\n      domain[i] = si[0] * (zmax0 - zmin0) + zmin0;\n      range[i] = si[1];\n    } // do the contours extend beyond the colorscale?\n    // if so, extend the colorscale with constants\n\n\n    var zRange = d3.extent([zmin0, zmax0, contours.start, contours.start + cs * (nc - 1)]);\n    var zmin = zRange[zmin0 < zmax0 ? 0 : 1];\n    var zmax = zRange[zmin0 < zmax0 ? 1 : 0];\n\n    if (zmin !== zmin0) {\n      domain.splice(0, 0, zmin);\n      range.splice(0, 0, range[0]);\n    }\n\n    if (zmax !== zmax0) {\n      domain.push(zmax);\n      range.push(range[range.length - 1]);\n    }\n  } else {\n    for (i = 0; i < len; i++) {\n      si = scl[i];\n      domain[i] = (si[0] * (nc + extra - 1) - extra / 2) * cs + start;\n      range[i] = si[1];\n    }\n  }\n\n  return Colorscale.makeColorScaleFunc({\n    domain: domain,\n    range: range\n  }, {\n    noNumericCheck: true\n  });\n};","map":null,"metadata":{},"sourceType":"script"}