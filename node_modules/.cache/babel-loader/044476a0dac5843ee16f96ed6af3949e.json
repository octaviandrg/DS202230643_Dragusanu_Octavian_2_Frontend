{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  client: '/client'\n};\n\nfunction getClients(callback) {\n  var request = new Request(HOST.backend_api + endpoint.client + '/all', {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction getClientById(params, callback) {\n  var request = new Request(HOST.backend_api + endpoint.client + '/' + params.id, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction postClient(client, callback) {\n  var request = new Request(HOST.backend_api + endpoint.client + '/create', {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(client)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction putClient(client, clientId, callback) {\n  var request = new Request(HOST.backend_api + endpoint.client + \"/update/\" + clientId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(client)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteClient(clientId, callback) {\n  var request = new Request(HOST.backend_api + endpoint.client + \"/delete/\" + clientId, {\n    method: 'DELETE'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nexport { getClients, getClientById, postClient, deleteClient, putClient };","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/client/api/client-api.js"],"names":["HOST","RestApiClient","endpoint","client","getClients","callback","request","Request","backend_api","method","console","log","url","performRequest","getClientById","params","id","postClient","headers","body","JSON","stringify","putClient","clientId","deleteClient"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAGA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,MAAM,EAAE;AADK,CAAjB;;AAIA,SAASC,UAAT,CAAoBC,QAApB,EAA8B;AAC1B,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,MAA5B,GAAqC,MAAjD,EAAyD;AACnEM,IAAAA,MAAM,EAAE;AAD2D,GAAzD,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASS,aAAT,CAAuBC,MAAvB,EAA+BV,QAA/B,EAAwC;AACpC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,MAA5B,GAAqC,GAArC,GAA2CY,MAAM,CAACC,EAA9D,EAAkE;AAC7EP,IAAAA,MAAM,EAAE;AADqE,GAAlE,CAAd;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASY,UAAT,CAAoBd,MAApB,EAA4BE,QAA5B,EAAqC;AACjC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,MAA5B,GAAqC,SAAjD,EAA6D;AACvEM,IAAAA,MAAM,EAAE,MAD+D;AAEvES,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAF6D;AAMvEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,MAAf;AANiE,GAA7D,CAAd;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASiB,SAAT,CAAmBnB,MAAnB,EAA2BoB,QAA3B,EAAqClB,QAArC,EAA8C;AAC1C,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,MAA5B,GAAqC,UAArC,GAAmDoB,QAA/D,EAA0E;AACpFd,IAAAA,MAAM,EAAE,KAD4E;AAEpFS,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAF0E;AAMpFC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,MAAf;AAN8E,GAA1E,CAAd;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASmB,YAAT,CAAsBD,QAAtB,EAAgClB,QAAhC,EAA0C;AACtC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,MAA5B,GAAqC,UAArC,GAAmDoB,QAA/D,EAAyE;AACnFd,IAAAA,MAAM,EAAE;AAD2E,GAAzE,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SACID,UADJ,EAEIU,aAFJ,EAGIG,UAHJ,EAIIO,YAJJ,EAKIF,SALJ","sourcesContent":["import {HOST} from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\n\n\nconst endpoint = {\n    client: '/client'\n};\n\nfunction getClients(callback) {\n    let request = new Request(HOST.backend_api + endpoint.client + '/all', {\n        method: 'GET',\n    });\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction getClientById(params, callback){\n    let request = new Request(HOST.backend_api + endpoint.client + '/' + params.id, {\n       method: 'GET'\n    });\n\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction postClient(client, callback){\n    let request = new Request(HOST.backend_api + endpoint.client + '/create' , {\n        method: 'POST',\n        headers : {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(client)\n    });\n\n    console.log(\"URL: \" + request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction putClient(client, clientId, callback){\n    let request = new Request(HOST.backend_api + endpoint.client + \"/update/\" +  clientId , {\n        method: 'PUT',\n        headers : {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(client)\n    });\n\n    console.log(\"URL: \" + request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteClient(clientId, callback) {\n    let request = new Request(HOST.backend_api + endpoint.client + \"/delete/\" +  clientId, {\n        method: 'DELETE',\n    });\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nexport {\n    getClients,\n    getClientById,\n    postClient,\n    deleteClient,\n    putClient\n};\n"]},"metadata":{},"sourceType":"module"}