{"ast":null,"code":"'use strict';\n\nmodule.exports = mouseListen;\n\nvar mouse = require('mouse-event');\n\nfunction mouseListen(element, callback) {\n  if (!callback) {\n    callback = element;\n    element = window;\n  }\n\n  var buttonState = 0;\n  var x = 0;\n  var y = 0;\n  var mods = {\n    shift: false,\n    alt: false,\n    control: false,\n    meta: false\n  };\n  var attached = false;\n\n  function updateMods(ev) {\n    var changed = false;\n\n    if ('altKey' in ev) {\n      changed = changed || ev.altKey !== mods.alt;\n      mods.alt = !!ev.altKey;\n    }\n\n    if ('shiftKey' in ev) {\n      changed = changed || ev.shiftKey !== mods.shift;\n      mods.shift = !!ev.shiftKey;\n    }\n\n    if ('ctrlKey' in ev) {\n      changed = changed || ev.ctrlKey !== mods.control;\n      mods.control = !!ev.ctrlKey;\n    }\n\n    if ('metaKey' in ev) {\n      changed = changed || ev.metaKey !== mods.meta;\n      mods.meta = !!ev.metaKey;\n    }\n\n    return changed;\n  }\n\n  function handleEvent(nextButtons, ev) {\n    var nextX = mouse.x(ev);\n    var nextY = mouse.y(ev);\n\n    if ('buttons' in ev) {\n      nextButtons = ev.buttons | 0;\n    }\n\n    if (nextButtons !== buttonState || nextX !== x || nextY !== y || updateMods(ev)) {\n      buttonState = nextButtons | 0;\n      x = nextX || 0;\n      y = nextY || 0;\n      callback && callback(buttonState, x, y, mods);\n    }\n  }\n\n  function clearState(ev) {\n    handleEvent(0, ev);\n  }\n\n  function handleBlur() {\n    if (buttonState || x || y || mods.shift || mods.alt || mods.meta || mods.control) {\n      x = y = 0;\n      buttonState = 0;\n      mods.shift = mods.alt = mods.control = mods.meta = false;\n      callback && callback(0, 0, 0, mods);\n    }\n  }\n\n  function handleMods(ev) {\n    if (updateMods(ev)) {\n      callback && callback(buttonState, x, y, mods);\n    }\n  }\n\n  function handleMouseMove(ev) {\n    if (mouse.buttons(ev) === 0) {\n      handleEvent(0, ev);\n    } else {\n      handleEvent(buttonState, ev);\n    }\n  }\n\n  function handleMouseDown(ev) {\n    handleEvent(buttonState | mouse.buttons(ev), ev);\n  }\n\n  function handleMouseUp(ev) {\n    handleEvent(buttonState & ~mouse.buttons(ev), ev);\n  }\n\n  function attachListeners() {\n    if (attached) {\n      return;\n    }\n\n    attached = true;\n    element.addEventListener('mousemove', handleMouseMove);\n    element.addEventListener('mousedown', handleMouseDown);\n    element.addEventListener('mouseup', handleMouseUp);\n    element.addEventListener('mouseleave', clearState);\n    element.addEventListener('mouseenter', clearState);\n    element.addEventListener('mouseout', clearState);\n    element.addEventListener('mouseover', clearState);\n    element.addEventListener('blur', handleBlur);\n    element.addEventListener('keyup', handleMods);\n    element.addEventListener('keydown', handleMods);\n    element.addEventListener('keypress', handleMods);\n\n    if (element !== window) {\n      window.addEventListener('blur', handleBlur);\n      window.addEventListener('keyup', handleMods);\n      window.addEventListener('keydown', handleMods);\n      window.addEventListener('keypress', handleMods);\n    }\n  }\n\n  function detachListeners() {\n    if (!attached) {\n      return;\n    }\n\n    attached = false;\n    element.removeEventListener('mousemove', handleMouseMove);\n    element.removeEventListener('mousedown', handleMouseDown);\n    element.removeEventListener('mouseup', handleMouseUp);\n    element.removeEventListener('mouseleave', clearState);\n    element.removeEventListener('mouseenter', clearState);\n    element.removeEventListener('mouseout', clearState);\n    element.removeEventListener('mouseover', clearState);\n    element.removeEventListener('blur', handleBlur);\n    element.removeEventListener('keyup', handleMods);\n    element.removeEventListener('keydown', handleMods);\n    element.removeEventListener('keypress', handleMods);\n\n    if (element !== window) {\n      window.removeEventListener('blur', handleBlur);\n      window.removeEventListener('keyup', handleMods);\n      window.removeEventListener('keydown', handleMods);\n      window.removeEventListener('keypress', handleMods);\n    }\n  } // Attach listeners\n\n\n  attachListeners();\n  var result = {\n    element: element\n  };\n  Object.defineProperties(result, {\n    enabled: {\n      get: function get() {\n        return attached;\n      },\n      set: function set(f) {\n        if (f) {\n          attachListeners();\n        } else {\n          detachListeners();\n        }\n      },\n      enumerable: true\n    },\n    buttons: {\n      get: function get() {\n        return buttonState;\n      },\n      enumerable: true\n    },\n    x: {\n      get: function get() {\n        return x;\n      },\n      enumerable: true\n    },\n    y: {\n      get: function get() {\n        return y;\n      },\n      enumerable: true\n    },\n    mods: {\n      get: function get() {\n        return mods;\n      },\n      enumerable: true\n    }\n  });\n  return result;\n}","map":null,"metadata":{},"sourceType":"script"}