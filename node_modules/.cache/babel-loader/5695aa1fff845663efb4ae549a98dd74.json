{"ast":null,"code":"import _classCallCheck from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/person/person-container.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport PersonForm from \"./components/person-form\";\nimport * as API_USERS from \"./api/person-api\";\nimport PersonTable from \"./components/person-table\";\n\nvar PersonContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PersonContainer, _React$Component);\n\n  function PersonContainer(props) {\n    var _this;\n\n    _classCallCheck(this, PersonContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PersonContainer).call(this, props));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selected: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(PersonContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchPersons();\n    }\n  }, {\n    key: \"fetchPersons\",\n    value: function fetchPersons() {\n      var _this2 = this;\n\n      return API_USERS.getPersons(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.setState({\n            tableData: result,\n            isLoaded: true\n          });\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n      this.toggleForm();\n      this.fetchPersons();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \" Person Management \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Add Person \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, this.state.isLoaded && React.createElement(PersonTable, {\n        tableData: this.state.tableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      })))), React.createElement(Modal, {\n        isOpen: this.state.selected,\n        toggle: this.toggleForm,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleForm,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \" Add Person: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(PersonForm, {\n        reloadHandler: this.reload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PersonContainer;\n}(React.Component);\n\nexport default PersonContainer;","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/person/person-container.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","PersonForm","API_USERS","PersonTable","PersonContainer","props","toggleForm","bind","reload","state","selected","collapseForm","tableData","isLoaded","errorStatus","error","fetchPersons","getPersons","result","status","err","setState","size","offset","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    Row\n} from 'reactstrap';\nimport PersonForm from \"./components/person-form\";\n\nimport * as API_USERS from \"./api/person-api\"\nimport PersonTable from \"./components/person-table\";\n\n\n\nclass PersonContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.reload = this.reload.bind(this);\n        this.state = {\n            selected: false,\n            collapseForm: false,\n            tableData: [],\n            isLoaded: false,\n            errorStatus: 0,\n            error: null\n        };\n    }\n\n    componentDidMount() {\n        this.fetchPersons();\n    }\n\n    fetchPersons() {\n        return API_USERS.getPersons((result, status, err) => {\n\n            if (result !== null && status === 200) {\n                this.setState({\n                    tableData: result,\n                    isLoaded: true\n                });\n            } else {\n                this.setState(({\n                    errorStatus: status,\n                    error: err\n                }));\n            }\n        });\n    }\n\n    toggleForm() {\n        this.setState({selected: !this.state.selected});\n    }\n\n\n    reload() {\n        this.setState({\n            isLoaded: false\n        });\n        this.toggleForm();\n        this.fetchPersons();\n    }\n\n    render() {\n        return (\n            <div>\n                <CardHeader>\n                    <strong> Person Management </strong>\n                </CardHeader>\n                <Card>\n                    <br/>\n                    <Row>\n                        <Col sm={{size: '8', offset: 1}}>\n                            <Button color=\"primary\" onClick={this.toggleForm}>Add Person </Button>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col sm={{size: '8', offset: 1}}>\n                            {this.state.isLoaded && <PersonTable tableData = {this.state.tableData}/>}\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\n                                                            errorStatus={this.state.errorStatus}\n                                                            error={this.state.error}\n                                                        />   }\n                        </Col>\n                    </Row>\n                </Card>\n\n                <Modal isOpen={this.state.selected} toggle={this.toggleForm}\n                       className={this.props.className} size=\"lg\">\n                    <ModalHeader toggle={this.toggleForm}> Add Person: </ModalHeader>\n                    <ModalBody>\n                        <PersonForm reloadHandler={this.reload}/>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default PersonContainer;\n"]},"metadata":{},"sourceType":"module"}