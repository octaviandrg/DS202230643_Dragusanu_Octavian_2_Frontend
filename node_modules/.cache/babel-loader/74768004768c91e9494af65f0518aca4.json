{"ast":null,"code":"import _classCallCheck from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/device/user-device-container.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalHeader, Row } from 'reactstrap';\nimport * as API_DEVICES from \"./api/device-api\";\nimport DeviceTable from \"./components/device-table\";\nimport ConsumptionTable from \"../consumption/components/consumption-table\";\nimport ConsumptionsGetByDevice from './components/consumptions-get';\n\nvar UserDeviceContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserDeviceContainer, _React$Component);\n\n  function UserDeviceContainer(props) {\n    var _this;\n\n    _classCallCheck(this, UserDeviceContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserDeviceContainer).call(this, props));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleFormGetConsumptionByDevice = _this.toggleFormGetConsumptionByDevice.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      selected: false,\n      selectedGetConsumption: false,\n      collapseForm: false,\n      tableData: [],\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(UserDeviceContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchDevices();\n    }\n  }, {\n    key: \"fetchDevices\",\n    value: function fetchDevices() {\n      var _this2 = this;\n\n      return API_DEVICES.getDevicesByUsername(function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this2.setState({\n            tableData: result,\n            isLoaded: true\n          });\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false,\n        selected: false,\n        selectedGetConsumption: false\n      }); // this.toggleForm();\n\n      this.fetchDevices();\n    }\n  }, {\n    key: \"toggleFormGetConsumptionByDevice\",\n    value: function toggleFormGetConsumptionByDevice() {\n      this.setState({\n        selectedGetConsumption: !this.state.selectedGetConsumption\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Consumption\")), \"  \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, this.state.isLoaded && React.createElement(DeviceTable, {\n        tableData: this.state.tableData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.toggleFormGetConsumptionByDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Consumption for Device \"))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      })), React.createElement(Modal, {\n        isOpen: this.state.selectedGetConsumption,\n        toggle: this.toggleFormGetConsumptionByDevice,\n        className: this.props.className,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(ModalHeader, {\n        toggle: this.toggleFormGetConsumptionByDevice,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \" Get consumption for device: \"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(ConsumptionsGetByDevice, {\n        reloadHandler: this.reload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return UserDeviceContainer;\n}(React.Component);\n\nexport default UserDeviceContainer;","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/device/user-device-container.js"],"names":["React","APIResponseErrorMessage","Button","Card","CardHeader","Col","Modal","ModalBody","ModalHeader","Row","API_DEVICES","DeviceTable","ConsumptionTable","ConsumptionsGetByDevice","UserDeviceContainer","props","reload","bind","toggleFormGetConsumptionByDevice","state","selected","selectedGetConsumption","collapseForm","tableData","isLoaded","errorStatus","error","fetchDevices","getDevicesByUsername","result","status","err","setState","size","offset","className","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport {\n    Button,\n    Card,\n    CardHeader,\n    Col,\n    Modal,\n    ModalBody,\n    ModalHeader,\n    Row\n} from 'reactstrap';\nimport * as API_DEVICES from \"./api/device-api\"\nimport DeviceTable from \"./components/device-table\";\nimport ConsumptionTable from \"../consumption/components/consumption-table\"\nimport ConsumptionsGetByDevice from './components/consumptions-get';\n\n\n\n\nclass UserDeviceContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.reload = this.reload.bind(this);\n        this.toggleFormGetConsumptionByDevice = this.toggleFormGetConsumptionByDevice.bind(this);\n        this.state = {\n            selected: false,\n            selectedGetConsumption: false,\n            collapseForm: false,\n            tableData: [],\n            isLoaded: false,\n            errorStatus: 0,\n            error: null\n        };\n    }\n\n    componentDidMount() {\n        this.fetchDevices();\n    }\n\n    fetchDevices() {\n        return API_DEVICES.getDevicesByUsername((result, status, err) => {\n\n            if (result !== null && status === 200) {\n                this.setState({\n                    tableData: result,\n                    isLoaded: true\n                });\n            } else {\n                this.setState(({\n                    errorStatus: status,\n                    error: err\n                }));\n            }\n        });\n    }\n\n\n\n    reload() {\n        this.setState({\n            isLoaded: false,\n            selected: false,\n            selectedGetConsumption: false\n        });\n       // this.toggleForm();\n        this.fetchDevices();\n        \n    }\n\n    toggleFormGetConsumptionByDevice() {\n        this.setState({selectedGetConsumption: !this.state.selectedGetConsumption});\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <CardHeader>\n                <strong><h2><center>Consumption</center></h2>  </strong>\n                </CardHeader>\n                <Card>\n                    <Row>\n                        <Col sm={{size: '8', offset: 1}}>\n                            {this.state.isLoaded && <DeviceTable tableData = {this.state.tableData}/>}\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\n                                errorStatus={this.state.errorStatus}\n                                error={this.state.error}\n                            />   }\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col sm={{size: '8', offset: 1}}>\n                            <Button color=\"primary\" onClick={this.toggleFormGetConsumptionByDevice}>Consumption for Device </Button>\n                        </Col>\n                    </Row>\n                    <br/>\n                    {/* {this.state.selectedGetConsumption &&\n                    (<Row>\n                        <Col sm={{size: '8', offset: 1}}>\n                            {this.state.isLoaded && <ConsumptionTable tableData = {this.state.tableData}/>}\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\n                                errorStatus={this.state.errorStatus}\n                                error={this.state.error}\n                            />   }\n                        </Col>\n                    </Row>)} */}\n\n                    \n                   \n    \n                </Card>\n\n                <Modal isOpen={this.state.selectedGetConsumption} toggle={this.toggleFormGetConsumptionByDevice}\n                       className={this.props.className} size=\"lg\">\n                    <ModalHeader toggle={this.toggleFormGetConsumptionByDevice}> Get consumption for device: </ModalHeader>\n                    <ModalBody>\n                        <ConsumptionsGetByDevice reloadHandler={this.reload}/>\n                    </ModalBody>\n                </Modal>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default UserDeviceContainer;\n"]},"metadata":{},"sourceType":"module"}