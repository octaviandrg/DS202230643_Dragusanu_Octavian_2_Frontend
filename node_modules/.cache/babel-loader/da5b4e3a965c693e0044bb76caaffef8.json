{"ast":null,"code":"'use strict';\n/**\n * Histogram has its own attribute, defaults and calc steps,\n * but uses bar's plot to display\n * and bar's crossTraceCalc (formerly known as setPositions) for stacking and grouping\n */\n\n/**\n * histogram errorBarsOK is debatable, but it's put in for backward compat.\n * there are use cases for it - sqrt for a simple histogram works right now,\n * constant and % work but they're not so meaningful. I guess it could be cool\n * to allow quadrature combination of errors in summed histograms...\n */\n\nmodule.exports = {\n  attributes: require('./attributes'),\n  layoutAttributes: require('../bar/layout_attributes'),\n  supplyDefaults: require('./defaults'),\n  crossTraceDefaults: require('./cross_trace_defaults'),\n  supplyLayoutDefaults: require('../bar/layout_defaults'),\n  calc: require('./calc').calc,\n  crossTraceCalc: require('../bar/cross_trace_calc').crossTraceCalc,\n  plot: require('../bar/plot').plot,\n  layerName: 'barlayer',\n  style: require('../bar/style').style,\n  styleOnSelect: require('../bar/style').styleOnSelect,\n  colorbar: require('../scatter/marker_colorbar'),\n  hoverPoints: require('./hover'),\n  selectPoints: require('../bar/select'),\n  eventData: require('./event_data'),\n  moduleType: 'trace',\n  name: 'histogram',\n  basePlotModule: require('../../plots/cartesian'),\n  categories: ['bar-like', 'cartesian', 'svg', 'bar', 'histogram', 'oriented', 'errorBarsOK', 'showLegend'],\n  meta: {\n    description: ['The sample data from which statistics are computed is set in `x`', 'for vertically spanning histograms and', 'in `y` for horizontally spanning histograms.', 'Binning options are set `xbins` and `ybins` respectively', 'if no aggregation data is provided.'].join(' ')\n  }\n};","map":null,"metadata":{},"sourceType":"script"}