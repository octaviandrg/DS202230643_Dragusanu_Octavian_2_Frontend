{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nmodule.exports = function handleSampleDefaults(traceIn, traceOut, coerce, layout) {\n  var x = coerce('x');\n  var y = coerce('y');\n  var xlen = Lib.minRowLength(x);\n  var ylen = Lib.minRowLength(y); // we could try to accept x0 and dx, etc...\n  // but that's a pretty weird use case.\n  // for now require both x and y explicitly specified.\n\n  if (!xlen || !ylen) {\n    traceOut.visible = false;\n    return;\n  }\n\n  traceOut._length = Math.min(xlen, ylen);\n  var handleCalendarDefaults = Registry.getComponentMethod('calendars', 'handleTraceDefaults');\n  handleCalendarDefaults(traceIn, traceOut, ['x', 'y'], layout); // if marker.color is an array, we can use it in aggregation instead of z\n\n  var hasAggregationData = coerce('z') || coerce('marker.color');\n  if (hasAggregationData) coerce('histfunc');\n  coerce('histnorm'); // Note: bin defaults are now handled in Histogram2D.crossTraceDefaults\n  // autobin(x|y) are only included here to appease Plotly.validate\n\n  coerce('autobinx');\n  coerce('autobiny');\n};","map":null,"metadata":{},"sourceType":"script"}