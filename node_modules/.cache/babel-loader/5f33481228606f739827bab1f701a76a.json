{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar Color = require('../color');\n\nvar isUnifiedHover = require('./helpers').isUnifiedHover;\n\nmodule.exports = function handleHoverLabelDefaults(contIn, contOut, coerce, opts) {\n  opts = opts || {};\n  var hasLegend = contOut.legend;\n\n  function inheritFontAttr(attr) {\n    if (!opts.font[attr]) {\n      opts.font[attr] = hasLegend ? contOut.legend.font[attr] : contOut.font[attr];\n    }\n  } // In unified hover, inherit from layout.legend if available or layout\n\n\n  if (contOut && isUnifiedHover(contOut.hovermode)) {\n    if (!opts.font) opts.font = {};\n    inheritFontAttr('size');\n    inheritFontAttr('family');\n    inheritFontAttr('color');\n\n    if (hasLegend) {\n      if (!opts.bgcolor) opts.bgcolor = Color.combine(contOut.legend.bgcolor, contOut.paper_bgcolor);\n      if (!opts.bordercolor) opts.bordercolor = contOut.legend.bordercolor;\n    } else {\n      if (!opts.bgcolor) opts.bgcolor = contOut.paper_bgcolor;\n    }\n  }\n\n  coerce('hoverlabel.bgcolor', opts.bgcolor);\n  coerce('hoverlabel.bordercolor', opts.bordercolor);\n  coerce('hoverlabel.namelength', opts.namelength);\n  Lib.coerceFont(coerce, 'hoverlabel.font', opts.font);\n  coerce('hoverlabel.align', opts.align);\n};","map":null,"metadata":{},"sourceType":"script"}