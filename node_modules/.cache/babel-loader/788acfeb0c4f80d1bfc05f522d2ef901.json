{"ast":null,"code":"'use strict';\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar scatterGeoAttrs = require('../scattergeo/attributes');\n\nvar colorScaleAttrs = require('../../components/colorscale/attributes');\n\nvar baseAttrs = require('../../plots/attributes');\n\nvar defaultLine = require('../../components/color/attributes').defaultLine;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar scatterGeoMarkerLineAttrs = scatterGeoAttrs.marker.line;\nmodule.exports = extendFlat({\n  locations: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['Sets the coordinates via location IDs or names.', 'See `locationmode` for more info.'].join(' ')\n  },\n  locationmode: scatterGeoAttrs.locationmode,\n  z: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: 'Sets the color values.'\n  },\n  geojson: extendFlat({}, scatterGeoAttrs.geojson, {\n    description: ['Sets optional GeoJSON data associated with this trace.', 'If not given, the features on the base map are used.', 'It can be set as a valid GeoJSON object or as a URL string.', 'Note that we only accept GeoJSONs of type *FeatureCollection* or *Feature*', 'with geometries of type *Polygon* or *MultiPolygon*.' // TODO add topojson support with additional 'topojsonobject' attr?\n    // https://github.com/topojson/topojson-specification/blob/master/README.md\n    ].join(' ')\n  }),\n  featureidkey: scatterGeoAttrs.featureidkey,\n  text: extendFlat({}, scatterGeoAttrs.text, {\n    description: 'Sets the text elements associated with each location.'\n  }),\n  hovertext: extendFlat({}, scatterGeoAttrs.hovertext, {\n    description: 'Same as `text`.'\n  }),\n  marker: {\n    line: {\n      color: extendFlat({}, scatterGeoMarkerLineAttrs.color, {\n        dflt: defaultLine\n      }),\n      width: extendFlat({}, scatterGeoMarkerLineAttrs.width, {\n        dflt: 1\n      }),\n      editType: 'calc'\n    },\n    opacity: {\n      valType: 'number',\n      arrayOk: true,\n      min: 0,\n      max: 1,\n      dflt: 1,\n      editType: 'style',\n      description: 'Sets the opacity of the locations.'\n    },\n    editType: 'calc'\n  },\n  selected: {\n    marker: {\n      opacity: scatterGeoAttrs.selected.marker.opacity,\n      editType: 'plot'\n    },\n    editType: 'plot'\n  },\n  unselected: {\n    marker: {\n      opacity: scatterGeoAttrs.unselected.marker.opacity,\n      editType: 'plot'\n    },\n    editType: 'plot'\n  },\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    editType: 'calc',\n    flags: ['location', 'z', 'text', 'name']\n  }),\n  hovertemplate: hovertemplateAttrs(),\n  showlegend: extendFlat({}, baseAttrs.showlegend, {\n    dflt: false\n  })\n}, colorScaleAttrs('', {\n  cLetter: 'z',\n  editTypeOverride: 'calc'\n}));","map":null,"metadata":{},"sourceType":"script"}