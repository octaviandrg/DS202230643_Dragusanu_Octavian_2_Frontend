{"ast":null,"code":"import _objectSpread from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/login/login-container.js\";\nimport React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport { withRouter } from \"react-router-dom\";\nimport { Button, Card, CardHeader, Col, FormGroup, Input, Label, Row } from 'reactstrap';\nimport * as API_USERS from \"./api/login-api\";\n\nvar LoginContainer =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LoginContainer, _React$Component);\n\n  function LoginContainer(props) {\n    var _this;\n\n    _classCallCheck(this, LoginContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LoginContainer).call(this, props));\n\n    _this.onUsernameChanged = function (event) {\n      var newUsername = _objectSpread({}, _this.state.username);\n\n      newUsername.touched = true;\n      newUsername.value = event.target.value;\n\n      _this.setState({\n        username: newUsername\n      });\n    };\n\n    _this.onPasswordChanged = function (event) {\n      var newPassword = _objectSpread({}, _this.state.password);\n\n      newPassword.touched = true;\n      newPassword.value = event.target.value;\n\n      _this.setState({\n        password: newPassword\n      });\n    };\n\n    _this.handleSubmit = function () {\n      var username = _this.state.username.value;\n      var password = _this.state.password.value;\n      return API_USERS.login(username, password, function (result, status, err) {\n        if (result !== null && status === 200) {\n          _this.onLoginSuccessful({\n            id: result.id,\n            username: result.username,\n            role: result.role\n          });\n        } else {\n          _this.setState({\n            errorStatus: status,\n            error: err\n          });\n        }\n      });\n    };\n\n    _this.onLoginSuccessful = _this.onLoginSuccessful.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onUsernameChanged = _this.onUsernameChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onPasswordChanged = _this.onPasswordChanged.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reload = _this.reload.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.state = {\n      username: {\n        value: '',\n        touched: false\n      },\n      password: {\n        value: '',\n        touched: false\n      },\n      isLoaded: false,\n      errorStatus: 0,\n      error: null\n    };\n    return _this;\n  }\n\n  _createClass(LoginContainer, [{\n    key: \"onLoginSuccessful\",\n    value: function onLoginSuccessful(user) {\n      this.props.onSuccess(user);\n      this.props.history.push('/');\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        selected: !this.state.selected\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      this.setState({\n        isLoaded: false\n      });\n      this.toggleForm();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var isUsernameValid = function isUsernameValid() {\n        var username = _this2.state.username;\n\n        if (!username.touched) {\n          return undefined;\n        }\n\n        return username && username.touched && username.value.length >= 3;\n      };\n\n      var isPasswordValid = function isPasswordValid() {\n        var password = _this2.state.password;\n\n        if (!password.touched) {\n          return undefined;\n        }\n\n        return password && password.touched && password.value.length >= 3;\n      };\n\n      var isFormValid = function isFormValid() {\n        return _this2.state.username.touched && _this2.state.password.touched && isUsernameValid() && isPasswordValid();\n      };\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Login\")), \"  \")), React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: '4'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        id: \"username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"nameField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \" Username: \"), React.createElement(Input, {\n        username: \"username\",\n        id: \"nameField\",\n        placeholder: \"Username\",\n        onChange: this.onUsernameChanged,\n        value: this.state.username.value,\n        valid: isUsernameValid(),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), isUsernameValid() === false && React.createElement(\"div\", {\n        className: \"error-message row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \" * Username must have at least 3 characters \")), React.createElement(FormGroup, {\n        id: \"password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"passwordField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \" Password: \"), React.createElement(Input, {\n        username: \"password\",\n        type: \"password\",\n        id: \"passwordField\",\n        placeholder: \"Password\",\n        onChange: this.onPasswordChanged,\n        value: this.state.password.value,\n        valid: isPasswordValid(),\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '4',\n          offset: 8\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"submit\",\n        disabled: !isFormValid(),\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"  Submit \"))))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: '8',\n          offset: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return LoginContainer;\n}(React.Component);\n\nexport default withRouter(LoginContainer);","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/login/login-container.js"],"names":["React","APIResponseErrorMessage","withRouter","Button","Card","CardHeader","Col","FormGroup","Input","Label","Row","API_USERS","LoginContainer","props","onUsernameChanged","event","newUsername","state","username","touched","value","target","setState","onPasswordChanged","newPassword","password","handleSubmit","login","result","status","err","onLoginSuccessful","id","role","errorStatus","error","bind","toggleForm","reload","isLoaded","user","onSuccess","history","push","selected","isUsernameValid","undefined","length","isPasswordValid","isFormValid","size","offset","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport APIResponseErrorMessage from \"../commons/errorhandling/api-response-error-message\";\nimport {withRouter} from \"react-router-dom\";\nimport {Button, Card, CardHeader, Col, FormGroup, Input, Label, Row} from 'reactstrap';\nimport * as API_USERS from \"./api/login-api\"\n\n\nclass LoginContainer extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.onLoginSuccessful = this.onLoginSuccessful.bind(this);\n        this.onUsernameChanged = this.onUsernameChanged.bind(this);\n        this.onPasswordChanged = this.onPasswordChanged.bind(this);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.reload = this.reload.bind(this);\n        this.state = {\n            username: {\n                value: '',\n                touched: false\n            },\n            password: {\n                value: '',\n                touched: false\n            },\n            isLoaded: false,\n            errorStatus: 0,\n            error: null\n        };\n    }\n\n    onLoginSuccessful(user) {\n        this.props.onSuccess(user);\n        this.props.history.push('/');\n    }\n\n    toggleForm() {\n        this.setState({selected: !this.state.selected});\n    }\n\n\n    reload() {\n        this.setState({\n            isLoaded: false\n        });\n        this.toggleForm();\n    }\n\n    onUsernameChanged = (event) => {\n        let newUsername = {...this.state.username};\n        newUsername.touched = true;\n        newUsername.value = event.target.value;\n\n        this.setState({\n            username: newUsername\n        });\n    }\n\n    onPasswordChanged = (event) => {\n        let newPassword = {...this.state.password};\n        newPassword.touched = true;\n        newPassword.value = event.target.value;\n\n        this.setState({\n            password: newPassword\n        });\n    }\n\n    handleSubmit = () => {\n        const username = this.state.username.value;\n        const password = this.state.password.value;\n        return API_USERS.login(username, password, (result, status, err) => {\n\n            if (result !== null && status === 200) {\n                this.onLoginSuccessful({\n                    id: result.id,\n                    username: result.username,\n                    role: result.role\n                });\n            } else {\n                this.setState(({\n                    errorStatus: status,\n                    error: err\n                }));\n            }\n        });\n    }\n\n    render() {\n        const isUsernameValid = () => {\n            const username = this.state.username;\n            if (!username.touched) {\n                return undefined;\n            }\n\n            return username &&\n                username.touched &&\n                username.value.length >= 3;\n        }\n\n        const isPasswordValid = () => {\n            const password = this.state.password;\n            if (!password.touched) {\n                return undefined;\n            }\n\n            return password &&\n                password.touched &&\n                password.value.length >= 3;\n        }\n\n        const isFormValid = () => {\n            return this.state.username.touched &&\n                this.state.password.touched &&\n                isUsernameValid() &&\n                isPasswordValid();\n        }\n\n        return (\n            <div>\n                <CardHeader>\n                    <strong><h2><center>Login</center></h2>  </strong>\n                </CardHeader>\n                <Card>\n                    <br/>\n                    <Row>\n                        <Col sm={{size: '4', offset: '4'}}>\n                            <FormGroup id='username'>\n                                <Label for='nameField'> Username: </Label>\n                                <Input username='username' id='nameField' placeholder='Username'\n                                       onChange={this.onUsernameChanged}\n                                       value={this.state.username.value}\n                                       valid={isUsernameValid()}\n                                       required\n                                />\n                                {isUsernameValid() === false &&\n                                <div className={\"error-message row\"}> * Username must have at least 3 characters </div>}\n                            </FormGroup>\n\n\n                            <FormGroup id='password'>\n                                <Label for='passwordField'> Password: </Label>\n                                <Input username='password' type='password' id='passwordField' placeholder='Password'\n                                       onChange={this.onPasswordChanged}\n                                       value={this.state.password.value}\n                                       valid={isPasswordValid()}\n                                       required\n                                />\n                            </FormGroup>\n\n                            <Row>\n                                <Col sm={{size: '4', offset: 8}}>\n                                    <Button type={\"submit\"} disabled={!isFormValid()} onClick={this.handleSubmit}>  Submit </Button>\n                                </Col>\n                            </Row>\n                        </Col>\n                    </Row>\n                    <br/>\n                    <Row>\n                        <Col sm={{size: '8', offset: 1}}>\n\n                            {this.state.errorStatus > 0 && <APIResponseErrorMessage\n                                                            errorStatus={this.state.errorStatus}\n                                                            error={this.state.error}\n                                                        />   }\n                        </Col>\n                    </Row>\n                </Card>\n\n            </div>\n        )\n\n    }\n}\n\n\nexport default withRouter(LoginContainer);\n"]},"metadata":{},"sourceType":"module"}