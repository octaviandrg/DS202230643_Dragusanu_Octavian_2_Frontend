{"ast":null,"code":"'use strict';\n\nvar Transform = require('stream').Transform;\n\nvar streamParser = require('stream-parser');\n\nfunction ParserStream() {\n  Transform.call(this, {\n    readableObjectMode: true\n  });\n} // Inherit from Transform\n\n\nParserStream.prototype = Object.create(Transform.prototype);\nParserStream.prototype.constructor = ParserStream;\nstreamParser(ParserStream.prototype);\nexports.ParserStream = ParserStream;\n\nexports.sliceEq = function (src, start, dest) {\n  for (var i = start, j = 0; j < dest.length;) {\n    if (src[i++] !== dest[j++]) return false;\n  }\n\n  return true;\n};\n\nexports.str2arr = function (str, format) {\n  var arr = [],\n      i = 0;\n\n  if (format && format === 'hex') {\n    while (i < str.length) {\n      arr.push(parseInt(str.slice(i, i + 2), 16));\n      i += 2;\n    }\n  } else {\n    for (; i < str.length; i++) {\n      /* eslint-disable no-bitwise */\n      arr.push(str.charCodeAt(i) & 0xFF);\n    }\n  }\n\n  return arr;\n};\n\nexports.readUInt16LE = function (data, offset) {\n  return data[offset] | data[offset + 1] << 8;\n};\n\nexports.readUInt16BE = function (data, offset) {\n  return data[offset + 1] | data[offset] << 8;\n};\n\nexports.readUInt32LE = function (data, offset) {\n  return data[offset] | data[offset + 1] << 8 | data[offset + 2] << 16 | data[offset + 3] * 0x1000000;\n};\n\nexports.readUInt32BE = function (data, offset) {\n  return data[offset + 3] | data[offset + 2] << 8 | data[offset + 1] << 16 | data[offset] * 0x1000000;\n};\n\nfunction ProbeError(message, code, statusCode) {\n  Error.call(this); // Include stack trace in error object\n\n  if (Error.captureStackTrace) {\n    // Chrome and NodeJS\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    // FF, IE 10+ and Safari 6+. Fallback for others\n    this.stack = new Error().stack || '';\n  }\n\n  this.name = this.constructor.name;\n  this.message = message;\n  if (code) this.code = code;\n  if (statusCode) this.statusCode = statusCode;\n} // Inherit from Error\n\n\nProbeError.prototype = Object.create(Error.prototype);\nProbeError.prototype.constructor = ProbeError;\nexports.ProbeError = ProbeError;","map":null,"metadata":{},"sourceType":"script"}