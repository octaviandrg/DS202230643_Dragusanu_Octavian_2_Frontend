{"ast":null,"code":"// Utils used to parse miaf-based files (avif/heic/heif)\n//\n//  - image collections are not supported (only last size is reported)\n//  - images with metadata encoded after image data are not supported\n//  - images without any `ispe` box are not supported\n//\n\n/* eslint-disable consistent-return */\n'use strict';\n\nvar str2arr = require('../common').str2arr;\n\nvar sliceEq = require('../common').sliceEq;\n\nvar readUInt32BE = require('../common').readUInt32BE;\n\nvar miaf = require('../miaf_utils');\n\nvar exif = require('../exif_utils');\n\nvar SIG_FTYP = str2arr('ftyp');\n\nmodule.exports = function (data) {\n  // ISO media file (avif format) starts with ftyp box:\n  // 0000 0020 6674 7970 6176 6966\n  //  (length)  f t  y p  a v  i f\n  //\n  if (!sliceEq(data, 4, SIG_FTYP)) return;\n  var firstBox = miaf.unbox(data, 0);\n  if (!firstBox) return;\n  var fileType = miaf.getMimeType(firstBox.data);\n  if (!fileType) return;\n  var meta,\n      offset = firstBox.end;\n\n  for (;;) {\n    var box = miaf.unbox(data, offset);\n    if (!box) break;\n    offset = box.end; // mdat block SHOULD be last (but not strictly required),\n    // so it's unlikely that metadata is after it\n\n    if (box.boxtype === 'mdat') return;\n\n    if (box.boxtype === 'meta') {\n      meta = box.data;\n      break;\n    }\n  }\n\n  if (!meta) return;\n  var imgSize = miaf.readSizeFromMeta(meta);\n  if (!imgSize) return;\n  var result = {\n    width: imgSize.width,\n    height: imgSize.height,\n    type: fileType.type,\n    mime: fileType.mime,\n    wUnits: 'px',\n    hUnits: 'px'\n  };\n\n  if (imgSize.variants.length > 1) {\n    result.variants = imgSize.variants;\n  }\n\n  if (imgSize.orientation) {\n    result.orientation = imgSize.orientation;\n  }\n\n  if (imgSize.exif_location && imgSize.exif_location.offset + imgSize.exif_location.length <= data.length) {\n    var sig_offset = readUInt32BE(data, imgSize.exif_location.offset);\n    var exif_data = data.slice(imgSize.exif_location.offset + sig_offset + 4, imgSize.exif_location.offset + imgSize.exif_location.length);\n    var orientation = exif.get_orientation(exif_data);\n    if (orientation > 0) result.orientation = orientation;\n  }\n\n  return result;\n};","map":null,"metadata":{},"sourceType":"script"}