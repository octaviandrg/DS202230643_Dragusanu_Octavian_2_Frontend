{"ast":null,"code":"'use strict';\n\nvar convert = require('./convert');\n\nvar LAYER_PREFIX = require('../../plots/mapbox/constants').traceLayerPrefix;\n\nfunction DensityMapbox(subplot, uid) {\n  this.type = 'densitymapbox';\n  this.subplot = subplot;\n  this.uid = uid;\n  this.sourceId = 'source-' + uid;\n  this.layerList = [['heatmap', LAYER_PREFIX + uid + '-heatmap']]; // previous 'below' value,\n  // need this to update it properly\n\n  this.below = null;\n}\n\nvar proto = DensityMapbox.prototype;\n\nproto.update = function (calcTrace) {\n  var subplot = this.subplot;\n  var layerList = this.layerList;\n  var optsAll = convert(calcTrace);\n  var below = subplot.belowLookup['trace-' + this.uid];\n  subplot.map.getSource(this.sourceId).setData(optsAll.geojson);\n\n  if (below !== this.below) {\n    this._removeLayers();\n\n    this._addLayers(optsAll, below);\n\n    this.below = below;\n  }\n\n  for (var i = 0; i < layerList.length; i++) {\n    var item = layerList[i];\n    var k = item[0];\n    var id = item[1];\n    var opts = optsAll[k];\n    subplot.setOptions(id, 'setLayoutProperty', opts.layout);\n\n    if (opts.layout.visibility === 'visible') {\n      subplot.setOptions(id, 'setPaintProperty', opts.paint);\n    }\n  }\n};\n\nproto._addLayers = function (optsAll, below) {\n  var subplot = this.subplot;\n  var layerList = this.layerList;\n  var sourceId = this.sourceId;\n\n  for (var i = 0; i < layerList.length; i++) {\n    var item = layerList[i];\n    var k = item[0];\n    var opts = optsAll[k];\n    subplot.addLayer({\n      type: k,\n      id: item[1],\n      source: sourceId,\n      layout: opts.layout,\n      paint: opts.paint\n    }, below);\n  }\n};\n\nproto._removeLayers = function () {\n  var map = this.subplot.map;\n  var layerList = this.layerList;\n\n  for (var i = layerList.length - 1; i >= 0; i--) {\n    map.removeLayer(layerList[i][1]);\n  }\n};\n\nproto.dispose = function () {\n  var map = this.subplot.map;\n\n  this._removeLayers();\n\n  map.removeSource(this.sourceId);\n};\n\nmodule.exports = function createDensityMapbox(subplot, calcTrace) {\n  var trace = calcTrace[0].trace;\n  var densityMapbox = new DensityMapbox(subplot, trace.uid);\n  var sourceId = densityMapbox.sourceId;\n  var optsAll = convert(calcTrace);\n  var below = densityMapbox.below = subplot.belowLookup['trace-' + trace.uid];\n  subplot.map.addSource(sourceId, {\n    type: 'geojson',\n    data: optsAll.geojson\n  });\n\n  densityMapbox._addLayers(optsAll, below);\n\n  return densityMapbox;\n};","map":null,"metadata":{},"sourceType":"script"}