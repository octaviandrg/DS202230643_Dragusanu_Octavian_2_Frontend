{"ast":null,"code":"'use strict';\n\nvar getSubplotCalcData = require('../get_data').getSubplotCalcData;\n\nvar counterRegex = require('../../lib').counterRegex;\n\nvar createPolar = require('../polar/polar');\n\nvar constants = require('./constants');\n\nvar attr = constants.attr;\nvar name = constants.name;\nvar counter = counterRegex(name);\nvar attributes = {};\nattributes[attr] = {\n  valType: 'subplotid',\n  dflt: name,\n  editType: 'calc',\n  description: ['Sets a reference between this trace\\'s data coordinates and', 'a smith subplot.', 'If *smith* (the default value), the data refer to `layout.smith`.', 'If *smith2*, the data refer to `layout.smith2`, and so on.'].join(' ')\n};\n\nfunction plot(gd) {\n  var fullLayout = gd._fullLayout;\n  var calcData = gd.calcdata;\n  var subplotIds = fullLayout._subplots[name];\n\n  for (var i = 0; i < subplotIds.length; i++) {\n    var id = subplotIds[i];\n    var subplotCalcData = getSubplotCalcData(calcData, name, id);\n    var subplot = fullLayout[id]._subplot;\n\n    if (!subplot) {\n      subplot = createPolar(gd, id, true);\n      fullLayout[id]._subplot = subplot;\n    }\n\n    subplot.plot(subplotCalcData, fullLayout, gd._promises);\n  }\n}\n\nfunction clean(newFullData, newFullLayout, oldFullData, oldFullLayout) {\n  var oldIds = oldFullLayout._subplots[name] || [];\n\n  for (var i = 0; i < oldIds.length; i++) {\n    var id = oldIds[i];\n    var oldSubplot = oldFullLayout[id]._subplot;\n\n    if (!newFullLayout[id] && !!oldSubplot) {\n      oldSubplot.framework.remove();\n\n      for (var k in oldSubplot.clipPaths) {\n        oldSubplot.clipPaths[k].remove();\n      }\n    }\n  }\n}\n\nmodule.exports = {\n  attr: attr,\n  name: name,\n  idRoot: name,\n  idRegex: counter,\n  attrRegex: counter,\n  attributes: attributes,\n  layoutAttributes: require('./layout_attributes'),\n  supplyLayoutDefaults: require('./layout_defaults'),\n  plot: plot,\n  clean: clean,\n  toSVG: require('../cartesian').toSVG\n};","map":null,"metadata":{},"sourceType":"script"}