{"ast":null,"code":"'use strict';\n\nvar Color = require('../../../components/color');\n\nvar axesAttrs = require('../../cartesian/layout_attributes');\n\nvar extendFlat = require('../../../lib/extend').extendFlat;\n\nvar overrideAll = require('../../../plot_api/edit_types').overrideAll;\n\nmodule.exports = overrideAll({\n  visible: axesAttrs.visible,\n  showspikes: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['Sets whether or not spikes starting from', 'data points to this axis\\' wall are shown on hover.'].join(' ')\n  },\n  spikesides: {\n    valType: 'boolean',\n    dflt: true,\n    description: ['Sets whether or not spikes extending from the', 'projection data points to this axis\\' wall boundaries', 'are shown on hover.'].join(' ')\n  },\n  spikethickness: {\n    valType: 'number',\n    min: 0,\n    dflt: 2,\n    description: 'Sets the thickness (in px) of the spikes.'\n  },\n  spikecolor: {\n    valType: 'color',\n    dflt: Color.defaultLine,\n    description: 'Sets the color of the spikes.'\n  },\n  showbackground: {\n    valType: 'boolean',\n    dflt: false,\n    description: ['Sets whether or not this axis\\' wall', 'has a background color.'].join(' ')\n  },\n  backgroundcolor: {\n    valType: 'color',\n    dflt: 'rgba(204, 204, 204, 0.5)',\n    description: 'Sets the background color of this axis\\' wall.'\n  },\n  showaxeslabels: {\n    valType: 'boolean',\n    dflt: true,\n    description: 'Sets whether or not this axis is labeled'\n  },\n  color: axesAttrs.color,\n  categoryorder: axesAttrs.categoryorder,\n  categoryarray: axesAttrs.categoryarray,\n  title: {\n    text: axesAttrs.title.text,\n    font: axesAttrs.title.font\n  },\n  type: extendFlat({}, axesAttrs.type, {\n    values: ['-', 'linear', 'log', 'date', 'category']\n  }),\n  autotypenumbers: axesAttrs.autotypenumbers,\n  autorange: axesAttrs.autorange,\n  rangemode: axesAttrs.rangemode,\n  range: extendFlat({}, axesAttrs.range, {\n    items: [{\n      valType: 'any',\n      editType: 'plot',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }, {\n      valType: 'any',\n      editType: 'plot',\n      impliedEdits: {\n        '^autorange': false\n      }\n    }],\n    anim: false\n  }),\n  // ticks\n  tickmode: axesAttrs.tickmode,\n  nticks: axesAttrs.nticks,\n  tick0: axesAttrs.tick0,\n  dtick: axesAttrs.dtick,\n  tickvals: axesAttrs.tickvals,\n  ticktext: axesAttrs.ticktext,\n  ticks: axesAttrs.ticks,\n  mirror: axesAttrs.mirror,\n  ticklen: axesAttrs.ticklen,\n  tickwidth: axesAttrs.tickwidth,\n  tickcolor: axesAttrs.tickcolor,\n  showticklabels: axesAttrs.showticklabels,\n  tickfont: axesAttrs.tickfont,\n  tickangle: axesAttrs.tickangle,\n  tickprefix: axesAttrs.tickprefix,\n  showtickprefix: axesAttrs.showtickprefix,\n  ticksuffix: axesAttrs.ticksuffix,\n  showticksuffix: axesAttrs.showticksuffix,\n  showexponent: axesAttrs.showexponent,\n  exponentformat: axesAttrs.exponentformat,\n  minexponent: axesAttrs.minexponent,\n  separatethousands: axesAttrs.separatethousands,\n  tickformat: axesAttrs.tickformat,\n  tickformatstops: axesAttrs.tickformatstops,\n  hoverformat: axesAttrs.hoverformat,\n  // lines and grids\n  showline: axesAttrs.showline,\n  linecolor: axesAttrs.linecolor,\n  linewidth: axesAttrs.linewidth,\n  showgrid: axesAttrs.showgrid,\n  gridcolor: extendFlat({}, axesAttrs.gridcolor, // shouldn't this be on-par with 2D?\n  {\n    dflt: 'rgb(204, 204, 204)'\n  }),\n  gridwidth: axesAttrs.gridwidth,\n  zeroline: axesAttrs.zeroline,\n  zerolinecolor: axesAttrs.zerolinecolor,\n  zerolinewidth: axesAttrs.zerolinewidth,\n  _deprecated: {\n    title: axesAttrs._deprecated.title,\n    titlefont: axesAttrs._deprecated.titlefont\n  }\n}, 'plot', 'from-root');","map":null,"metadata":{},"sourceType":"script"}