{"ast":null,"code":"import _classCallCheck from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/device/components/consumptions-get.js\";\nimport React from 'react';\nimport validate from \"../../client/components/validators/client-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_CONSUMPTION from \"../../consumption/api/consumption-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport { Col, Row } from \"reactstrap\";\nimport { FormGroup, Input, Label } from 'reactstrap';\nimport { object } from 'prop-types';\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport Chart from 'react-google-charts';\nimport { CanvasJSChart } from 'canvasjs-react-charts';\nimport { PlotSchema } from 'plotly.js';\nimport Plot from 'react-plotly.js';\nvar hours = [];\nvar cons = [];\n\nvar ConsumptionsGetByDevice =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ConsumptionsGetByDevice, _React$Component);\n\n  function ConsumptionsGetByDevice(props) {\n    var _this;\n\n    _classCallCheck(this, ConsumptionsGetByDevice);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ConsumptionsGetByDevice).call(this, props));\n\n    _this.handleChange = function (event) {\n      var name = event.target.name;\n      var value = event.target.value;\n      var updatedControls = _this.state.formControls;\n      var updatedFormElement = updatedControls[name];\n      updatedFormElement.value = value;\n      updatedFormElement.touched = true;\n      updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n      updatedControls[name] = updatedFormElement;\n      var formIsValid = true;\n\n      for (var updatedFormElementName in updatedControls) {\n        formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n      }\n\n      _this.setState({\n        formControls: updatedControls,\n        formIsValid: formIsValid\n      });\n    };\n\n    _this.toggleForm = _this.toggleForm.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.reloadHandler = _this.props.reloadHandler;\n    _this.state = {\n      errorStatus: 0,\n      error: null,\n      formIsValid: false,\n      formControls: {\n        deviceId: {\n          value: '',\n          placeholder: 'ID device...',\n          valid: false,\n          touched: false\n        }\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(ConsumptionsGetByDevice, [{\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        collapseForm: !this.state.collapseForm\n      });\n    }\n  }, {\n    key: \"buildGraph\",\n    value: function buildGraph(result) {\n      var length = result.length;\n      console.log(length);\n\n      for (var i = 0; i < length; i++) {\n        hours.push(result[i].hour);\n        cons.push(result[i].value);\n      }\n\n      var mapat = hours.map(function (x, i) {\n        return {\n          x: x,\n          y: cons[i]\n        };\n      });\n    }\n  }, {\n    key: \"getConsumptionByDeviceId\",\n    value: function getConsumptionByDeviceId(deviceId, d, m, y) {\n      var _this2 = this;\n\n      return API_CONSUMPTION.getConsumptionsByDeviceId(deviceId, d, m, y, function (result, status, error) {\n        if (result !== null && (status === 200 || status === 201)) {\n          _this2.buildGraph(result); //this.reloadHandler();\n\n        } else {\n          _this2.setState({\n            errorStatus: status,\n            error: error\n          });\n        }\n      });\n    }\n  }, {\n    key: \"handleSelect\",\n    value: function handleSelect(date) {\n      //const date = this.state.formControls.date.value;\n      var deviceId = this.state.formControls.deviceId.value; //const month = Date(Date.parse(date.substring(4,7) +\" 1, 2012\")).getMonth()+1\n\n      var data = date.toString();\n      var months = {\n        Jan: '01',\n        Feb: '02',\n        Mar: '03',\n        Apr: '04',\n        May: '05',\n        Jun: '06',\n        Jul: '07',\n        Aug: '08',\n        Sep: '09',\n        Oct: '10',\n        Nov: '11',\n        Dec: '12'\n      };\n      var m = months[data.substring(4, 7)];\n      var d = data.substring(8, 10);\n      var y = data.substring(11, 15);\n      this.getConsumptionByDeviceId(deviceId, d, m, y); //console.log(date);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {//const date = this.state.formControls.date.value;\n      ///console.log(deviceId + ' data: ');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        id: \"deviceId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"deviceIdField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \" Device ID: \"), React.createElement(Input, {\n        name: \"deviceId\",\n        id: \"deviceIdField\",\n        placeholder: this.state.formControls.deviceId.placeholder,\n        onChange: this.handleChange,\n        defaultValue: this.state.formControls.deviceId.value,\n        touched: this.state.formControls.deviceId.touched ? 1 : 0,\n        valid: this.state.formControls.deviceId.valid,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Calendar, {\n        onChange: function onChange(date) {\n          _this3.handleSelect(date);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Plot, {\n        data: [{\n          hours: hours,\n          cons: cons,\n          type: 'scatter',\n          mode: 'lines'\n        }, {\n          type: 'bar',\n          x: hours,\n          y: cons\n        }],\n        layout: {\n          width: 600,\n          height: 600,\n          title: 'Consumption plot'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), this.state.errorStatus > 0 && React.createElement(APIResponseErrorMessage, {\n        errorStatus: this.state.errorStatus,\n        error: this.state.error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ConsumptionsGetByDevice;\n}(React.Component);\n\nexport default ConsumptionsGetByDevice;","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/device/components/consumptions-get.js"],"names":["React","validate","Button","API_CONSUMPTION","APIResponseErrorMessage","Col","Row","FormGroup","Input","Label","object","useState","Calendar","Chart","CanvasJSChart","PlotSchema","Plot","hours","cons","ConsumptionsGetByDevice","props","handleChange","event","name","target","value","updatedControls","state","formControls","updatedFormElement","touched","valid","validationRules","formIsValid","updatedFormElementName","setState","toggleForm","bind","reloadHandler","errorStatus","error","deviceId","placeholder","handleSubmit","collapseForm","result","length","console","log","i","push","hour","mapat","map","x","y","d","m","getConsumptionsByDeviceId","status","buildGraph","date","data","toString","months","Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec","substring","getConsumptionByDeviceId","handleSelect","type","mode","width","height","title","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport validate from \"../../client/components/validators/client-validators\";\nimport Button from \"react-bootstrap/Button\";\nimport * as API_CONSUMPTION from \"../../consumption/api/consumption-api\";\nimport APIResponseErrorMessage from \"../../commons/errorhandling/api-response-error-message\";\nimport {Col, Row} from \"reactstrap\";\nimport { FormGroup, Input, Label} from 'reactstrap';\nimport { object } from 'prop-types';\nimport { useState } from 'react';\nimport Calendar from 'react-calendar';\nimport 'react-calendar/dist/Calendar.css';\nimport Chart from 'react-google-charts'\nimport {CanvasJSChart} from 'canvasjs-react-charts'\nimport { PlotSchema } from 'plotly.js';\nimport Plot from 'react-plotly.js';\n\nvar hours = [];\nvar cons = [];\n\n\n\nclass ConsumptionsGetByDevice extends React.Component {\n\n    constructor(props) {\n    \n        super(props);\n        this.toggleForm = this.toggleForm.bind(this);\n        this.reloadHandler = this.props.reloadHandler;\n\n        this.state = {\n\n            errorStatus: 0,\n            error: null,\n\n            formIsValid: false,\n\n            formControls: {\n                deviceId: {\n                    value: '',\n                    placeholder: 'ID device...',\n                    valid: false,\n                    touched: false,\n                },\n              \n            }\n        };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    toggleForm() {\n        this.setState({collapseForm: !this.state.collapseForm});\n    }\n\n\n    handleChange = event => {\n\n        const name = event.target.name;\n        const value = event.target.value;\n\n        const updatedControls = this.state.formControls;\n\n        const updatedFormElement = updatedControls[name];\n\n        updatedFormElement.value = value;\n        updatedFormElement.touched = true;\n        updatedFormElement.valid = validate(value, updatedFormElement.validationRules);\n        updatedControls[name] = updatedFormElement;\n\n        let formIsValid = true;\n        for (let updatedFormElementName in updatedControls) {\n            formIsValid = updatedControls[updatedFormElementName].valid && formIsValid;\n        }\n\n        this.setState({\n            formControls: updatedControls,\n            formIsValid: formIsValid\n        });\n\n    };\n\n\n    buildGraph(result){\n        const length = result.length;\n        console.log(length);\n        for(var i = 0; i < length; i++){\n            hours.push(result[i].hour);\n            cons.push(result[i].value);\n        }\n        const mapat = hours.map((x, i) => ({ x, y: cons[i]}));\n    }\n\n    getConsumptionByDeviceId(deviceId, d, m, y) {\n        return API_CONSUMPTION.getConsumptionsByDeviceId(deviceId, d, m, y, (result, status, error) => {\n            if (result !== null && (status === 200 || status === 201)) {\n        \n                this.buildGraph(result);\n                //this.reloadHandler();\n            } else {\n                this.setState(({\n                    errorStatus: status,\n                    error: error\n                }));\n            }\n        });\n    }\n\n    \n\n    handleSelect(date){\n        //const date = this.state.formControls.date.value;\n        const deviceId = this.state.formControls.deviceId.value;\n        //const month = Date(Date.parse(date.substring(4,7) +\" 1, 2012\")).getMonth()+1\n        const data = date.toString();\n        const months = {\n            Jan: '01',\n            Feb: '02',\n            Mar: '03',\n            Apr: '04',\n            May: '05',\n            Jun: '06',\n            Jul: '07',\n            Aug: '08',\n            Sep: '09',\n            Oct: '10',\n            Nov: '11',\n            Dec: '12',\n          }\n        const m = months[data.substring(4, 7)];\n        const d = data.substring(8, 10);\n        const y = data.substring(11, 15);\n\n        this.getConsumptionByDeviceId(deviceId, d, m, y);\n        //console.log(date);\n    }\n\n    handleSubmit() {\n        \n        //const date = this.state.formControls.date.value;\n        ///console.log(deviceId + ' data: ');\n        \n    }\n\n    render() {\n        return (\n            <div>\n\n                <FormGroup id='deviceId'>\n                    <Label for='deviceIdField'> Device ID: </Label>\n                    <Input name='deviceId' id='deviceIdField' placeholder={this.state.formControls.deviceId.placeholder}\n                           onChange={this.handleChange}\n                           defaultValue={this.state.formControls.deviceId.value}\n                           touched={this.state.formControls.deviceId.touched? 1 : 0}\n                           valid={this.state.formControls.deviceId.valid}\n                           required\n                    />\n                </FormGroup>\n\n                <div>\n                \n                {/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n                </div>\n\n                <Row>\n                <Calendar \n                onChange={(date) => {this.handleSelect(date)}}\n\n                />\n                </Row>\n     \n                <Plot\n                    data={[\n                        {\n                          hours,\n                          cons,\n                          type: 'scatter',\n                          mode: 'lines',\n                          \n                        },\n                        {type: 'bar', x: hours, y: cons},\n                      ]}\n                      layout={ {width: 600, height: 600, title: 'Consumption plot'} } \n                />\n                    \n\n                \n                {\n                    this.state.errorStatus > 0 &&\n                    <APIResponseErrorMessage errorStatus={this.state.errorStatus} error={this.state.error}/>\n                }\n            </div>\n            \n        ) ;\n    }\n}\n\nexport default ConsumptionsGetByDevice;\n"]},"metadata":{},"sourceType":"module"}