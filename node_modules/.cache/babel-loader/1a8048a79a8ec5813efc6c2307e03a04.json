{"ast":null,"code":"'use strict';\n\nvar filterOps = require('../../constants/filter_ops');\n\nvar isNumeric = require('fast-isnumeric'); // This syntax conforms to the existing filter transform syntax, but we don't care\n// about open vs. closed intervals for simply drawing contours constraints:\n\n\nmodule.exports = {\n  '[]': makeRangeSettings('[]'),\n  '][': makeRangeSettings(']['),\n  '>': makeInequalitySettings('>'),\n  '<': makeInequalitySettings('<'),\n  '=': makeInequalitySettings('=')\n}; // This does not in any way shape or form support calendars. It's adapted from\n// transforms/filter.js.\n\nfunction coerceValue(operation, value) {\n  var hasArrayValue = Array.isArray(value);\n  var coercedValue;\n\n  function coerce(value) {\n    return isNumeric(value) ? +value : null;\n  }\n\n  if (filterOps.COMPARISON_OPS2.indexOf(operation) !== -1) {\n    coercedValue = hasArrayValue ? coerce(value[0]) : coerce(value);\n  } else if (filterOps.INTERVAL_OPS.indexOf(operation) !== -1) {\n    coercedValue = hasArrayValue ? [coerce(value[0]), coerce(value[1])] : [coerce(value), coerce(value)];\n  } else if (filterOps.SET_OPS.indexOf(operation) !== -1) {\n    coercedValue = hasArrayValue ? value.map(coerce) : [coerce(value)];\n  }\n\n  return coercedValue;\n} // Returns a parabola scaled so that the min/max is either +/- 1 and zero at the two values\n// provided. The data is mapped by this function when constructing intervals so that it's\n// very easy to construct contours as normal.\n\n\nfunction makeRangeSettings(operation) {\n  return function (value) {\n    value = coerceValue(operation, value); // Ensure proper ordering:\n\n    var min = Math.min(value[0], value[1]);\n    var max = Math.max(value[0], value[1]);\n    return {\n      start: min,\n      end: max,\n      size: max - min\n    };\n  };\n}\n\nfunction makeInequalitySettings(operation) {\n  return function (value) {\n    value = coerceValue(operation, value);\n    return {\n      start: value,\n      end: Infinity,\n      size: Infinity\n    };\n  };\n}","map":null,"metadata":{},"sourceType":"script"}