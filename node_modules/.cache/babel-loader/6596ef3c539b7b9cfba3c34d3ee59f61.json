{"ast":null,"code":"import { HOST } from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\nvar endpoint = {\n  user: '/user'\n};\n\nfunction getUsers(callback) {\n  var request = new Request(HOST.backend_api + endpoint.user + '/all', {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction getUserById(params, callback) {\n  var request = new Request(HOST.backend_api + endpoint.user + '/' + params.id, {\n    method: 'GET'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction postUser(user, callback) {\n  var request = new Request(HOST.backend_api + \"/auth/registration\", {\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction putUser(user, userId, callback) {\n  var request = new Request(HOST.backend_api + endpoint.user + \"/update/\" + userId, {\n    method: 'PUT',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(user)\n  });\n  console.log(\"URL: \" + request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteUser(userId, callback) {\n  var request = new Request(HOST.backend_api + endpoint.user + \"/delete/\" + userId, {\n    method: 'DELETE'\n  });\n  console.log(request.url);\n  RestApiClient.performRequest(request, callback);\n}\n\nexport { getUsers, getUserById, postUser, deleteUser, putUser };","map":{"version":3,"sources":["/Users/danaliulica/Documents/PROIECT/DS202230643_Dragusanu_Octavian_1_Frontend/src/user/api/user-api.js"],"names":["HOST","RestApiClient","endpoint","user","getUsers","callback","request","Request","backend_api","method","console","log","url","performRequest","getUserById","params","id","postUser","headers","body","JSON","stringify","putUser","userId","deleteUser"],"mappings":"AAAA,SAAQA,IAAR,QAAmB,qBAAnB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AAGA,IAAMC,QAAQ,GAAG;AACbC,EAAAA,IAAI,EAAE;AADO,CAAjB;;AAIA,SAASC,QAAT,CAAkBC,QAAlB,EAA4B;AACxB,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,IAA5B,GAAmC,MAA/C,EAAuD;AACjEM,IAAAA,MAAM,EAAE;AADyD,GAAvD,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASS,WAAT,CAAqBC,MAArB,EAA6BV,QAA7B,EAAsC;AAClC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,IAA5B,GAAmC,GAAnC,GAAyCY,MAAM,CAACC,EAA5D,EAAgE;AAC3EP,IAAAA,MAAM,EAAE;AADmE,GAAhE,CAAd;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASY,QAAT,CAAkBd,IAAlB,EAAwBE,QAAxB,EAAiC;AAC7B,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmB,oBAA/B,EAAsD;AAChEC,IAAAA,MAAM,EAAE,MADwD;AAEhES,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAFsD;AAMhEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,IAAf;AAN0D,GAAtD,CAAd;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASiB,OAAT,CAAiBnB,IAAjB,EAAuBoB,MAAvB,EAA+BlB,QAA/B,EAAwC;AACpC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,IAA5B,GAAmC,UAAnC,GAAiDoB,MAA7D,EAAsE;AAChFd,IAAAA,MAAM,EAAE,KADwE;AAEhFS,IAAAA,OAAO,EAAG;AACN,gBAAU,kBADJ;AAEN,sBAAgB;AAFV,KAFsE;AAMhFC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,IAAf;AAN0E,GAAtE,CAAd;AASAO,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAUL,OAAO,CAACM,GAA9B;AAEAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SAASmB,UAAT,CAAoBD,MAApB,EAA4BlB,QAA5B,EAAsC;AAClC,MAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAYP,IAAI,CAACQ,WAAL,GAAmBN,QAAQ,CAACC,IAA5B,GAAmC,UAAnC,GAAiDoB,MAA7D,EAAqE;AAC/Ed,IAAAA,MAAM,EAAE;AADuE,GAArE,CAAd;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAYL,OAAO,CAACM,GAApB;AACAX,EAAAA,aAAa,CAACY,cAAd,CAA6BP,OAA7B,EAAsCD,QAAtC;AACH;;AAED,SACID,QADJ,EAEIU,WAFJ,EAGIG,QAHJ,EAIIO,UAJJ,EAKIF,OALJ","sourcesContent":["import {HOST} from '../../commons/hosts';\nimport RestApiClient from \"../../commons/api/rest-client\";\n\n\nconst endpoint = {\n    user: '/user'\n};\n\nfunction getUsers(callback) {\n    let request = new Request(HOST.backend_api + endpoint.user + '/all', {\n        method: 'GET',\n    });\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction getUserById(params, callback){\n    let request = new Request(HOST.backend_api + endpoint.user + '/' + params.id, {\n       method: 'GET'\n    });\n\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction postUser(user, callback){\n    let request = new Request(HOST.backend_api + \"/auth/registration\" , {\n        method: 'POST',\n        headers : {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    });\n\n    console.log(\"URL: \" + request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction putUser(user, userId, callback){\n    let request = new Request(HOST.backend_api + endpoint.user + \"/update/\" +  userId , {\n        method: 'PUT',\n        headers : {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(user)\n    });\n\n    console.log(\"URL: \" + request.url);\n\n    RestApiClient.performRequest(request, callback);\n}\n\nfunction deleteUser(userId, callback) {\n    let request = new Request(HOST.backend_api + endpoint.user + \"/delete/\" +  userId, {\n        method: 'DELETE',\n    });\n    console.log(request.url);\n    RestApiClient.performRequest(request, callback);\n}\n\nexport {\n    getUsers,\n    getUserById,\n    postUser,\n    deleteUser,\n    putUser\n};\n"]},"metadata":{},"sourceType":"module"}