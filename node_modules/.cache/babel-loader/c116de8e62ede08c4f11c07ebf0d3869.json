{"ast":null,"code":"'use strict';\n\nvar Axes = require('../../plots/cartesian/axes');\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nmodule.exports = function calcLabels(trace, axis) {\n  var i, tobj, prefix, suffix, gridline;\n  var labels = axis._labels = [];\n  var gridlines = axis._gridlines;\n\n  for (i = 0; i < gridlines.length; i++) {\n    gridline = gridlines[i];\n\n    if (['start', 'both'].indexOf(axis.showticklabels) !== -1) {\n      tobj = Axes.tickText(axis, gridline.value);\n      extendFlat(tobj, {\n        prefix: prefix,\n        suffix: suffix,\n        endAnchor: true,\n        xy: gridline.xy(0),\n        dxy: gridline.dxy(0, 0),\n        axis: gridline.axis,\n        length: gridline.crossAxis.length,\n        font: gridline.axis.tickfont,\n        isFirst: i === 0,\n        isLast: i === gridlines.length - 1\n      });\n      labels.push(tobj);\n    }\n\n    if (['end', 'both'].indexOf(axis.showticklabels) !== -1) {\n      tobj = Axes.tickText(axis, gridline.value);\n      extendFlat(tobj, {\n        endAnchor: false,\n        xy: gridline.xy(gridline.crossLength - 1),\n        dxy: gridline.dxy(gridline.crossLength - 2, 1),\n        axis: gridline.axis,\n        length: gridline.crossAxis.length,\n        font: gridline.axis.tickfont,\n        isFirst: i === 0,\n        isLast: i === gridlines.length - 1\n      });\n      labels.push(tobj);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"script"}