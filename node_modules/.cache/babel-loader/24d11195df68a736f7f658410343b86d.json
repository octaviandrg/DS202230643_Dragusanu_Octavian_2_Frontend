{"ast":null,"code":"'use strict';\n\nvar baseAttrs = require('../../plots/attributes');\n\nvar hovertemplateAttrs = require('../../plots/template_attributes').hovertemplateAttrs;\n\nvar extendFlat = require('../../lib/extend').extendFlat;\n\nvar colormodel = require('./constants').colormodel;\n\nvar cm = ['rgb', 'rgba', 'rgba256', 'hsl', 'hsla'];\nvar zminDesc = [];\nvar zmaxDesc = [];\n\nfor (var i = 0; i < cm.length; i++) {\n  var cr = colormodel[cm[i]];\n  zminDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zminDflt || cr.min).join(', ') + '].');\n  zmaxDesc.push('For the `' + cm[i] + '` colormodel, it is [' + (cr.zmaxDflt || cr.max).join(', ') + '].');\n}\n\nmodule.exports = extendFlat({\n  source: {\n    valType: 'string',\n    editType: 'calc',\n    description: ['Specifies the data URI of the image to be visualized.', 'The URI consists of \"data:image/[<media subtype>][;base64],<data>\"'].join(' ')\n  },\n  z: {\n    valType: 'data_array',\n    editType: 'calc',\n    description: ['A 2-dimensional array in which each element is an array of 3 or 4 numbers representing a color.'].join(' ')\n  },\n  colormodel: {\n    valType: 'enumerated',\n    values: cm,\n    editType: 'calc',\n    description: ['Color model used to map the numerical color components described in `z` into colors.', 'If `source` is specified, this attribute will be set to `rgba256`', 'otherwise it defaults to `rgb`.'].join(' ')\n  },\n  zsmooth: {\n    valType: 'enumerated',\n    values: ['fast', false],\n    dflt: false,\n    editType: 'plot',\n    description: ['Picks a smoothing algorithm used to smooth `z` data.', 'This only applies for image traces that use the `source` attribute.'].join(' ')\n  },\n  zmin: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }],\n    editType: 'calc',\n    description: ['Array defining the lower bound for each color component.', 'Note that the default value will depend on the colormodel.', zminDesc.join(' ')].join(' ')\n  },\n  zmax: {\n    valType: 'info_array',\n    items: [{\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }, {\n      valType: 'number',\n      editType: 'calc'\n    }],\n    editType: 'calc',\n    description: ['Array defining the higher bound for each color component.', 'Note that the default value will depend on the colormodel.', zmaxDesc.join(' ')].join(' ')\n  },\n  x0: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'calc+clearAxisTypes',\n    description: 'Set the image\\'s x position.'\n  },\n  y0: {\n    valType: 'any',\n    dflt: 0,\n    editType: 'calc+clearAxisTypes',\n    description: 'Set the image\\'s y position.'\n  },\n  dx: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: 'Set the pixel\\'s horizontal size.'\n  },\n  dy: {\n    valType: 'number',\n    dflt: 1,\n    editType: 'calc',\n    description: 'Set the pixel\\'s vertical size'\n  },\n  text: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Sets the text elements associated with each z value.'\n  },\n  hovertext: {\n    valType: 'data_array',\n    editType: 'plot',\n    description: 'Same as `text`.'\n  },\n  hoverinfo: extendFlat({}, baseAttrs.hoverinfo, {\n    flags: ['x', 'y', 'z', 'color', 'name', 'text'],\n    dflt: 'x+y+z+text+name'\n  }),\n  hovertemplate: hovertemplateAttrs({}, {\n    keys: ['z', 'color', 'colormodel']\n  }),\n  transforms: undefined\n});","map":null,"metadata":{},"sourceType":"script"}