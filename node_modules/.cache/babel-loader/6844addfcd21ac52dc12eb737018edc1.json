{"ast":null,"code":"'use strict';\n\nvar Lib = require('../lib');\n\nvar helpers = require('./helpers');\n/*\n* substantial portions of this code from FileSaver.js\n* https://github.com/eligrey/FileSaver.js\n* License: https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n* 1.1.20160328\n*\n* By Eli Grey, http://eligrey.com\n* License: MIT\n*   See https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md\n*/\n\n\nfunction fileSaver(url, name, format) {\n  var saveLink = document.createElement('a');\n  var canUseSaveLink = 'download' in saveLink;\n  var promise = new Promise(function (resolve, reject) {\n    var blob;\n    var objectUrl; // IE 10+ (native saveAs)\n\n    if (Lib.isIE()) {\n      // At this point we are only dealing with a decoded SVG as\n      // a data URL (since IE only supports SVG)\n      blob = helpers.createBlob(url, 'svg');\n      window.navigator.msSaveBlob(blob, name);\n      blob = null;\n      return resolve(name);\n    }\n\n    if (canUseSaveLink) {\n      blob = helpers.createBlob(url, format);\n      objectUrl = helpers.createObjectURL(blob);\n      saveLink.href = objectUrl;\n      saveLink.download = name;\n      document.body.appendChild(saveLink);\n      saveLink.click();\n      document.body.removeChild(saveLink);\n      helpers.revokeObjectURL(objectUrl);\n      blob = null;\n      return resolve(name);\n    } // Older versions of Safari did not allow downloading of blob urls\n\n\n    if (Lib.isSafari()) {\n      var prefix = format === 'svg' ? ',' : ';base64,';\n      helpers.octetStream(prefix + encodeURIComponent(url));\n      return resolve(name);\n    }\n\n    reject(new Error('download error'));\n  });\n  return promise;\n}\n\nmodule.exports = fileSaver;","map":null,"metadata":{},"sourceType":"script"}