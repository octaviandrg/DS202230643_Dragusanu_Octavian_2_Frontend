{"ast":null,"code":"'use strict';\n\nvar getBounds = require('array-bounds');\n\nmodule.exports = normalize;\n\nfunction normalize(arr, dim, bounds) {\n  if (!arr || arr.length == null) throw Error('Argument should be an array');\n  if (dim == null) dim = 1;\n  if (bounds == null) bounds = getBounds(arr, dim);\n\n  for (var offset = 0; offset < dim; offset++) {\n    var max = bounds[dim + offset],\n        min = bounds[offset],\n        i = offset,\n        l = arr.length;\n\n    if (max === Infinity && min === -Infinity) {\n      for (i = offset; i < l; i += dim) {\n        arr[i] = arr[i] === max ? 1 : arr[i] === min ? 0 : .5;\n      }\n    } else if (max === Infinity) {\n      for (i = offset; i < l; i += dim) {\n        arr[i] = arr[i] === max ? 1 : 0;\n      }\n    } else if (min === -Infinity) {\n      for (i = offset; i < l; i += dim) {\n        arr[i] = arr[i] === min ? 0 : 1;\n      }\n    } else {\n      var range = max - min;\n\n      for (i = offset; i < l; i += dim) {\n        if (!isNaN(arr[i])) {\n          arr[i] = range === 0 ? .5 : (arr[i] - min) / range;\n        }\n      }\n    }\n  }\n\n  return arr;\n}","map":null,"metadata":{},"sourceType":"script"}