{"ast":null,"code":"'use strict';\n\nvar Registry = require('../../registry');\n\nvar Lib = require('../../lib');\n\nvar Template = require('../../plot_api/plot_template');\n\nvar plotsAttrs = require('../../plots/attributes');\n\nvar attributes = require('./attributes');\n\nvar basePlotLayoutAttributes = require('../../plots/layout_attributes');\n\nvar helpers = require('./helpers');\n\nmodule.exports = function legendDefaults(layoutIn, layoutOut, fullData) {\n  var containerIn = layoutIn.legend || {};\n  var containerOut = Template.newContainer(layoutOut, 'legend');\n\n  function coerce(attr, dflt) {\n    return Lib.coerce(containerIn, containerOut, attributes, attr, dflt);\n  }\n\n  var trace;\n\n  var traceCoerce = function traceCoerce(attr, dflt) {\n    var traceIn = trace._input;\n    var traceOut = trace;\n    return Lib.coerce(traceIn, traceOut, plotsAttrs, attr, dflt);\n  };\n\n  var globalFont = layoutOut.font || {};\n  var grouptitlefont = Lib.coerceFont(coerce, 'grouptitlefont', Lib.extendFlat({}, globalFont, {\n    size: Math.round(globalFont.size * 1.1)\n  }));\n  var legendTraceCount = 0;\n  var legendReallyHasATrace = false;\n  var defaultOrder = 'normal';\n\n  for (var i = 0; i < fullData.length; i++) {\n    trace = fullData[i];\n    if (!trace.visible) continue; // Note that we explicitly count any trace that is either shown or\n    // *would* be shown by default, toward the two traces you need to\n    // ensure the legend is shown by default, because this can still help\n    // disambiguate.\n\n    if (trace.showlegend || trace._dfltShowLegend && !(trace._module && trace._module.attributes && trace._module.attributes.showlegend && trace._module.attributes.showlegend.dflt === false)) {\n      legendTraceCount++;\n\n      if (trace.showlegend) {\n        legendReallyHasATrace = true; // Always show the legend by default if there's a pie,\n        // or if there's only one trace but it's explicitly shown\n\n        if (Registry.traceIs(trace, 'pie-like') || trace._input.showlegend === true) {\n          legendTraceCount++;\n        }\n      }\n\n      Lib.coerceFont(traceCoerce, 'legendgrouptitle.font', grouptitlefont);\n    }\n\n    if (Registry.traceIs(trace, 'bar') && layoutOut.barmode === 'stack' || ['tonextx', 'tonexty'].indexOf(trace.fill) !== -1) {\n      defaultOrder = helpers.isGrouped({\n        traceorder: defaultOrder\n      }) ? 'grouped+reversed' : 'reversed';\n    }\n\n    if (trace.legendgroup !== undefined && trace.legendgroup !== '') {\n      defaultOrder = helpers.isReversed({\n        traceorder: defaultOrder\n      }) ? 'reversed+grouped' : 'grouped';\n    }\n  }\n\n  var showLegend = Lib.coerce(layoutIn, layoutOut, basePlotLayoutAttributes, 'showlegend', legendReallyHasATrace && legendTraceCount > 1); // delete legend\n\n  if (showLegend === false) layoutOut.legend = undefined;\n  if (showLegend === false && !containerIn.uirevision) return;\n  coerce('uirevision', layoutOut.uirevision);\n  if (showLegend === false) return;\n  coerce('bgcolor', layoutOut.paper_bgcolor);\n  coerce('bordercolor');\n  coerce('borderwidth');\n  var itemFont = Lib.coerceFont(coerce, 'font', layoutOut.font);\n  var orientation = coerce('orientation');\n  var isHorizontal = orientation === 'h';\n  var defaultX, defaultY, defaultYAnchor;\n\n  if (isHorizontal) {\n    defaultX = 0;\n\n    if (Registry.getComponentMethod('rangeslider', 'isVisible')(layoutIn.xaxis)) {\n      defaultY = 1.1;\n      defaultYAnchor = 'bottom';\n    } else {\n      // maybe use y=1.1 / yanchor=bottom as above\n      //   to avoid https://github.com/plotly/plotly.js/issues/1199\n      //   in v3\n      defaultY = -0.1;\n      defaultYAnchor = 'top';\n    }\n  } else {\n    defaultX = 1.02;\n    defaultY = 1;\n    defaultYAnchor = 'auto';\n  }\n\n  coerce('traceorder', defaultOrder);\n  if (helpers.isGrouped(layoutOut.legend)) coerce('tracegroupgap');\n  coerce('entrywidth');\n  coerce('entrywidthmode');\n  coerce('itemsizing');\n  coerce('itemwidth');\n  coerce('itemclick');\n  coerce('itemdoubleclick');\n  coerce('groupclick');\n  coerce('x', defaultX);\n  coerce('xanchor');\n  coerce('y', defaultY);\n  coerce('yanchor', defaultYAnchor);\n  coerce('valign');\n  Lib.noneOrAll(containerIn, containerOut, ['x', 'y']);\n  var titleText = coerce('title.text');\n\n  if (titleText) {\n    coerce('title.side', isHorizontal ? 'left' : 'top');\n    var dfltTitleFont = Lib.extendFlat({}, itemFont, {\n      size: Lib.bigFont(itemFont.size)\n    });\n    Lib.coerceFont(coerce, 'title.font', dfltTitleFont);\n  }\n};","map":null,"metadata":{},"sourceType":"script"}