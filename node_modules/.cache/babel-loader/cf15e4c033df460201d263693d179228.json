{"ast":null,"code":"'use strict';\n\nvar opacity = require('../../components/color').opacity;\n\nvar hoverOnBars = require('../bar/hover').hoverOnBars;\n\nvar formatPercent = require('../../lib').formatPercent;\n\nmodule.exports = function hoverPoints(pointData, xval, yval, hovermode, opts) {\n  var point = hoverOnBars(pointData, xval, yval, hovermode, opts);\n  if (!point) return;\n  var cd = point.cd;\n  var trace = cd[0].trace;\n  var isHorizontal = trace.orientation === 'h'; // the closest data point\n\n  var index = point.index;\n  var di = cd[index];\n  var sizeLetter = isHorizontal ? 'x' : 'y';\n  point[sizeLetter + 'LabelVal'] = di.s;\n  point.percentInitial = di.begR;\n  point.percentInitialLabel = formatPercent(di.begR, 1);\n  point.percentPrevious = di.difR;\n  point.percentPreviousLabel = formatPercent(di.difR, 1);\n  point.percentTotal = di.sumR;\n  point.percentTotalLabel = formatPercent(di.sumR, 1);\n  var hoverinfo = di.hi || trace.hoverinfo;\n  var text = [];\n\n  if (hoverinfo && hoverinfo !== 'none' && hoverinfo !== 'skip') {\n    var isAll = hoverinfo === 'all';\n    var parts = hoverinfo.split('+');\n\n    var hasFlag = function hasFlag(flag) {\n      return isAll || parts.indexOf(flag) !== -1;\n    };\n\n    if (hasFlag('percent initial')) {\n      text.push(point.percentInitialLabel + ' of initial');\n    }\n\n    if (hasFlag('percent previous')) {\n      text.push(point.percentPreviousLabel + ' of previous');\n    }\n\n    if (hasFlag('percent total')) {\n      text.push(point.percentTotalLabel + ' of total');\n    }\n  }\n\n  point.extraText = text.join('<br>');\n  point.color = getTraceColor(trace, di);\n  return [point];\n};\n\nfunction getTraceColor(trace, di) {\n  var cont = trace.marker;\n  var mc = di.mc || cont.color;\n  var mlc = di.mlc || cont.line.color;\n  var mlw = di.mlw || cont.line.width;\n  if (opacity(mc)) return mc;else if (opacity(mlc) && mlw) return mlc;\n}","map":null,"metadata":{},"sourceType":"script"}