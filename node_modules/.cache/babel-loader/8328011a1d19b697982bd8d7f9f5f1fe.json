{"ast":null,"code":"'use strict';\n\nvar parseUnit = require('parse-unit');\n\nmodule.exports = toPX;\nvar PIXELS_PER_INCH = 96;\n\nfunction getPropertyInPX(element, prop) {\n  var parts = parseUnit(getComputedStyle(element).getPropertyValue(prop));\n  return parts[0] * toPX(parts[1], element);\n} //This brutal hack is needed\n\n\nfunction getSizeBrutal(unit, element) {\n  var testDIV = document.createElement('div');\n  testDIV.style['font-size'] = '128' + unit;\n  element.appendChild(testDIV);\n  var size = getPropertyInPX(testDIV, 'font-size') / 128;\n  element.removeChild(testDIV);\n  return size;\n}\n\nfunction toPX(str, element) {\n  element = element || document.body;\n  str = (str || 'px').trim().toLowerCase();\n\n  if (element === window || element === document) {\n    element = document.body;\n  }\n\n  switch (str) {\n    case '%':\n      //Ambiguous, not sure if we should use width or height\n      return element.clientHeight / 100.0;\n\n    case 'ch':\n    case 'ex':\n      return getSizeBrutal(str, element);\n\n    case 'em':\n      return getPropertyInPX(element, 'font-size');\n\n    case 'rem':\n      return getPropertyInPX(document.body, 'font-size');\n\n    case 'vw':\n      return window.innerWidth / 100;\n\n    case 'vh':\n      return window.innerHeight / 100;\n\n    case 'vmin':\n      return Math.min(window.innerWidth, window.innerHeight) / 100;\n\n    case 'vmax':\n      return Math.max(window.innerWidth, window.innerHeight) / 100;\n\n    case 'in':\n      return PIXELS_PER_INCH;\n\n    case 'cm':\n      return PIXELS_PER_INCH / 2.54;\n\n    case 'mm':\n      return PIXELS_PER_INCH / 25.4;\n\n    case 'pt':\n      return PIXELS_PER_INCH / 72;\n\n    case 'pc':\n      return PIXELS_PER_INCH / 6;\n  }\n\n  return 1;\n}","map":null,"metadata":{},"sourceType":"script"}