{"ast":null,"code":"'use strict';\n\nmodule.exports = kerning;\nvar canvas = kerning.canvas = document.createElement('canvas');\nvar ctx = canvas.getContext('2d');\nvar asciiPairs = createPairs([32, 126]);\nkerning.createPairs = createPairs;\nkerning.ascii = asciiPairs;\n\nfunction kerning(family, o) {\n  if (Array.isArray(family)) family = family.join(', ');\n  var table = {},\n      pairs,\n      fs = 16,\n      threshold = .05;\n\n  if (o) {\n    if (o.length === 2 && typeof o[0] === 'number') {\n      pairs = createPairs(o);\n    } else if (Array.isArray(o)) {\n      pairs = o;\n    } else {\n      if (o.o) pairs = createPairs(o.o);else if (o.pairs) pairs = o.pairs;\n      if (o.fontSize) fs = o.fontSize;\n      if (o.threshold != null) threshold = o.threshold;\n    }\n  }\n\n  if (!pairs) pairs = asciiPairs;\n  ctx.font = fs + 'px ' + family;\n\n  for (var i = 0; i < pairs.length; i++) {\n    var pair = pairs[i];\n    var width = ctx.measureText(pair[0]).width + ctx.measureText(pair[1]).width;\n    var kerningWidth = ctx.measureText(pair).width;\n\n    if (Math.abs(width - kerningWidth) > fs * threshold) {\n      var emWidth = (kerningWidth - width) / fs;\n      table[pair] = emWidth * 1000;\n    }\n  }\n\n  return table;\n}\n\nfunction createPairs(range) {\n  var pairs = [];\n\n  for (var i = range[0]; i <= range[1]; i++) {\n    var leftChar = String.fromCharCode(i);\n\n    for (var j = range[0]; j < range[1]; j++) {\n      var rightChar = String.fromCharCode(j);\n      var pair = leftChar + rightChar;\n      pairs.push(pair);\n    }\n  }\n\n  return pairs;\n}","map":null,"metadata":{},"sourceType":"script"}