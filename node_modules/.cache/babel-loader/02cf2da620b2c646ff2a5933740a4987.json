{"ast":null,"code":"'use strict';\n\nvar d3 = require('@plotly/d3');\n\nvar Lib = require('../../lib');\n\nmodule.exports = function plot(gd, plotinfo, cdOHLC, ohlcLayer) {\n  var ya = plotinfo.yaxis;\n  var xa = plotinfo.xaxis;\n  var posHasRangeBreaks = !!xa.rangebreaks;\n  Lib.makeTraceGroups(ohlcLayer, cdOHLC, 'trace ohlc').each(function (cd) {\n    var plotGroup = d3.select(this);\n    var cd0 = cd[0];\n    var t = cd0.t;\n    var trace = cd0.trace;\n\n    if (trace.visible !== true || t.empty) {\n      plotGroup.remove();\n      return;\n    }\n\n    var tickLen = t.tickLen;\n    var paths = plotGroup.selectAll('path').data(Lib.identity);\n    paths.enter().append('path');\n    paths.exit().remove();\n    paths.attr('d', function (d) {\n      if (d.empty) return 'M0,0Z';\n      var xo = xa.c2p(d.pos - tickLen, true);\n      var xc = xa.c2p(d.pos + tickLen, true);\n      var x = posHasRangeBreaks ? (xo + xc) / 2 : xa.c2p(d.pos, true);\n      var yo = ya.c2p(d.o, true);\n      var yh = ya.c2p(d.h, true);\n      var yl = ya.c2p(d.l, true);\n      var yc = ya.c2p(d.c, true);\n      return 'M' + xo + ',' + yo + 'H' + x + 'M' + x + ',' + yh + 'V' + yl + 'M' + xc + ',' + yc + 'H' + x;\n    });\n  });\n};","map":null,"metadata":{},"sourceType":"script"}