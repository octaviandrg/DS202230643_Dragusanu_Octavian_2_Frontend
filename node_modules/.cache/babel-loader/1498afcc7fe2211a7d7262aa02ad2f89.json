{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nmodule.exports = function sceneUpdate(gd, trace) {\n  var fullLayout = gd._fullLayout;\n  var uid = trace.uid; // must place ref to 'scene' in fullLayout, so that:\n  // - it can be relinked properly on updates\n  // - it can be destroyed properly when needed\n\n  var splomScenes = fullLayout._splomScenes;\n  if (!splomScenes) splomScenes = fullLayout._splomScenes = {};\n  var reset = {\n    dirty: true,\n    selectBatch: [],\n    unselectBatch: []\n  };\n  var first = {\n    matrix: false,\n    selectBatch: [],\n    unselectBatch: []\n  };\n  var scene = splomScenes[trace.uid];\n\n  if (!scene) {\n    scene = splomScenes[uid] = Lib.extendFlat({}, reset, first);\n\n    scene.draw = function draw() {\n      if (scene.matrix && scene.matrix.draw) {\n        if (scene.selectBatch.length || scene.unselectBatch.length) {\n          scene.matrix.draw(scene.unselectBatch, scene.selectBatch);\n        } else {\n          scene.matrix.draw();\n        }\n      }\n\n      scene.dirty = false;\n    }; // remove scene resources\n\n\n    scene.destroy = function destroy() {\n      if (scene.matrix && scene.matrix.destroy) {\n        scene.matrix.destroy();\n      }\n\n      scene.matrixOptions = null;\n      scene.selectBatch = null;\n      scene.unselectBatch = null;\n      scene = null;\n    };\n  } // In case if we have scene from the last calc - reset data\n\n\n  if (!scene.dirty) {\n    Lib.extendFlat(scene, reset);\n  }\n\n  return scene;\n};","map":null,"metadata":{},"sourceType":"script"}