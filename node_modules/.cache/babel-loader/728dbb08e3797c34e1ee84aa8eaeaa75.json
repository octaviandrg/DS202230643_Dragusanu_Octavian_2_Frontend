{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar handleGroupingDefaults = require('../bar/defaults').handleGroupingDefaults;\n\nvar handleText = require('../bar/defaults').handleText;\n\nvar handleXYDefaults = require('../scatter/xy_defaults');\n\nvar handlePeriodDefaults = require('../scatter/period_defaults');\n\nvar attributes = require('./attributes');\n\nvar Color = require('../../components/color');\n\nvar delta = require('../../constants/delta.js');\n\nvar INCREASING_COLOR = delta.INCREASING.COLOR;\nvar DECREASING_COLOR = delta.DECREASING.COLOR;\nvar TOTALS_COLOR = '#4499FF';\n\nfunction handleDirection(coerce, direction, defaultColor) {\n  coerce(direction + '.marker.color', defaultColor);\n  coerce(direction + '.marker.line.color', Color.defaultLine);\n  coerce(direction + '.marker.line.width');\n}\n\nfunction supplyDefaults(traceIn, traceOut, defaultColor, layout) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(traceIn, traceOut, attributes, attr, dflt);\n  }\n\n  var len = handleXYDefaults(traceIn, traceOut, layout, coerce);\n\n  if (!len) {\n    traceOut.visible = false;\n    return;\n  }\n\n  handlePeriodDefaults(traceIn, traceOut, layout, coerce);\n  coerce('xhoverformat');\n  coerce('yhoverformat');\n  coerce('measure');\n  coerce('orientation', traceOut.x && !traceOut.y ? 'h' : 'v');\n  coerce('base');\n  coerce('offset');\n  coerce('width');\n  coerce('text');\n  coerce('hovertext');\n  coerce('hovertemplate');\n  var textposition = coerce('textposition');\n  handleText(traceIn, traceOut, layout, coerce, textposition, {\n    moduleHasSelected: false,\n    moduleHasUnselected: false,\n    moduleHasConstrain: true,\n    moduleHasCliponaxis: true,\n    moduleHasTextangle: true,\n    moduleHasInsideanchor: true\n  });\n\n  if (traceOut.textposition !== 'none') {\n    coerce('texttemplate');\n    if (!traceOut.texttemplate) coerce('textinfo');\n  }\n\n  handleDirection(coerce, 'increasing', INCREASING_COLOR);\n  handleDirection(coerce, 'decreasing', DECREASING_COLOR);\n  handleDirection(coerce, 'totals', TOTALS_COLOR);\n  var connectorVisible = coerce('connector.visible');\n\n  if (connectorVisible) {\n    coerce('connector.mode');\n    var connectorLineWidth = coerce('connector.line.width');\n\n    if (connectorLineWidth) {\n      coerce('connector.line.color');\n      coerce('connector.line.dash');\n    }\n  }\n}\n\nfunction crossTraceDefaults(fullData, fullLayout) {\n  var traceIn, traceOut;\n\n  function coerce(attr) {\n    return Lib.coerce(traceOut._input, traceOut, attributes, attr);\n  }\n\n  if (fullLayout.waterfallmode === 'group') {\n    for (var i = 0; i < fullData.length; i++) {\n      traceOut = fullData[i];\n      traceIn = traceOut._input;\n      handleGroupingDefaults(traceIn, traceOut, fullLayout, coerce);\n    }\n  }\n}\n\nmodule.exports = {\n  supplyDefaults: supplyDefaults,\n  crossTraceDefaults: crossTraceDefaults\n};","map":null,"metadata":{},"sourceType":"script"}