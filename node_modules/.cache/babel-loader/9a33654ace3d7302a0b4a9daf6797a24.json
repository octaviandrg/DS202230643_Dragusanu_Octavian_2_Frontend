{"ast":null,"code":"/** @module  color-id */\n'use strict';\n\nvar clamp = require('clamp');\n\nmodule.exports = toNumber;\nmodule.exports.to = toNumber;\nmodule.exports.from = fromNumber;\n\nfunction toNumber(rgba, normalized) {\n  if (normalized == null) normalized = true;\n  var r = rgba[0],\n      g = rgba[1],\n      b = rgba[2],\n      a = rgba[3];\n  if (a == null) a = normalized ? 1 : 255;\n\n  if (normalized) {\n    r *= 255;\n    g *= 255;\n    b *= 255;\n    a *= 255;\n  }\n\n  r = clamp(r, 0, 255) & 0xFF;\n  g = clamp(g, 0, 255) & 0xFF;\n  b = clamp(b, 0, 255) & 0xFF;\n  a = clamp(a, 0, 255) & 0xFF; //hi-order shift converts to -1, so we can't use <<24\n\n  var n = r * 0x01000000 + (g << 16) + (b << 8) + a;\n  return n;\n}\n\nfunction fromNumber(n, normalized) {\n  n = +n;\n  var r = n >>> 24;\n  var g = (n & 0x00ff0000) >>> 16;\n  var b = (n & 0x0000ff00) >>> 8;\n  var a = n & 0x000000ff;\n  if (normalized === false) return [r, g, b, a];\n  return [r / 255, g / 255, b / 255, a / 255];\n}","map":null,"metadata":{},"sourceType":"script"}