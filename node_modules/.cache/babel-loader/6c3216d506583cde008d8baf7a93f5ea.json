{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n/**\n * Convert plotly.js 'textposition' to mapbox-gl 'anchor' and 'offset'\n * (with the help of the icon size).\n *\n * @param {string} textpostion : plotly.js textposition value\n * @param {number} iconSize : plotly.js icon size (e.g. marker.size for traces)\n *\n * @return {object}\n *      - anchor\n *      - offset\n */\n\n\nmodule.exports = function convertTextOpts(textposition, iconSize) {\n  var parts = textposition.split(' ');\n  var vPos = parts[0];\n  var hPos = parts[1]; // ballpack values\n\n  var factor = Lib.isArrayOrTypedArray(iconSize) ? Lib.mean(iconSize) : iconSize;\n  var xInc = 0.5 + factor / 100;\n  var yInc = 1.5 + factor / 100;\n  var anchorVals = ['', ''];\n  var offset = [0, 0];\n\n  switch (vPos) {\n    case 'top':\n      anchorVals[0] = 'top';\n      offset[1] = -yInc;\n      break;\n\n    case 'bottom':\n      anchorVals[0] = 'bottom';\n      offset[1] = yInc;\n      break;\n  }\n\n  switch (hPos) {\n    case 'left':\n      anchorVals[1] = 'right';\n      offset[0] = -xInc;\n      break;\n\n    case 'right':\n      anchorVals[1] = 'left';\n      offset[0] = xInc;\n      break;\n  } // Mapbox text-anchor must be one of:\n  //  center, left, right, top, bottom,\n  //  top-left, top-right, bottom-left, bottom-right\n\n\n  var anchor;\n  if (anchorVals[0] && anchorVals[1]) anchor = anchorVals.join('-');else if (anchorVals[0]) anchor = anchorVals[0];else if (anchorVals[1]) anchor = anchorVals[1];else anchor = 'center';\n  return {\n    anchor: anchor,\n    offset: offset\n  };\n};","map":null,"metadata":{},"sourceType":"script"}