{"ast":null,"code":"'use strict';\n\nvar Lib = require('../../lib');\n\nvar contrast = require('../../components/color').contrast;\n\nvar layoutAttributes = require('./layout_attributes');\n\nvar getShowAttrDflt = require('./show_dflt');\n\nvar handleArrayContainerDefaults = require('../array_container_defaults');\n\nmodule.exports = function handleTickLabelDefaults(containerIn, containerOut, coerce, axType, options) {\n  if (!options) options = {};\n  var showAttrDflt = getShowAttrDflt(containerIn);\n  var showTickLabels = coerce('showticklabels');\n\n  if (showTickLabels) {\n    var font = options.font || {};\n    var contColor = containerOut.color;\n    var position = containerOut.ticklabelposition || '';\n    var dfltFontColor = position.indexOf('inside') !== -1 ? contrast(options.bgColor) : // as with titlefont.color, inherit axis.color only if one was\n    // explicitly provided\n    contColor && contColor !== layoutAttributes.color.dflt ? contColor : font.color;\n    Lib.coerceFont(coerce, 'tickfont', {\n      family: font.family,\n      size: font.size,\n      color: dfltFontColor\n    });\n\n    if (!options.noTicklabelstep && axType !== 'multicategory' && axType !== 'log') {\n      coerce('ticklabelstep');\n    }\n\n    if (!options.noAng) coerce('tickangle');\n\n    if (axType !== 'category') {\n      var tickFormat = coerce('tickformat');\n      handleArrayContainerDefaults(containerIn, containerOut, {\n        name: 'tickformatstops',\n        inclusionAttr: 'enabled',\n        handleItemDefaults: tickformatstopDefaults\n      });\n\n      if (!containerOut.tickformatstops.length) {\n        delete containerOut.tickformatstops;\n      }\n\n      if (!options.noExp && !tickFormat && axType !== 'date') {\n        coerce('showexponent', showAttrDflt);\n        coerce('exponentformat');\n        coerce('minexponent');\n        coerce('separatethousands');\n      }\n    }\n  }\n};\n\nfunction tickformatstopDefaults(valueIn, valueOut) {\n  function coerce(attr, dflt) {\n    return Lib.coerce(valueIn, valueOut, layoutAttributes.tickformatstops, attr, dflt);\n  }\n\n  var enabled = coerce('enabled');\n\n  if (enabled) {\n    coerce('dtickrange');\n    coerce('value');\n  }\n}","map":null,"metadata":{},"sourceType":"script"}