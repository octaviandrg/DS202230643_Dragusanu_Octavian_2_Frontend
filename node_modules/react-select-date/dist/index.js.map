{"version":3,"file":"index.js","sources":["../src/cldDisable.tsx","../src/Fields/cldDateField.tsx","../src/Calendar/disableArrow.tsx","../src/Fields/cldSelectField.tsx","../src/Calendar/dateRange.tsx","../src/Legends/legends.tsx","../src/Calendar/index.tsx","../src/index.tsx"],"sourcesContent":["const months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\r\nconst days: any = {sun: 0, mon: 1, tue: 2, wed: 3, thu: 4, fri: 5, sat: 6};\r\nconst daysArr = [\"sun\", \"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\"];\r\n\r\n/**\r\n * @param {Number} num number\r\n * @returns number if length 1 returns with zero\r\n */\r\n export function addZero(num: string | number) {\r\n  return num > 9 ? num : \"0\" + num\r\n}\r\n\r\n/**\r\n * @param {string} date date object \r\n * @returns date object with current time\r\n */\r\n export function setCurrentTime(date: string | number | Date){\r\n  const changeTime = new Date(date)\r\n  const now = new Date()\r\n  changeTime.setHours(now.getHours())\r\n  changeTime.setMinutes(now.getMinutes())\r\n  changeTime.setSeconds(now.getSeconds())\r\n  changeTime.setMilliseconds(now.getMilliseconds())\r\n  return changeTime;\r\n}\r\n\r\n/**\r\n * @param {string} date contain date\r\n * @param {boolean} format contain boolean value\r\n * @returns {string} returns a formated date\r\n */\r\n export function formatDay(date: Date, format = false) {\r\n  if (date) {\r\n    const addZeroToMonth = date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1;\r\n    const addZeroToDate = date.getDate() < 10 ? `0${date.getDate()}` : date.getDate();\r\n    if (format) {\r\n      return `${months[Number(addZeroToMonth) - 1]} ${addZeroToDate},${date.getFullYear()}`;\r\n    }\r\n    const dateIdFromCld = `${date.getFullYear()}-${addZeroToMonth}-${addZeroToDate}`;\r\n\r\n    return dateIdFromCld;\r\n  }\r\n  return \"\";\r\n}\r\n\r\n/**\r\n * @param {Date} minDate contain a date\r\n * @param {Date} renderDate contain a date\r\n * @returns {boolean} for disable date\r\n */\r\n export function setMinDate(minDate:Date, renderDate: Date) {\r\n  let minimumDate = renderDate < new Date(minDate) && \"cld_disableDate\";\r\n  return minimumDate;\r\n}\r\n\r\n/**\r\n * @param {Date} maxDate contain a date\r\n * @param {Date} renderDate contain a date\r\n * @returns {boolean} for disable date\r\n */\r\n export function setMaxDate(maxDate:Date, renderDate: Date) {\r\n  let maximamDate = renderDate > new Date(maxDate) && \"cld_disableDate\";\r\n  return maximamDate;\r\n}\r\n\r\n/**\r\n * @param {Array} contain disable days\r\n * @return {boolean} disable the day\r\n */\r\n\r\n export function getDisableDays(day: any, renderDate: string) {\r\n  let dayDisable = day.some((dy: string)=>{\r\n    return days[dy] === new Date(renderDate).getDay();\r\n  })\r\n  return dayDisable && \"cld_disableDate\";\r\n }\r\n\r\n/**\r\n * @param {string} renderDate contain a date\r\n * @param {string} disableState contain a disable-state past || future\r\n * @returns {string} disable date\r\n */\r\nexport function getDisableDate(renderDate: string | number | Date, disableState: string) {\r\n  let disableRange;\r\n  if (disableState === \"past\") {\r\n    const subractOneDay = new Date(renderDate);\r\n    subractOneDay.setDate(subractOneDay.getDate() + 1);\r\n    disableRange = subractOneDay < new Date() && \"cld_disableDate\";\r\n  } else if (disableState === \"future\") {\r\n    disableRange = setCurrentTime(renderDate) > new Date() && \"cld_disableDate\";\r\n  }\r\n  return disableRange;\r\n}\r\n\r\n/**\r\n * @param {string} disableState contain a disable-state past || future\r\n * @param {string} minDate contain a min date\r\n * @returns {string} disable year\r\n */\r\nexport function getDisableYear(disableState: string, minDate: string, maxDate: string) {\r\n  if(disableState === \"past\"){\r\n    if(minDate && maxDate){\r\n      return {\r\n        startYearOption: new Date(minDate) < new Date() ? new Date().getFullYear() :  new Date(minDate).getFullYear(),\r\n        endYearOption: new Date(maxDate).getFullYear()\r\n      }\r\n    }\r\n\r\n    if(minDate && new Date(minDate) > new Date()){\r\n      return {\r\n        startYearOption: new Date(minDate).getFullYear(),\r\n        endYearOption: 2100\r\n      }\r\n    }\r\n    if(maxDate && new Date(maxDate) > new Date()){\r\n      return{\r\n        startYearOption: new Date().getFullYear(),\r\n        endYearOption: new Date(maxDate).getFullYear()\r\n      }\r\n    }\r\n    return{\r\n      startYearOption: new Date().getFullYear(),\r\n      endYearOption: 2100\r\n    }\r\n  }else if(disableState === \"future\"){\r\n    if(minDate && maxDate){\r\n      return {\r\n        startYearOption: new Date(minDate).getFullYear(),\r\n        endYearOption: new Date(maxDate) > new Date() ? new Date().getFullYear() :  new Date(maxDate).getFullYear()\r\n      }\r\n    }\r\n\r\n    if(minDate && new Date(minDate) < new Date()){\r\n      return {\r\n        startYearOption: new Date(minDate).getFullYear(),\r\n        endYearOption: new Date().getFullYear()\r\n      }\r\n    }\r\n    if(maxDate && new Date(maxDate) < new Date()){\r\n      return{\r\n        startYearOption: 1921,\r\n        endYearOption: new Date(maxDate).getFullYear()\r\n      }\r\n    }\r\n\r\n    return{\r\n      startYearOption: 1921,\r\n      endYearOption: new Date().getFullYear()\r\n    }\r\n  }\r\n\r\n  if(minDate && maxDate){\r\n    return {\r\n      startYearOption: new Date(minDate).getFullYear(),\r\n      endYearOption: new Date(maxDate).getFullYear()\r\n    }\r\n  }\r\n  \r\n  if(minDate && !disableState){\r\n    return {\r\n      startYearOption: new Date(minDate).getFullYear(),\r\n      endYearOption: 2100\r\n    }\r\n  }\r\n  \r\n  if(maxDate && !disableState){\r\n    return {\r\n      startYearOption: 1921,\r\n      endYearOption: new Date(maxDate).getFullYear()\r\n    }\r\n  }\r\n  return;\r\n}\r\n\r\n/**\r\n * @param {string} disableState contain a disable-state past || future\r\n * @returns {object} set the start date and end date in field\r\n */\r\nexport function getDisableDateForField(disableState: string) {\r\n  let disablefield;\r\n  if (disableState === \"past\") {\r\n    disablefield = {\r\n      minDate: formatDay(new Date()),\r\n      maxDate: \"2100-12-31\",\r\n    };\r\n  } else if (disableState === \"future\") {\r\n    disablefield = {\r\n      minDate: \"1921-01-01\",\r\n      maxDate: formatDay(new Date()),\r\n    };\r\n  }\r\n  return disablefield;\r\n}\r\n\r\n/**\r\n * @param {string} renderDate contain a date\r\n * @param {string} disableCertainDate contain a disable-state past || future\r\n * @returns {string} disable date\r\n */\r\nexport function getDisableCertainDate(renderDate: Date, disableCertainDate: any[]) {\r\n  let disableCerDate;\r\n  disableCertainDate.forEach((dt: string | number | Date) => {\r\n    const formatDt = new Date(dt);\r\n    if (\r\n      formatDt.getDate() === renderDate.getDate() &&\r\n      formatDt.getMonth() === renderDate.getMonth() &&\r\n      formatDt.getFullYear() === renderDate.getFullYear()\r\n    ) {\r\n      disableCerDate = \"cld_disableDate\";\r\n    }\r\n  });\r\n  return disableCerDate;\r\n}\r\n\r\n/**\r\n * @param {string} disableCertainDate contain a disable-state past || future\r\n * @param {string} dateTypeId contain a render date\r\n * @param {string} rangeStartDate contain a date\r\n * @param {string} rangeEndDate contain a date\r\n * @returns {string} disable date\r\n */\r\nexport function getDisableWhenRange(disableCertainDate: any[],disableDays: any[], dateTypeId: string | number | Date, rangeStartDate: string | number, rangeEndDate: string | number,getDayArr: any, startAndendDate: any) {\r\n  const disableCertainDateFormat: string[] = [];\r\n  disableCertainDate.forEach((dt: string | number | Date) => {\r\n    disableCertainDateFormat.push(formatDay(new Date(dt)));\r\n  });\r\n\r\n  if(disableCertainDateFormat.length && disableCertainDateFormat.includes(formatDay(new Date(startAndendDate.startDate))) && formatDay(new Date(startAndendDate.startDate)) === formatDay(new Date(dateTypeId))){\r\n    return \"startDateDisablebg\"\r\n  }\r\n\r\n  if(disableCertainDateFormat.length && disableCertainDateFormat.includes(formatDay(new Date(startAndendDate.endDate))) && formatDay(new Date(startAndendDate.endDate)) === formatDay(new Date(dateTypeId))){\r\n    return \"endDateDisablebg\"\r\n  }\r\n\r\n  if (\r\n    dateTypeId > rangeStartDate &&\r\n    dateTypeId < rangeEndDate &&\r\n    disableCertainDateFormat.includes(formatDay(new Date(dateTypeId)))\r\n  ) {\r\n    return \"cld_disablebgColor\";\r\n  }\r\n\r\n  const disableCertainDayFormat: string[] = [];\r\n  getDayArr?.forEach((dy: Date)=>{\r\n    if(disableDays.includes(daysArr[(dy.getDay())])){\r\n      disableCertainDayFormat.push(formatDay(new Date(dy)));\r\n    } \r\n  })\r\n\r\n  if(disableCertainDayFormat.length && disableCertainDayFormat.includes(formatDay(new Date(startAndendDate.startDate))) && formatDay(new Date(startAndendDate.startDate)) === formatDay(new Date(dateTypeId))){\r\n    return \"startDateDisablebg\"\r\n  }\r\n\r\n  if(disableCertainDayFormat.length && disableCertainDayFormat.includes(formatDay(new Date(startAndendDate.endDate))) && formatDay(new Date(startAndendDate.endDate)) === formatDay(new Date(dateTypeId))){\r\n    return \"endDateDisablebg\"\r\n  }\r\n\r\n  if (\r\n    dateTypeId > rangeStartDate &&\r\n    dateTypeId < rangeEndDate &&\r\n    disableCertainDayFormat.includes(formatDay(new Date(dateTypeId)))\r\n  ) {\r\n    return \"cld_disablebgColor\";\r\n  }\r\n  return;\r\n}\r\n","import * as React from \"react\";\r\nimport { useEffect, useState, useMemo } from 'react';\r\nimport { getDisableDateForField, formatDay } from \"../cldDisable\";\r\nimport \"./cldDateField.scss\";\r\n\r\nconst days: any = {sun: 0, mon: 1, tue: 2, wed: 3, thu: 4, fri: 5, sat: 6};\r\ntype parameterFieldProps = {\r\n  disableState: string,\r\n  selectType: string,\r\n  selectedDateFromCld: any,\r\n  selectedDate: (data: object) => void,\r\n  disableCertainDate: any,\r\n  showDatelabel: boolean,\r\n  templateClr: string,\r\n  propsMinDate: string,\r\n  propsMaxDate: string,\r\n  disableDay: any,\r\n  daysInMonth: any,\r\n}\r\n\r\n/**\r\n * @param {*} props all props\r\n * @returns {React.ReactElement} returns a date-input field\r\n */\r\nfunction CldDateField({\r\n  disableState,\r\n  selectType,\r\n  selectedDateFromCld,\r\n  selectedDate,\r\n  disableCertainDate,\r\n  showDatelabel,\r\n  templateClr,\r\n  propsMinDate,\r\n  propsMaxDate,\r\n  disableDay,\r\n  daysInMonth,\r\n}: parameterFieldProps) {\r\n  const [startDate, setStartDate] = useState<string>(\"\");\r\n  const [endDate, setEndDate] = useState<string>(\"\");\r\n  const [errMsgStart, setErrMsgStart] = useState<string | undefined>();\r\n  const [errMsgEnd, setErrMsgEnd] = useState<string | undefined>();\r\n  const [windowDimensions, setWindowDimensions] = useState<any>(window.innerWidth);\r\n  const [selectedDateFromField, setSelectedDateFromField] = useState({\r\n    startDateFromField: \"\",\r\n    endDateFromField: \"\",\r\n  });\r\n  const [minAndmaxDate, setminAndmaxDate] = useState<any>({\r\n    minDate: \"1921-01-01\",\r\n    maxDate: \"2100-12-31\",\r\n  });\r\n  const templateOutline = useMemo(() => {\r\n    return templateClr === \"blue\" ? \"cld_blueOutline\" : \"cld_greenOutline\";\r\n  }, [templateClr]);\r\n\r\n  function handleResize() {\r\n    setWindowDimensions(window.innerWidth);\r\n  }\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('resize', handleResize);\r\n    return () => window.removeEventListener('resize', handleResize);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const timer = setTimeout(() => {\r\n      setErrMsgStart(\"\");\r\n      setErrMsgEnd(\"\");\r\n    }, 4000);\r\n    return () => clearTimeout(timer);\r\n  }, [errMsgStart, errMsgEnd]);\r\n\r\n  useEffect(() => {\r\n    if (disableState === \"past\" || disableState === \"future\") {\r\n      setminAndmaxDate(getDisableDateForField(disableState));\r\n    }\r\n  }, [disableState]);\r\n\r\n  useEffect(() => {\r\n    if(propsMinDate || propsMaxDate || disableState){\r\n      setminAndmaxDate({\r\n        minDate: disableState === \"past\" && propsMinDate && new Date(propsMinDate) < new Date() ? formatDay(new Date()) : formatDay(new Date(propsMinDate)),\r\n        maxDate: disableState === \"future\" && propsMaxDate && new Date(propsMaxDate) > new Date() ? formatDay(new Date()) : formatDay(new Date(propsMaxDate)),\r\n      });\r\n      return;\r\n    }\r\n\r\n  }, [minAndmaxDate.maxDate, propsMinDate, propsMaxDate, disableState])\r\n\r\n  useEffect(() => {\r\n    if (selectType === \"range\") {\r\n      const { startDate, endDate } = selectedDateFromCld;\r\n      setStartDate(formatDay(startDate));\r\n      setEndDate(formatDay(endDate));\r\n      setSelectedDateFromField({\r\n        startDateFromField: formatDay(startDate),\r\n        endDateFromField: formatDay(endDate),\r\n      });\r\n    } else {\r\n      const dateFromCld = selectedDateFromCld;\r\n      if (dateFromCld) {\r\n        setStartDate(formatDay(dateFromCld));\r\n      }\r\n    }\r\n  }, [selectType, selectedDateFromCld]);\r\n\r\n  /**\r\n   * @param {object} e contain selected start date\r\n   */\r\n  const handleStartDate = (e: any) => {\r\n    setStartDate(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * @param {object} e contain selected end date\r\n   */\r\n  const handleEndDate = (e: any) => {\r\n    setEndDate(e.target.value);\r\n  };\r\n\r\n  /**\r\n   * @param {string} date contain date\r\n   * @returns {boolean} return boolean\r\n   */\r\n  const handleDisableDateField = (date: string) => {\r\n    const disableField = disableCertainDate.find((dt: string) => formatDay(new Date(dt)) === formatDay(new Date(date)));\r\n    return disableField;\r\n  };\r\n\r\n  /**\r\n   * @param {string} date contain date\r\n   * @returns {boolean} return boolean\r\n   */\r\n    const handleDisableDaycolumn = (date: string) => {\r\n      const findDisableDay = daysInMonth?.find((dy: Date)=>new Date(date).getDay() === days[disableDay[dy.getDay()]?.toLowerCase()])\r\n      return findDisableDay\r\n    };\r\n\r\n  /**\r\n   * @param {*} e contain selected start date\r\n   */\r\n  const startSetError = (e: any) => {\r\n    if (e.code === \"Space\") {\r\n      e.preventDefault();\r\n    }\r\n    if ((e.code === \"Enter\" && startDate) || (e._reactName === \"onBlur\" && startDate)) {\r\n      const { minDate, maxDate } = minAndmaxDate;\r\n      if (new Date(startDate) > new Date(maxDate)) {\r\n        setErrMsgStart(`Date must be ${formatDay(new Date(maxDate), true)} or earlier`);\r\n      } else if (new Date(startDate) < new Date(minDate)) {\r\n        setErrMsgStart(`Date must be ${formatDay(new Date(minDate), true)} or later`);\r\n      } else if (new Date(startDate) >= new Date(endDate)) {\r\n        setErrMsgStart(\"start Date should be lower than end Date\");\r\n        // setStartDate(selectedDateFromField.startDateFromField)\r\n      } else if (handleDisableDateField(startDate) || handleDisableDaycolumn(startDate)) {\r\n        setErrMsgStart(\"Date must not be disabled date\");\r\n      } else {\r\n        setSelectedDateFromField((prevState) => ({\r\n          ...prevState,\r\n          startDateFromField: startDate,\r\n        }));\r\n        selectedDate({\r\n          startDateFromField: startDate,\r\n          endDateFromField: selectedDateFromField.endDateFromField,\r\n          from: \"startDateSelect\",\r\n        });\r\n      }\r\n    } else if (e.key === \"Enter\" && !startDate) {\r\n      setErrMsgStart(\"Please enter a valid Date\");\r\n    }\r\n  };\r\n\r\n  /**\r\n   *\r\n   * @param {*} e contain selected end date\r\n   */\r\n  const endSetError = (e: any) => {\r\n    if (e.code === \"Space\") {\r\n      e.preventDefault();\r\n    }\r\n    if ((e.code === \"Enter\" && endDate) || (e._reactName === \"onBlur\" && endDate)) {\r\n      const { minDate, maxDate } = minAndmaxDate;\r\n      if (new Date(endDate) > new Date(maxDate)) {\r\n        setErrMsgEnd(`Date must be ${formatDay(new Date(maxDate), true)} or earlier`);\r\n      } else if (new Date(endDate) < new Date(minDate)) {\r\n        setErrMsgEnd(`Date must be ${formatDay(new Date(minDate), true)} or later`);\r\n      } else if (new Date(startDate) >= new Date(endDate)) {\r\n        setErrMsgEnd(\"End Date should be greater than start Date\");\r\n        // setEndDate(selectedDateFromField.endDateFromField)\r\n      } else if (!startDate) {\r\n        setStartDate(endDate);\r\n        setEndDate(\"\");\r\n        setSelectedDateFromField((prevState) => ({\r\n          ...prevState,\r\n          startDateFromField: endDate,\r\n        }));\r\n        selectedDate({\r\n          startDateFromField: endDate,\r\n          endDateFromField: selectedDateFromField.endDateFromField,\r\n          from: \"startDateSelect\",\r\n        });\r\n      } else if (handleDisableDateField(endDate) || handleDisableDaycolumn(endDate)) {\r\n        setErrMsgEnd(\"Date must not be disabled date\");\r\n      } else {\r\n        setSelectedDateFromField({\r\n          startDateFromField: selectedDateFromField.startDateFromField,\r\n          endDateFromField: endDate,\r\n        });\r\n\r\n        selectedDate({\r\n          startDateFromField: selectedDateFromField.startDateFromField,\r\n          endDateFromField: endDate,\r\n          from: \"endDateSelect\",\r\n        });\r\n      }\r\n    } else if (e.key === \"Enter\" && !endDate) {\r\n      setErrMsgEnd(\"Please enter a valid Date\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={`${selectType === \"range\" ? \"cld_fieldContainer\" : \"cld_startDateFieldOnly\"}`}>\r\n        <div>\r\n          {showDatelabel && <label htmlFor=\"start_Cld_Field\">Start Date</label>}\r\n          <input\r\n            type=\"date\"\r\n            id=\"start_Cld_Field\"\r\n            value={startDate}\r\n            onChange={(e) => handleStartDate(e)}\r\n            onKeyDown={(e) => startSetError(e)}\r\n            onBlur={startSetError}\r\n            min={minAndmaxDate.minDate}\r\n            max={minAndmaxDate.maxDate}\r\n            className={templateOutline}\r\n            disabled={windowDimensions <= 612}\r\n          />\r\n        </div>\r\n        {selectType === \"range\" && (\r\n          <div>\r\n            {showDatelabel && <label htmlFor=\"end_Cld_Field\">End Date</label>}\r\n            <input\r\n              type=\"date\"\r\n              id=\"end_Cld_Field\"\r\n              value={endDate}\r\n              onChange={(e) => handleEndDate(e)}\r\n              onKeyDown={(e) => endSetError(e)}\r\n              onBlur={endSetError}\r\n              min={minAndmaxDate.minDate}\r\n              max={minAndmaxDate.maxDate}\r\n              className={templateOutline}\r\n              disabled={windowDimensions <= 612}\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n      <div className={`${selectType === \"range\" ? \"cld_errmsgContainer\" : \"cld_startaerrmsg\"}`}>\r\n        <div className={`cld_errmsg ${errMsgStart && \"hidecld_errmsg\"}`}>{errMsgStart}</div>\r\n        {selectType === \"range\" && <div className={`cld_errmsg ${errMsgEnd && \"hidecld_errmsg\"}`}>{errMsgEnd}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CldDateField;\r\n","const currentDate = new Date();\n\n/**\n * @param {string} minDate contain a start date\n * @param {number} dynYear contain a year\n * @param {number} dynMonth contain a month\n * @returns {boolean} disable arrow\n */\nconst disableArrowWhenMinDate = (minDate: string, dynYear: number, dynMonth: number, disableState: string) => {\n    if(minDate){\n      let minNewDate = disableState === \"past\" && minDate && new Date(minDate) < new Date() ? new Date() : new Date(minDate);\n      return minNewDate.getFullYear() === dynYear && (minNewDate.getMonth() + 1) === dynMonth\n    }\n    return;\n  }\n\n/**\n * @param {string} disableState contain a disable-state past || future\n * @param {any} disableArrow contain a boolean\n * @param {string} dynYear contain a year\n * @param {string} dynMonth contain a month\n * @returns {boolean} disable arrow\n */\nexport function disableLeftArrow(disableState: string, disableArrow: any, dynYear: number, dynMonth: number, minDate: string){\n    return (disableState === \"past\" && !minDate && disableArrow) || (dynYear === 1921 && dynMonth === 1) || disableArrowWhenMinDate(minDate, dynYear, dynMonth, disableState)\n}\n\n/**\n * @param {string} maxDate contain a start date\n * @param {number} dynYear contain a year\n * @param {number} dynMonth contain a month\n * @returns {boolean} disable arrow\n */\n const disableArrowWhenMaxDate = (maxDate: string, dynYear: number, dynMonth: number, disableState: string) => {\n    if(maxDate){\n      const maxNewDate = disableState === \"future\" && maxDate && new Date(maxDate) > new Date() ? new Date() : new Date(maxDate);\n      return maxNewDate.getFullYear() === dynYear && (maxNewDate.getMonth() + 1) === dynMonth\n    }\n    return;\n  }\n\n/**\n * @param {string} disableState contain a disable-state past || future\n * @param {any} disableArrow contain a boolean\n * @param {string} dynYear contain a year\n * @param {string} dynMonth contain a month\n * @returns {boolean} disable arrow\n */\nexport function disableRightArrow(disableState: string, disableArrow: any, dynYear: number, dynMonth: number, maxDate: string){\n    return (disableState === \"future\" && !maxDate && disableArrow) || (dynYear === 2100 && dynMonth === 12) || disableArrowWhenMaxDate(maxDate, dynYear, dynMonth, disableState)\n}\n\n/**\n * @param {string} disableState contain a disable-state past || future\n * @param {string} month contain a month value\n * @param {string} year contain a year value\n * @returns {boolean} for disable arrow\n */\n export function getDisableDateForArrow(disableState: string, month: number, year: number) {\n  let disableArrow;\n  if (disableState === \"past\") {\n    disableArrow = !!(currentDate.getMonth() >= month - 1 && currentDate.getFullYear() >= year);\n  } else if (disableState === \"future\") {\n    disableArrow = !!(currentDate.getMonth() <= month - 1 && currentDate.getFullYear() <= year);\n  }\n  return disableArrow;\n}\n","import * as React from 'react'\r\nimport \"./cldSelectField.scss\";\r\n\r\ntype monthParameterProps = {\r\n  disableState: string,\r\n  dynMonth: number,\r\n  dynYear: number,\r\n  handleChangeSelect: (data: any)=> void,\r\n  showSelectMonthArrow: boolean,\r\n  minDate: any,\r\n  maxDate: string,\r\n};\r\n\r\nconst months = [\r\n  \"January\",\r\n  \"February\",\r\n  \"March\",\r\n  \"April\",\r\n  \"May\",\r\n  \"June\",\r\n  \"July\",\r\n  \"August\",\r\n  \"September\",\r\n  \"October\",\r\n  \"November\",\r\n  \"December\",\r\n];\r\nconst currentDate = new Date();\r\n\r\n/**\r\n * @param {*} props all props\r\n * @returns {object} returns a select field(Month)\r\n */\r\nexport function SelectMonthField({ disableState, dynMonth, dynYear, handleChangeSelect, showSelectMonthArrow, minDate, maxDate } : monthParameterProps) {\r\n  /**\r\n   * @param {number} index contain id\r\n   * @returns {boolean} returns a boolean value\r\n   */\r\n  const disableMonthFunc = (index: number) => {\r\n    if(disableState === \"past\"){\r\n      if(minDate && maxDate){\r\n        let dateSetPast = new Date(minDate) < new Date() ? new Date() : new Date(minDate);\r\n        return (dateSetPast.getFullYear() === dynYear && dateSetPast.getMonth() > index) || (new Date(maxDate).getFullYear() === dynYear && new Date(maxDate).getMonth() < index);\r\n      }\r\n      if(minDate && new Date(minDate) > new Date()){\r\n        return new Date(minDate).getFullYear() === dynYear && new Date(minDate).getMonth() > index;\r\n      }\r\n      if(maxDate){\r\n        return (currentDate.getFullYear() === dynYear && currentDate.getMonth() > index) || (new Date(maxDate).getFullYear() === dynYear && new Date(maxDate).getMonth() < index);\r\n      }\r\n      return currentDate.getFullYear() === dynYear && currentDate.getMonth() > index;\r\n    }else if(disableState === \"future\"){\r\n      if(minDate && maxDate){\r\n        let dateSet = new Date(maxDate) > new Date() ? new Date() : new Date(maxDate);\r\n        return (new Date(minDate).getFullYear() === dynYear && new Date(minDate).getMonth() > index) || (dateSet.getFullYear() === dynYear && dateSet.getMonth() < index);\r\n      }\r\n      if(minDate && new Date(minDate) < new Date()){\r\n        return (new Date(minDate).getFullYear() === dynYear && new Date(minDate).getMonth() > index) || (currentDate.getFullYear() === dynYear && currentDate.getMonth() < index);\r\n      }\r\n\r\n      if(maxDate && new Date(maxDate) < new Date()){\r\n        return new Date(maxDate).getFullYear() === dynYear && new Date(maxDate).getMonth() < index\r\n      }\r\n      return currentDate.getFullYear() === dynYear && currentDate.getMonth() < index;\r\n    }\r\n    if(minDate && maxDate){\r\n      return (new Date(minDate).getFullYear() === dynYear && new Date(minDate).getMonth() > index) || (new Date(maxDate).getFullYear() === dynYear && new Date(maxDate).getMonth() < index);\r\n    }\r\n    if(minDate && !disableState){\r\n      return new Date(minDate).getFullYear() === dynYear && new Date(minDate).getMonth() > index;\r\n    }\r\n    if(maxDate && !disableState){\r\n      return new Date(maxDate).getFullYear() === dynYear && new Date(maxDate).getMonth() < index;\r\n    }\r\n    return;\r\n  };\r\n\r\n  return (\r\n    <select\r\n      disabled={showSelectMonthArrow}\r\n      className={`${showSelectMonthArrow && \"cld_disableArrow\"}`}\r\n      id=\"selectMonth\"\r\n      value={dynMonth - 1}\r\n      onChange={(e) => handleChangeSelect(e)}\r\n    >\r\n      {months.map((data, index) => {\r\n        return (\r\n          <option disabled={disableMonthFunc(index)} key={data} value={index}>\r\n            {data}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n}\r\n\r\ntype yearParameterProps = {\r\n  dynYear: number,\r\n  startAndendYearOptions: any,\r\n  handleChangeSelect: (data: any)=> void,\r\n  showSelectYearArrow: boolean,\r\n};\r\n\r\n/**\r\n * @param {*} props all props\r\n * @returns {object} returns a select field(Month)\r\n */\r\nexport function SelectYearField({ dynYear, startAndendYearOptions, handleChangeSelect, showSelectYearArrow }: yearParameterProps) {\r\n  /**\r\n   *\r\n   * @returns {Array} returns no. of year values\r\n   */\r\n  const yearOptions = () => {\r\n    const yearoption = [];\r\n    const { startYearOption, endYearOption } = startAndendYearOptions;\r\n    for (let n = startYearOption; n <= endYearOption; n += 1) {\r\n      yearoption.push(n);\r\n    }\r\n    return yearoption;\r\n  };\r\n  return (\r\n    <select\r\n      disabled={showSelectYearArrow}\r\n      className={`${showSelectYearArrow && \"cld_disableArrow\"}`}\r\n      id=\"selectYear\"\r\n      value={dynYear}\r\n      onChange={(e) => handleChangeSelect(e)}\r\n    >\r\n      {yearOptions().map((data) => {\r\n        return (\r\n          <option key={data} value={data}>\r\n            {data}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n}\r\n","import { formatDay } from \"../cldDisable\";\r\n/**\r\n * @param {object} date contain date\r\n * @param {number} addupDay to plus one date\r\n * @returns {string} returns date\r\n */\r\nconst addDays = (date: string, addupDay = 1) => {\r\n  const result = new Date(date);\r\n  result.setDate(result.getDate() + addupDay);\r\n  return result;\r\n};\r\n\r\n/**\r\n * @param {object} start contain startdate\r\n * @param {object} end contain enddate\r\n * @param {object} range contain the date\r\n * @returns {string} returns dateRange\r\n */\r\nexport const dateRange:any = (start: any, end: any, range = []) => {\r\n  if (new Date(formatDay(start)) > new Date(formatDay(end))) return range;\r\n  const next = addDays(start, 1);\r\n  return dateRange(next, end, [...range, start]);\r\n};\r\n\r\n/**\r\n * @param {int} The month number, 0 based\r\n * @param {int} The year, not zero based, required to account for leap years\r\n * @return {Date[]} List with date objects for each day of the month\r\n */\r\n export function getDaysInMonth(month: number, year:  number) {\r\n  var date = new Date(year, month, 1);\r\n  var monthIndays = [];\r\n  while (date.getMonth() === month) {\r\n    monthIndays.push(new Date(date));\r\n    date.setDate(date.getDate() + 1);\r\n  }\r\n  return monthIndays;\r\n}","import * as React from \"react\";\r\nimport { useMemo } from 'react';\r\nimport \"./legends.scss\";\r\n\r\ntype legendsParameterProps = {\r\n  singleSlotState: boolean,\r\n  duelSlotState: boolean,\r\n  templateClr: string,\r\n}\r\n\r\n/**\r\n * @param {*} props all the props needed for show the slotInfo\r\n * @returns {boolean} return slotInfo\r\n */\r\nfunction Legends({ singleSlotState, duelSlotState, templateClr }: legendsParameterProps) {\r\n  const templateSelectedClr = useMemo(() => {\r\n    return templateClr === \"blue\" ? \"cld_slotInfoSelectedBlueClr\" : \"cld_slotInfoSelectedGreenClr\";\r\n  }, [templateClr]);\r\n  return (\r\n    <div className=\"cld_slotContainer\">\r\n      <div className=\"cld_slot\">\r\n        <p className={`${templateSelectedClr} cld_slotInfoSize`} />\r\n        <span className=\"cld_slotInfoLabel\">Selected Date</span>\r\n      </div>\r\n      <div className=\"cld_slot\">\r\n        <p className=\"cld_slotInfoSize cld_slotInfoDisabledClr\" />\r\n        <span className=\"cld_slotInfoLabel\">Disabled Date</span>\r\n      </div>\r\n      {(singleSlotState || duelSlotState) && (\r\n        <div className=\"cld_slot\">\r\n          <p className=\"cld_slotInfoSize cld_slotInfoAvailableClr\" />\r\n          <span className=\"cld_slotInfoLabel\">Available Slots</span>\r\n        </div>\r\n      )}\r\n      {duelSlotState && (\r\n        <div className=\"cld_slot\">\r\n          <p className=\"cld_slotInfoSize cld_slotInfoTotalClr\" />\r\n          <span className=\"cld_slotInfoLabel\">Total Slots</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Legends;\r\n","import * as React from \"react\";\r\nimport { useEffect, useState, useCallback, useMemo } from 'react';\r\nimport CldDateField from \"../Fields/cldDateField\";\r\nimport {\r\n  getDisableDate,\r\n  getDisableYear,\r\n  getDisableCertainDate,\r\n  getDisableWhenRange,\r\n  formatDay,\r\n  setCurrentTime,\r\n  addZero,\r\n  setMinDate,\r\n  setMaxDate,\r\n  getDisableDays,\r\n} from \"../cldDisable\";\r\nimport { disableLeftArrow, disableRightArrow, getDisableDateForArrow } from \"./disableArrow\";\r\nimport { SelectMonthField, SelectYearField } from \"../Fields/cldSelectField\";\r\nimport {dateRange, getDaysInMonth} from \"./dateRange\";\r\nimport \"./calendar.scss\";\r\nimport Legends from \"../Legends/legends\";\r\n\r\nconst days = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\r\n\r\n/**\r\n * @param {*} props all the props needed for customize the calendar\r\n * @returns {React.ReactElement} returns a calendar with single, multiple and range with slots options\r\n */\r\nfunction Calendar({\r\n  selectDateType,\r\n  disableDates,\r\n  disableCertainDates,\r\n  duelSlotDates,\r\n  singleSlotDates,\r\n  onSelect,\r\n  slotInfo = true,\r\n  showDateInputField = true,\r\n  showArrow = true,\r\n  showSelectMonthArrow,\r\n  showSelectYearArrow,\r\n  showDatelabel,\r\n  templateClr,\r\n  minDate,\r\n  maxDate,\r\n  defaultValue = {},\r\n  disableDays,\r\n}: any) {\r\n\r\n  const disableState = useMemo(() => {\r\n    return disableDates || \"\";\r\n  }, [disableDates]);\r\n\r\n  const selectType = useMemo(() => {\r\n    return selectDateType || \"single\";\r\n  }, [selectDateType]);\r\n\r\n  const disableCertainDate = useMemo(() => {\r\n    return disableCertainDates || [];\r\n  }, [disableCertainDates]);\r\n\r\n  const singleSlots = useMemo(() => {\r\n    return singleSlotDates || [];\r\n  }, [singleSlotDates]);\r\n\r\n  const duelSlots = useMemo(() => {\r\n    return duelSlotDates || [];\r\n  }, [duelSlotDates]);\r\n\r\n  const disableDay = useMemo(() => {\r\n    return disableDays?.map((l: string)=>l.toLowerCase()) || []\r\n  }, [disableDays])\r\n\r\n  const [getDate, setGetDate] = useState<any>();\r\n  const [getStartDay, setGetStartDay] = useState<any>();\r\n  const [calenderDates, setCalenderDates] = useState<Array<object>>([]);\r\n  const [dynMonth, setDynMonth] = useState<any>();\r\n  const [dynYear, setDynYear] = useState<any>();\r\n  const [baseId, setBaseId] = useState<Array<string>>([]);\r\n  const [rangeId, setRangeId] = useState<Array<string>>([]);\r\n  const [inRange, setInRange] = useState<any>();\r\n  const [slotsDate, setSlotsDate] = useState<Array<string>>([]);\r\n  const [disableArrow, setDisableArrow] = useState<boolean | null>();\r\n  const [daysInMonth, setDaysInMonth] = useState<Date[]>();\r\n  const [startDate, setStartDate] = useState<any>(\"\");\r\n  const [multipleDate, setMultipleDate] = useState<any>([]);\r\n  const [startAndendDate, setStartAndendDate] = useState<any>({\r\n    startDate: \"\",\r\n    endDate: \"\",\r\n  });\r\n  const [startAndendYearOptions, setstartAndendYearOptions] = useState<any>({\r\n    startYearOption: 1921,\r\n    endYearOption: 2100,\r\n  });\r\n\r\n  const handleDisableArrow = useCallback(() => {\r\n    setDisableArrow(getDisableDateForArrow(disableState, dynMonth, dynYear));\r\n    if(disableDay?.length > 0){\r\n      setDaysInMonth(getDaysInMonth(dynMonth - 1, dynYear));\r\n    }\r\n  }, [disableDay, disableState, dynMonth, dynYear]);\r\n\r\n  useEffect(() => {\r\n    handleDisableArrow();\r\n  }, [handleDisableArrow]);\r\n\r\n  useEffect(() => {\r\n    let currentdate\r\n    if (minDate && new Date(minDate) > new Date()) {\r\n      currentdate = new Date(minDate);\r\n    }else if (minDate && maxDate && new Date(minDate) < new Date() && new Date(maxDate) < new Date()) {\r\n      currentdate = new Date(minDate);\r\n    }else if (maxDate && new Date(maxDate) < new Date()) {\r\n      currentdate = new Date(new Date(maxDate));\r\n    }else{\r\n      currentdate = new Date();\r\n    }\r\n    const findDaysInMonth = new Date(currentdate.getFullYear(), currentdate.getMonth() + 1, 0).getDate();\r\n    const findStartDayInMonth = new Date(currentdate.getFullYear(), currentdate.getMonth(), 1).getDay();\r\n    setGetDate(findDaysInMonth);\r\n    setGetStartDay(findStartDayInMonth)\r\n    setDynMonth(currentdate.getMonth() + 1)\r\n    setDynYear(currentdate.getFullYear())\r\n  }, [minDate, maxDate]);\r\n\r\n  useEffect(() => {\r\n    if (disableState === \"past\" || disableState === \"future\" || minDate || maxDate) {\r\n      setstartAndendYearOptions(getDisableYear(disableState, minDate, maxDate));\r\n    }\r\n  }, [disableState, minDate, maxDate]);\r\n\r\n  useEffect(() => {\r\n    const slotDateArr: Array<string> = [];\r\n    const slotState = (singleSlots.length > 0 && singleSlots) || (duelSlots.length > 0 && duelSlots) || [];\r\n    slotState.forEach((slDt: any) => {\r\n      slotDateArr.push(formatDay(new Date(slDt.date)));\r\n    });\r\n    setSlotsDate(slotDateArr);\r\n  }, [duelSlots, singleSlots]);\r\n\r\n  const defaultDependency = JSON.stringify(defaultValue)\r\n  useEffect(()=>{\r\n    if(selectDateType === \"range\" && (defaultValue && defaultValue.startDate && defaultValue.endDate)){\r\n      const defaultRange = dateRange(new Date(defaultValue.startDate), new Date(defaultValue.endDate));\r\n      const defaultAllRangeDate = defaultRange.map((date: Date) => `${addZero(date.getDate())}${addZero(date.getMonth() + 1)}${date.getFullYear()}`);\r\n      setRangeId(defaultAllRangeDate);\r\n      setStartAndendDate({\r\n        startDate: setCurrentTime(new Date(defaultValue.startDate)),\r\n        endDate: setCurrentTime(new Date(defaultValue.endDate))\r\n      });\r\n      return\r\n    }\r\n\r\n   if(selectDateType === \"multiple\" && defaultValue && defaultValue.length > 0){\r\n    let setDefaultDate: Array<string> = []\r\n    let getInitailActualDate: Array<Date> = []\r\n    defaultValue?.forEach((initialDate: any)=>{\r\n      let initialNewDate  = new Date(initialDate)\r\n       setDefaultDate.push(`${addZero(initialNewDate.getDate())}${addZero(initialNewDate.getMonth() + 1)}${initialNewDate.getFullYear()}`);\r\n      getInitailActualDate.push(initialNewDate)\r\n    })\r\n      const multipleDefaultDate = setDefaultDate\r\n      setMultipleDate(getInitailActualDate)\r\n      setBaseId(multipleDefaultDate)\r\n      return\r\n    }\r\n\r\n    if(defaultValue && defaultValue.date){\r\n      let singleDefaultDate =  new Date(defaultValue.date)\r\n      let singleDefaultId = `${addZero(singleDefaultDate.getDate())}${addZero(singleDefaultDate.getMonth() + 1)}${singleDefaultDate.getFullYear()}`\r\n      setStartDate(singleDefaultDate)\r\n      setBaseId([singleDefaultId])\r\n      return\r\n    }\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  },[selectDateType, defaultDependency])\r\n\r\n  const rangeCalculater = useCallback(\r\n    (id) => {\r\n      const idDate = new Date(id);\r\n      if (rangeId.length === 0) {\r\n        const convertID = `${addZero(idDate.getDate())}${addZero(idDate.getMonth() + 1)}${idDate.getFullYear()}`;\r\n        setRangeId([convertID]);\r\n        setStartAndendDate((prevState: any) => ({\r\n          ...prevState,\r\n          startDate: setCurrentTime(idDate),\r\n        }));\r\n        setInRange(null);\r\n      } else if (rangeId.length === 1 && formatDay(idDate) !== formatDay(startAndendDate.startDate)) {\r\n        let getStartDate;\r\n        let getEndDate;\r\n        const findGreater = new Date(startAndendDate.startDate) < idDate;\r\n        if (findGreater) {\r\n          getStartDate = startAndendDate.startDate;\r\n          getEndDate = idDate;\r\n        } else {\r\n          getStartDate = idDate;\r\n          getEndDate = startAndendDate.startDate;\r\n        }\r\n        const range = dateRange(new Date(getStartDate), new Date(getEndDate));\r\n        const allRangeDate = range.map((date: Date) => `${addZero(date.getDate())}${addZero(date.getMonth() + 1)}${date.getFullYear()}`);\r\n\r\n        setRangeId(allRangeDate);\r\n        setInRange(null);\r\n        if (findGreater) {\r\n          setStartAndendDate({\r\n            startDate: startAndendDate.startDate,\r\n            endDate: setCurrentTime(idDate),\r\n          });\r\n        } else {\r\n          setStartAndendDate({\r\n            startDate: setCurrentTime(idDate),\r\n            endDate: startAndendDate.startDate,\r\n          });\r\n        }\r\n      } else {\r\n        const convertID = `${addZero(idDate.getDate())}${addZero(idDate.getMonth() + 1)}${idDate.getFullYear()}`;\r\n        setRangeId([convertID]);\r\n        setStartAndendDate({\r\n          startDate: setCurrentTime(idDate),\r\n        });\r\n      }\r\n    },\r\n    [rangeId, startAndendDate],\r\n  );\r\n\r\n  useEffect(() => {\r\n    if(onSelect instanceof Function)\r\n    if (selectType === \"multiple\") {\r\n      onSelect(multipleDate);\r\n    } else if (selectType === \"range\") {\r\n      onSelect(startAndendDate);\r\n    } else {\r\n      startDate && onSelect(startDate);\r\n    }\r\n  }, [startDate, multipleDate, startAndendDate, onSelect, selectType]);\r\n\r\n  const highLight = useCallback(\r\n    (id, actualDateId) => {\r\n      switch (selectType) {\r\n        case \"single\":\r\n          setBaseId([id]);\r\n          setStartDate(setCurrentTime(actualDateId));\r\n          break;\r\n        case \"multiple\":\r\n          if (!baseId.includes(id)) {\r\n            setBaseId((oldArray) => [...oldArray, id]);\r\n            setMultipleDate((oldArray: string) => [...oldArray , setCurrentTime(actualDateId)]);\r\n          } else {\r\n            const findedId = baseId.findIndex((li) => li === id);\r\n            const removedSelect = baseId.filter((_i, index) => findedId !== index);\r\n            const removedActualDateId = multipleDate.filter((_i: any, index: number) => findedId !== index);\r\n            setBaseId(removedSelect);\r\n            setMultipleDate(removedActualDateId);\r\n          }\r\n          break;\r\n        case \"range\":\r\n          rangeCalculater(id);\r\n          break;\r\n        default:\r\n      }\r\n    },\r\n    [baseId, multipleDate, rangeCalculater, selectType],\r\n  );\r\n  /**\r\n   * @param {object} event mouseHover data-info\r\n   */\r\n  const handleMouseEnter = (event: any) => {\r\n    setInRange(event.target.dataset.info);\r\n  };\r\n\r\n  const handleRenderDate = useCallback(() => {\r\n    const noOfDate = [];\r\n    let templateHighLightbg;\r\n    let templateRangeHighLightbg;\r\n    let templateBorder;\r\n    let templateCurrentDay;\r\n    if (templateClr === \"blue\") {\r\n      templateHighLightbg = \"cld_blueHighlight\";\r\n      templateRangeHighLightbg = \"cld_inrangeBlue cld_inrangeIndexBlue\";\r\n      templateBorder = \"cld_cellBlueActive\";\r\n      templateCurrentDay = \"cld_currentDayBlue\";\r\n    } else {\r\n      templateHighLightbg = \"cld_greenHighlight\";\r\n      templateRangeHighLightbg = \"cld_inrangeGreen cld_inrangeIndexGreen\";\r\n      templateBorder = \"cld_cellGreenActive\";\r\n      templateCurrentDay = \"cld_currentDayGreen\";\r\n    }\r\n\r\n    for (let i = 1; i <= getDate + getStartDay; i += 1) {\r\n      if (i <= getStartDay) {\r\n        noOfDate.push(<td />);\r\n      } else {\r\n        const dateId = `${addZero(i - getStartDay)}${addZero(dynMonth)}${dynYear}`;\r\n        const dateTypeId = `${dynYear}-${addZero(dynMonth)}-${addZero(i - getStartDay)}`;\r\n\r\n        // range classname for start,between and end\r\n        let rangeHightLight;\r\n        if (rangeId[0] === dateId) {\r\n          rangeHightLight = `${templateHighLightbg} cld_highlightFirstNum`;\r\n        } else if (rangeId[rangeId.length - 1] === dateId) {\r\n          rangeHightLight = `${templateHighLightbg} cld_highlightLastNum`;\r\n        } else if (rangeId.includes(dateId)) {\r\n          rangeHightLight = `${templateHighLightbg} cld_highlightNum`;\r\n        }\r\n        // firstOrder change className\r\n        const rangeStartDate = startAndendDate.startDate && startAndendDate.startDate;\r\n        const rangeEndDate = startAndendDate.endDate && startAndendDate.endDate;\r\n        if (rangeId.length === 1 && inRange && rangeStartDate.getDate() > Number(inRange)) {\r\n          rangeHightLight = rangeId[0] === dateId && `${templateHighLightbg} cld_highlightLastNum`;\r\n        }\r\n        // classname for range, single and multiple\r\n        let highLightNum;\r\n        if (selectType === \"range\") {\r\n          highLightNum = rangeHightLight;\r\n        } else if (baseId.includes(dateId)) {\r\n          highLightNum = `${templateHighLightbg} cld_highlightNumCircle`;\r\n        }\r\n        // startDate and endDate between ranges\r\n        let inRangeCondition;\r\n        if (rangeId.length === 1 && inRange) {\r\n          if (dynYear === rangeStartDate.getFullYear() && dynMonth === rangeStartDate.getMonth() + 1) {\r\n            inRangeCondition =\r\n              (Number(inRange) >= i - getStartDay &&\r\n                rangeStartDate.getDate() < i - getStartDay &&\r\n                `${templateRangeHighLightbg} cld_inrangeLastIndex`) ||\r\n              (Number(inRange) <= i - getStartDay &&\r\n                rangeStartDate.getDate() > i - getStartDay &&\r\n                `${templateRangeHighLightbg} cld_inrangeFirstIndex`);\r\n          } else if (rangeStartDate < new Date(`${dynYear}-${dynMonth}-${Number(inRange)}`)) {\r\n            inRangeCondition = Number(inRange) >= i - getStartDay && `${templateRangeHighLightbg} cld_inrangeLastIndex`;\r\n          } else {\r\n            inRangeCondition =\r\n              Number(inRange) <= i - getStartDay && `${templateRangeHighLightbg} cld_inrangeFirstIndex`;\r\n          }\r\n        }\r\n        const disableDate =\r\n          (disableState &&\r\n            !(minDate && disableDates === \"past\") &&\r\n            !(maxDate && disableDates === \"future\") &&\r\n            getDisableDate(new Date(dateTypeId), disableState)) ||\r\n          (minDate &&\r\n            setMinDate(\r\n              minDate && disableDates === \"past\" && new Date(minDate) < new Date() ? new Date() : new Date(minDate),\r\n              new Date(dateTypeId),\r\n            )) ||\r\n          (maxDate &&\r\n            setMaxDate(\r\n              maxDate && disableDates === \"future\" && new Date(maxDate) > new Date() ? new Date() : new Date(maxDate),\r\n              new Date(dateTypeId),\r\n            ));\r\n\r\n        const showDisableWhenRange =\r\n          rangeId.length > 1 && (disableCertainDate.length > 0 || disableDay.length > 0) && \r\n          getDisableWhenRange(disableCertainDate,disableDay, new Date(dateTypeId), rangeStartDate, rangeEndDate, daysInMonth, startAndendDate);\r\n\r\n        const disableSpecificDate =\r\n          disableCertainDate.length > 0 && getDisableCertainDate(new Date(dateTypeId), disableCertainDate);\r\n\r\n        // disableDay\r\n        const disableDayState = disableDay?.length > 0 && getDisableDays(disableDay, dateTypeId)\r\n\r\n        // dualSlots || singleSlots\r\n        const slotsState = duelSlots.length > 0 || singleSlots.length > 0;\r\n\r\n        let slotClass;\r\n        if (slotsState) {\r\n          if (selectType === \"range\") {\r\n            if (singleSlots.length > 0) {\r\n              slotClass = \"cld_cellAvailableMg\";\r\n            } else {\r\n              slotClass = \"cld_cellHoverMg\";\r\n            }\r\n          } else {\r\n            slotClass = singleSlots.length > 0 ? \"cld_cellHoverMgbtSingle\" : \"cld_cellHoverMgbt\";\r\n          }\r\n        } \r\n\r\n        let disableDateRangeClass;\r\n        if (disableDate) {\r\n          disableDateRangeClass = disableDate;\r\n        } else if (disableSpecificDate) {\r\n          disableDateRangeClass = disableSpecificDate;\r\n        } \r\n        else if(disableDayState){\r\n          disableDateRangeClass = disableDayState;\r\n        }\r\n        else {\r\n          disableDateRangeClass = `${highLightNum} ${selectType !== \"range\" && !slotsState && \"cld_cellSingleMultiple\"\r\n            } ${rangeId.length !== 1 && `${templateBorder} cld_cellActive`} ${inRangeCondition}`;\r\n        }\r\n        // slot\r\n        const slotIndex: any =\r\n          slotsState && duelSlots.length > 0\r\n            ? duelSlots[slotsDate.indexOf(formatDay(new Date(dateTypeId)))]\r\n            : singleSlots[slotsDate.indexOf(formatDay(new Date(dateTypeId)))];\r\n\r\n        // currentDay\r\n        const currentDayClass =\r\n          formatDay(new Date(dateTypeId)) === formatDay(new Date()) && `${templateCurrentDay} cld_currentDay`;\r\n        // merge all classname\r\n        const tdClass = `${slotClass} ${showDisableWhenRange} ${currentDayClass} ${disableDateRangeClass} cld_cellHover`;\r\n        // remove false and undefined in classname\r\n        const tdStyles = tdClass.trim().split(\"false \").join(\"\").split(\"undefined \").join(\"\");\r\n\r\n        noOfDate.push(\r\n          <td\r\n            onMouseEnter={(!disableDate || !disableSpecificDate || !disableDayState) && rangeId.length === 1 ? handleMouseEnter : undefined}\r\n            data-info={i - getStartDay}\r\n            onClick={\r\n              disableDate || disableSpecificDate || disableDayState\r\n                ? undefined\r\n                : () => highLight(selectType === \"range\" ? dateTypeId : dateId, dateTypeId)\r\n            }\r\n            aria-hidden=\"true\"\r\n          >\r\n            <div>\r\n              {slotsState && (\r\n                <span data-info={i - getStartDay} className=\"cld_slots cld_availableSlots\">\r\n                  {slotIndex ? slotIndex.avaliableSlot : 0}\r\n                </span>\r\n              )}\r\n              <div data-info={i - getStartDay} className={tdStyles}>\r\n                {i - getStartDay}\r\n              </div>\r\n              {duelSlots.length > 0 && (\r\n                <span data-info={i - getStartDay} className=\"cld_slots cld_totalSlots\">\r\n                  {slotIndex ? slotIndex.totalSlot : 0}\r\n                </span>\r\n              )}\r\n            </div>\r\n          </td>,\r\n        );\r\n      }\r\n    }\r\n\r\n    const trDate = [];\r\n    for (let j = 0; j < noOfDate.length; j += 1) {\r\n      let count = 0 + j;\r\n      if (j % 7 === 0) {\r\n        trDate.push(\r\n          <tr key={count}>\r\n            {noOfDate[count + 0] || <td key={count + 0} />}\r\n            {noOfDate[count + 1] || <td key={count + 1} />}\r\n            {noOfDate[count + 2] || <td key={count + 2} />}\r\n            {noOfDate[count + 3] || <td key={count + 3} />}\r\n            {noOfDate[count + 4] || <td key={count + 4} />}\r\n            {noOfDate[count + 5] || <td key={count + 5} />}\r\n            {noOfDate[count + 6] || <td key={count + 6} />}\r\n          </tr>,\r\n        );\r\n        count += 1;\r\n      }\r\n    }\r\n    setCalenderDates(trDate);\r\n  }, [\r\n     templateClr,\r\n     getDate,\r\n     getStartDay,\r\n     dynMonth,\r\n     dynYear,\r\n     rangeId,\r\n     startAndendDate,\r\n     inRange,\r\n     selectType,\r\n     baseId,\r\n     disableState,\r\n     minDate,\r\n     disableDates,\r\n     maxDate,\r\n     disableCertainDate,\r\n     disableDay,\r\n     daysInMonth,\r\n     duelSlots,\r\n     singleSlots,\r\n     slotsDate,\r\n     highLight\r\n    ]);\r\n\r\n  useEffect(() => {\r\n    handleRenderDate();\r\n  }, [handleRenderDate, dynMonth, dynYear, baseId, rangeId, inRange]);\r\n\r\n  /**\r\n   * Action type for decrease the month and year\r\n   */\r\n  const handleLeft = () => {\r\n    handleDisableArrow();\r\n    setGetDate(new Date(dynYear, dynMonth - 1, 0).getDate());\r\n    setGetStartDay(new Date(dynYear, dynMonth - 2, 1).getDay());\r\n    if (dynMonth === 1) {\r\n      setDynYear(dynYear - 1);\r\n      setDynMonth(12);\r\n    } else {\r\n      setDynMonth(dynMonth - 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Action type for increase the month and year\r\n   */\r\n  const handleRight = () => {\r\n    handleDisableArrow();\r\n    setGetDate(new Date(dynYear, dynMonth + 1, 0).getDate());\r\n    setGetStartDay(new Date(dynYear, dynMonth, 1).getDay());\r\n    if (dynMonth === 12) {\r\n      setDynYear(dynYear + 1);\r\n      setDynMonth(1);\r\n    } else {\r\n      setDynMonth(dynMonth + 1);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Action type for select the specific month\r\n   *\r\n   * @param {object} e contain selected option value\r\n   */\r\n  const handleSelectMonth = (e: any) => {\r\n    setDynMonth(Number(e.target.value) + 1);\r\n    setGetDate(new Date(dynYear, Number(e.target.value) + 1, 0).getDate());\r\n    setGetStartDay(new Date(dynYear, Number(e.target.value), 1).getDay());\r\n  };\r\n\r\n  /**\r\n   * Action type for select the specific year\r\n   *\r\n   * @param {object} e contain selected option value\r\n   */\r\n  const handleSelectYear = (e: any) => {\r\n    setDynYear(Number(e.target.value));\r\n    setGetDate(new Date(e.target.value, dynMonth, 0).getDate());\r\n    setGetStartDay(new Date(e.target.value, dynMonth - 1, 1).getDay());\r\n  };\r\n\r\n  /**\r\n   * Action type for select the specific year\r\n   *\r\n   * @param {object} id contain selected date\r\n   */\r\n  const rangeCalculaterFromField = (id: any) => {\r\n    if (id.startDateFromField && id.endDateFromField) {\r\n      const getStartDate = id.startDateFromField;\r\n      const getEndDate = id.endDateFromField;\r\n\r\n      const range = dateRange(new Date(getStartDate), new Date(getEndDate));\r\n      const allRangeDate = range.map((date: Date) => `${addZero(date.getDate())}${addZero(date.getMonth() + 1)}${date.getFullYear()}`);\r\n\r\n      setRangeId(allRangeDate);\r\n      setStartAndendDate({\r\n        startDate: setCurrentTime(id.startDateFromField),\r\n        endDate: setCurrentTime(id.endDateFromField),\r\n      });\r\n    } else {\r\n      const idDate = new Date(id.startDateFromField || id.endDateFromField);\r\n      const convertID = `${addZero(idDate.getDate())}${addZero(idDate.getMonth() + 1)}${idDate.getFullYear()}`;\r\n      setRangeId([convertID]);\r\n      setStartAndendDate((prevState: any) => ({\r\n        ...prevState,\r\n        startDate: setCurrentTime(id.startDateFromField) || setCurrentTime(id.endDateFromField),\r\n      }));\r\n    }\r\n\r\n    if (id.from) {\r\n      const refreshDate =\r\n        id.from === \"startDateSelect\" ? new Date(id.startDateFromField) : new Date(id.endDateFromField);\r\n      setDynMonth(refreshDate.getMonth() + 1);\r\n      setGetDate(new Date(refreshDate.getFullYear(), refreshDate.getMonth() + 1, 0).getDate());\r\n      setGetStartDay(new Date(refreshDate.getFullYear(), refreshDate.getMonth(), 1).getDay());\r\n      setDynYear(refreshDate.getFullYear());\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Return the selected date range from date-input field\r\n   *\r\n   * @param {object} da contain selected option value\r\n   */\r\n  const setFieldValue = (da: any) => {\r\n    if (selectType !== \"range\") {\r\n      const selDt = new Date(da.startDateFromField);\r\n      const fieldFindDaysInMonth = new Date(selDt.getFullYear(), selDt.getMonth() + 1, 0).getDate();\r\n      const fieldFindStartDayInMonth = new Date(selDt.getFullYear(), selDt.getMonth(), 1).getDay();\r\n      const dateIdFromFiled = `${addZero(selDt.getDate())}${addZero(selDt.getMonth() + 1)}${selDt.getFullYear()}`;\r\n      const actualDateFromFiled = `${selDt.getFullYear()}-${selDt.getMonth() + 1}-${selDt.getDate()}`;\r\n\r\n      setDynYear(selDt.getFullYear());\r\n      setDynMonth(selDt.getMonth() + 1);\r\n      setGetDate(fieldFindDaysInMonth);\r\n      setGetStartDay(fieldFindStartDayInMonth);\r\n\r\n      switch (selectType) {\r\n        case \"single\":\r\n          setBaseId([dateIdFromFiled]);\r\n          setStartDate(setCurrentTime(actualDateFromFiled));\r\n          break;\r\n        case \"multiple\":\r\n          if (!baseId.includes(dateIdFromFiled)) {\r\n            setBaseId((oldArray) => [...oldArray, dateIdFromFiled]);\r\n            setMultipleDate((oldArray: string) => [...oldArray, setCurrentTime(actualDateFromFiled)]);\r\n          }\r\n          break;\r\n        default:\r\n      }\r\n    } else {\r\n      rangeCalculaterFromField(da);\r\n    }\r\n  };\r\n\r\n  /**\r\n   *@returns {string} seletedDate from calendar single || multiple || range\r\n   */\r\n  const selectedDateFromCldFunc = () => {\r\n    let selDate;\r\n    if (selectType === \"single\") {\r\n      selDate = startDate;\r\n    } else if (selectType === \"multiple\") {\r\n      selDate = multipleDate ? multipleDate[multipleDate.length - 1] : \"\";\r\n    } else {\r\n      selDate = startAndendDate;\r\n    }\r\n    return selDate;\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {calenderDates?.length > 0 &&\r\n    <div\r\n      className={`${\r\n        duelSlots.length > 0 ? \"cld_slotWidth\" : singleSlots.length > 0 ? \"cld_avlSlotWidth\" : \"cld_noslotWidth\"\r\n      } cld_container`}\r\n    >\r\n      <div>\r\n        {showDateInputField && (\r\n          <CldDateField\r\n            selectedDate={(da: object) => setFieldValue(da)}\r\n            selectType={selectType}\r\n            selectedDateFromCld={selectedDateFromCldFunc()}\r\n            disableState={disableState}\r\n            propsMinDate={minDate}\r\n            propsMaxDate={maxDate}\r\n            disableCertainDate={disableCertainDate}\r\n            disableDay={disableDay}\r\n            daysInMonth={daysInMonth}\r\n            showDatelabel={showDatelabel}\r\n            templateClr={templateClr}\r\n          />\r\n        )}\r\n        <div className={`${showArrow ? \"cld_btnAlign\" : \"cld_monthYearAlign\"}`}>\r\n          {showArrow && (\r\n            <button\r\n              disabled={disableLeftArrow(disableState, disableArrow, dynYear, dynMonth, minDate)}\r\n              onClick={() => handleLeft()}\r\n              type=\"button\"\r\n            >\r\n              ◀\r\n            </button>\r\n          )}\r\n          <div className=\"cld_showDays\">\r\n            <SelectMonthField\r\n              disableState={disableState}\r\n              dynMonth={dynMonth}\r\n              dynYear={dynYear}\r\n              handleChangeSelect={(e: any) => handleSelectMonth(e)}\r\n              showSelectMonthArrow={showSelectMonthArrow}\r\n              minDate={minDate}\r\n              maxDate={maxDate}\r\n            />\r\n            <SelectYearField\r\n              startAndendYearOptions={startAndendYearOptions}\r\n              dynYear={dynYear}\r\n              handleChangeSelect={(e: any) => handleSelectYear(e)}\r\n              showSelectYearArrow={showSelectYearArrow}\r\n            />\r\n          </div>\r\n          {showArrow && (\r\n            <button\r\n              // disabled={(disableState === \"future\" && disableArrow) || (dynYear === 2100 && dynMonth === 12)}\r\n              disabled={disableRightArrow(disableState, disableArrow, dynYear, dynMonth, maxDate)}\r\n              onClick={() => handleRight()}\r\n              type=\"button\"\r\n            >\r\n              ▶\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n      <table onMouseLeave={rangeId.length === 1 ? () => setInRange(null) : undefined}>\r\n        <thead>\r\n          <tr>\r\n            {days.map((d) => (\r\n              <th key={d}>{d}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>{calenderDates}</tbody>\r\n      </table>\r\n      {slotInfo && (\r\n        <Legends\r\n          templateClr={templateClr}\r\n          singleSlotState={singleSlots.length > 0}\r\n          duelSlotState={duelSlots.length > 0}\r\n        />\r\n      )}\r\n    </div>}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Calendar;\r\n","import * as React from 'react';\nimport Calendar from \"./Calendar\";\nimport './index.scss';\n\ntype AppParamaterProps = {\n  selectDateType: string,\n  disableDates: string,\n  disableCertainDates: Array<object>,\n  duelSlotDates: Array<object>,\n  singleSlotDates: Array<object>,\n  onSelect: (date: Date) => Date,\n  slotInfo: boolean,\n  showDateInputField: boolean,\n  showArrow: boolean,\n  showSelectMonthArrow: boolean,\n  showSelectYearArrow: boolean,\n  showDatelabel: boolean,\n  templateClr: string,\n  minDate: string,\n  maxDate: string,\n  disableDays: Array<string>,\n  defaultValue: any,\n};\n\nconst App = ({\n  selectDateType,\n  disableDates,\n  disableCertainDates,\n  duelSlotDates,\n  singleSlotDates,\n  onSelect,\n  slotInfo,\n  showDateInputField,\n  showArrow,\n  showSelectMonthArrow,\n  showSelectYearArrow,\n  showDatelabel,\n  templateClr,\n  minDate,\n  maxDate,\n  disableDays,\n  defaultValue\n}: AppParamaterProps) => {\n  return (\n    <Calendar\n      selectDateType={selectDateType}\n      disableDates={disableDates}\n      disableCertainDates={disableCertainDates}\n      duelSlotDates={duelSlotDates}\n      singleSlotDates={singleSlotDates}\n      onSelect={(date: Date) => onSelect && onSelect(date)}\n      slotInfo={slotInfo}\n      showDateInputField={showDateInputField}\n      showArrow={showArrow}\n      showSelectMonthArrow={showSelectMonthArrow}\n      showSelectYearArrow={showSelectYearArrow}\n      showDatelabel={showDatelabel}\n      templateClr={templateClr}\n      minDate={minDate}\n      maxDate={maxDate}\n      disableDays={disableDays}\n      defaultValue={defaultValue}\n    />\n  )\n}\n\nexport default App\n\n\n"],"names":["days","__read","useState","useMemo","useEffect","React.createElement","months","currentDate","useCallback"],"mappings":"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"}